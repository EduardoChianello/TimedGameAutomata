%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 236 575 555
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Quarta-feira, 1 de Maio de 2019 09h50min23s BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
283 162 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
283.000 0.00000 l
283.000 162.000 l
0.00000 162.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
283.000 0.00000 l
283.000 162.000 l
0.00000 162.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
h
f
Q
[ 1.00000 0.00000 0.00000 1.00000 317.000 175.000 ] concat
.258824 .627451 .658824 RG
newpath
-245.938 -153.000 m
-247.078 -153.000 l
-247.078 -163.016 l
-245.859 -163.016 l
-245.859 -159.453 l
-245.339 -160.099 -244.672 -160.422 -243.859 -160.422  c
-243.411 -160.422 -242.990 -160.333 -242.594 -160.156  c
-242.198 -159.979 -241.870 -159.727 -241.609 -159.398  c
-241.349 -159.070 -241.146 -158.677 -241.000 -158.219  c
-240.854 -157.760 -240.781 -157.266 -240.781 -156.734  c
-240.781 -155.495 -241.091 -154.534 -241.711 -153.852  c
-242.331 -153.169 -243.068 -152.828 -243.922 -152.828  c
-244.776 -152.828 -245.448 -153.188 -245.938 -153.906  c
-245.938 -153.000 l
h
-245.953 -156.688 m
-245.953 -155.812 -245.833 -155.182 -245.594 -154.797  c
-245.208 -154.161 -244.688 -153.844 -244.031 -153.844  c
-243.490 -153.844 -243.023 -154.078 -242.633 -154.547  c
-242.242 -155.016 -242.047 -155.714 -242.047 -156.641  c
-242.047 -157.589 -242.234 -158.286 -242.609 -158.734  c
-242.984 -159.182 -243.438 -159.406 -243.969 -159.406  c
-244.510 -159.406 -244.977 -159.174 -245.367 -158.711  c
-245.758 -158.247 -245.953 -157.573 -245.953 -156.688  c
h
-238.995 -153.000 m
-238.995 -159.297 l
-240.089 -159.297 l
-240.089 -160.266 l
-238.995 -160.266 l
-238.995 -161.031 l
-238.995 -161.521 -238.953 -161.885 -238.870 -162.125  c
-238.745 -162.438 -238.534 -162.693 -238.237 -162.891  c
-237.940 -163.089 -237.521 -163.188 -236.979 -163.188  c
-236.636 -163.188 -236.256 -163.146 -235.839 -163.062  c
-236.026 -162.000 l
-236.276 -162.042 -236.516 -162.062 -236.745 -162.062  c
-237.120 -162.062 -237.386 -161.984 -237.542 -161.828  c
-237.698 -161.672 -237.776 -161.375 -237.776 -160.938  c
-237.776 -160.266 l
-236.354 -160.266 l
-236.354 -159.297 l
-237.776 -159.297 l
-237.776 -153.000 l
-238.995 -153.000 l
h
-231.105 -153.000 m
-232.340 -153.000 l
-232.340 -160.844 l
-232.632 -160.562 -233.020 -160.279 -233.504 -159.992  c
-233.988 -159.706 -234.418 -159.495 -234.793 -159.359  c
-234.793 -160.547 l
-234.105 -160.870 -233.504 -161.260 -232.988 -161.719  c
-232.473 -162.177 -232.111 -162.625 -231.902 -163.062  c
-231.105 -163.062 l
-231.105 -153.000 l
h
-221.491 -154.188 m
-221.491 -153.000 l
-228.116 -153.000 l
-228.127 -153.292 -228.080 -153.578 -227.976 -153.859  c
-227.799 -154.307 -227.525 -154.750 -227.155 -155.188  c
-226.785 -155.625 -226.252 -156.130 -225.554 -156.703  c
-224.460 -157.599 -223.723 -158.307 -223.343 -158.828  c
-222.963 -159.349 -222.772 -159.844 -222.772 -160.312  c
-222.772 -160.802 -222.947 -161.214 -223.296 -161.547  c
-223.645 -161.880 -224.095 -162.047 -224.647 -162.047  c
-225.241 -162.047 -225.718 -161.870 -226.077 -161.516  c
-226.437 -161.161 -226.616 -160.667 -226.616 -160.031  c
-227.882 -160.172 l
-227.799 -161.109 -227.473 -161.826 -226.905 -162.320  c
-226.338 -162.815 -225.580 -163.062 -224.632 -163.062  c
-223.663 -163.062 -222.900 -162.797 -222.343 -162.266  c
-221.785 -161.734 -221.507 -161.073 -221.507 -160.281  c
-221.507 -159.875 -221.588 -159.479 -221.749 -159.094  c
-221.910 -158.708 -222.181 -158.302 -222.562 -157.875  c
-222.942 -157.448 -223.575 -156.859 -224.460 -156.109  c
-225.200 -155.495 -225.674 -155.076 -225.882 -154.852  c
-226.090 -154.628 -226.262 -154.406 -226.397 -154.188  c
-221.491 -154.188 l
h
-217.518 -155.469 m
-217.528 -155.635 -217.533 -155.760 -217.533 -155.844  c
-217.533 -156.323 -217.465 -156.740 -217.330 -157.094  c
-217.226 -157.354 -217.064 -157.620 -216.846 -157.891  c
-216.679 -158.089 -216.382 -158.375 -215.955 -158.750  c
-215.528 -159.125 -215.252 -159.424 -215.127 -159.648  c
-215.002 -159.872 -214.939 -160.115 -214.939 -160.375  c
-214.939 -160.854 -215.124 -161.276 -215.494 -161.641  c
-215.864 -162.005 -216.320 -162.188 -216.861 -162.188  c
-217.393 -162.188 -217.833 -162.023 -218.182 -161.695  c
-218.531 -161.367 -218.762 -160.854 -218.877 -160.156  c
-220.143 -160.297 l
-220.028 -161.234 -219.689 -161.951 -219.127 -162.445  c
-218.564 -162.940 -217.820 -163.188 -216.893 -163.188  c
-215.913 -163.188 -215.132 -162.922 -214.549 -162.391  c
-213.965 -161.859 -213.674 -161.214 -213.674 -160.453  c
-213.674 -160.016 -213.775 -159.612 -213.979 -159.242  c
-214.182 -158.872 -214.580 -158.427 -215.174 -157.906  c
-215.580 -157.552 -215.846 -157.289 -215.971 -157.117  c
-216.096 -156.945 -216.187 -156.750 -216.244 -156.531  c
-216.301 -156.312 -216.335 -155.958 -216.346 -155.469  c
-217.518 -155.469 l
h
-217.596 -153.000 m
-217.596 -154.406 l
-216.205 -154.406 l
-216.205 -153.000 l
-217.596 -153.000 l
h
f
newpath
-125.938 -153.000 m
-127.078 -153.000 l
-127.078 -163.016 l
-125.859 -163.016 l
-125.859 -159.453 l
-125.339 -160.099 -124.672 -160.422 -123.859 -160.422  c
-123.411 -160.422 -122.990 -160.333 -122.594 -160.156  c
-122.198 -159.979 -121.870 -159.727 -121.609 -159.398  c
-121.349 -159.070 -121.146 -158.677 -121.000 -158.219  c
-120.854 -157.760 -120.781 -157.266 -120.781 -156.734  c
-120.781 -155.495 -121.091 -154.534 -121.711 -153.852  c
-122.331 -153.169 -123.068 -152.828 -123.922 -152.828  c
-124.776 -152.828 -125.448 -153.188 -125.938 -153.906  c
-125.938 -153.000 l
h
-125.953 -156.688 m
-125.953 -155.812 -125.833 -155.182 -125.594 -154.797  c
-125.208 -154.161 -124.688 -153.844 -124.031 -153.844  c
-123.490 -153.844 -123.023 -154.078 -122.633 -154.547  c
-122.242 -155.016 -122.047 -155.714 -122.047 -156.641  c
-122.047 -157.589 -122.234 -158.286 -122.609 -158.734  c
-122.984 -159.182 -123.438 -159.406 -123.969 -159.406  c
-124.510 -159.406 -124.977 -159.174 -125.367 -158.711  c
-125.758 -158.247 -125.953 -157.573 -125.953 -156.688  c
h
-118.995 -153.000 m
-118.995 -159.297 l
-120.089 -159.297 l
-120.089 -160.266 l
-118.995 -160.266 l
-118.995 -161.031 l
-118.995 -161.521 -118.953 -161.885 -118.870 -162.125  c
-118.745 -162.438 -118.534 -162.693 -118.237 -162.891  c
-117.940 -163.089 -117.521 -163.188 -116.979 -163.188  c
-116.636 -163.188 -116.256 -163.146 -115.839 -163.062  c
-116.026 -162.000 l
-116.276 -162.042 -116.516 -162.062 -116.745 -162.062  c
-117.120 -162.062 -117.386 -161.984 -117.542 -161.828  c
-117.698 -161.672 -117.776 -161.375 -117.776 -160.938  c
-117.776 -160.266 l
-116.354 -160.266 l
-116.354 -159.297 l
-117.776 -159.297 l
-117.776 -153.000 l
-118.995 -153.000 l
h
-109.277 -154.188 m
-109.277 -153.000 l
-115.902 -153.000 l
-115.913 -153.292 -115.866 -153.578 -115.762 -153.859  c
-115.585 -154.307 -115.311 -154.750 -114.941 -155.188  c
-114.572 -155.625 -114.038 -156.130 -113.340 -156.703  c
-112.246 -157.599 -111.509 -158.307 -111.129 -158.828  c
-110.749 -159.349 -110.559 -159.844 -110.559 -160.312  c
-110.559 -160.802 -110.733 -161.214 -111.082 -161.547  c
-111.431 -161.880 -111.882 -162.047 -112.434 -162.047  c
-113.027 -162.047 -113.504 -161.870 -113.863 -161.516  c
-114.223 -161.161 -114.402 -160.667 -114.402 -160.031  c
-115.668 -160.172 l
-115.585 -161.109 -115.259 -161.826 -114.691 -162.320  c
-114.124 -162.815 -113.366 -163.062 -112.418 -163.062  c
-111.449 -163.062 -110.686 -162.797 -110.129 -162.266  c
-109.572 -161.734 -109.293 -161.073 -109.293 -160.281  c
-109.293 -159.875 -109.374 -159.479 -109.535 -159.094  c
-109.697 -158.708 -109.967 -158.302 -110.348 -157.875  c
-110.728 -157.448 -111.361 -156.859 -112.246 -156.109  c
-112.986 -155.495 -113.460 -155.076 -113.668 -154.852  c
-113.876 -154.628 -114.048 -154.406 -114.184 -154.188  c
-109.277 -154.188 l
h
-103.319 -153.000 m
-104.554 -153.000 l
-104.554 -160.844 l
-104.845 -160.562 -105.233 -160.279 -105.718 -159.992  c
-106.202 -159.706 -106.632 -159.495 -107.007 -159.359  c
-107.007 -160.547 l
-106.319 -160.870 -105.718 -161.260 -105.202 -161.719  c
-104.687 -162.177 -104.325 -162.625 -104.116 -163.062  c
-103.319 -163.062 l
-103.319 -153.000 l
h
-97.5176 -155.469 m
-97.5280 -155.635 -97.5332 -155.760 -97.5332 -155.844  c
-97.5332 -156.323 -97.4655 -156.740 -97.3301 -157.094  c
-97.2259 -157.354 -97.0645 -157.620 -96.8457 -157.891  c
-96.6790 -158.089 -96.3822 -158.375 -95.9551 -158.750  c
-95.5280 -159.125 -95.2520 -159.424 -95.1270 -159.648  c
-95.0020 -159.872 -94.9395 -160.115 -94.9395 -160.375  c
-94.9395 -160.854 -95.1243 -161.276 -95.4941 -161.641  c
-95.8639 -162.005 -96.3197 -162.188 -96.8613 -162.188  c
-97.3926 -162.188 -97.8327 -162.023 -98.1816 -161.695  c
-98.5306 -161.367 -98.7624 -160.854 -98.8770 -160.156  c
-100.143 -160.297 l
-100.028 -161.234 -99.6895 -161.951 -99.1270 -162.445  c
-98.5645 -162.940 -97.8197 -163.188 -96.8926 -163.188  c
-95.9134 -163.188 -95.1322 -162.922 -94.5488 -162.391  c
-93.9655 -161.859 -93.6738 -161.214 -93.6738 -160.453  c
-93.6738 -160.016 -93.7754 -159.612 -93.9785 -159.242  c
-94.1816 -158.872 -94.5801 -158.427 -95.1738 -157.906  c
-95.5801 -157.552 -95.8457 -157.289 -95.9707 -157.117  c
-96.0957 -156.945 -96.1868 -156.750 -96.2441 -156.531  c
-96.3014 -156.312 -96.3353 -155.958 -96.3457 -155.469  c
-97.5176 -155.469 l
h
-97.5957 -153.000 m
-97.5957 -154.406 l
-96.2051 -154.406 l
-96.2051 -153.000 l
-97.5957 -153.000 l
h
f
newpath
-269.938 -81.0000 m
-271.078 -81.0000 l
-271.078 -91.0156 l
-269.859 -91.0156 l
-269.859 -87.4531 l
-269.339 -88.0990 -268.672 -88.4219 -267.859 -88.4219  c
-267.411 -88.4219 -266.990 -88.3333 -266.594 -88.1562  c
-266.198 -87.9792 -265.870 -87.7266 -265.609 -87.3984  c
-265.349 -87.0703 -265.146 -86.6771 -265.000 -86.2188  c
-264.854 -85.7604 -264.781 -85.2656 -264.781 -84.7344  c
-264.781 -83.4948 -265.091 -82.5339 -265.711 -81.8516  c
-266.331 -81.1693 -267.068 -80.8281 -267.922 -80.8281  c
-268.776 -80.8281 -269.448 -81.1875 -269.938 -81.9062  c
-269.938 -81.0000 l
h
-269.953 -84.6875 m
-269.953 -83.8125 -269.833 -83.1823 -269.594 -82.7969  c
-269.208 -82.1615 -268.688 -81.8438 -268.031 -81.8438  c
-267.490 -81.8438 -267.023 -82.0781 -266.633 -82.5469  c
-266.242 -83.0156 -266.047 -83.7135 -266.047 -84.6406  c
-266.047 -85.5885 -266.234 -86.2865 -266.609 -86.7344  c
-266.984 -87.1823 -267.438 -87.4062 -267.969 -87.4062  c
-268.510 -87.4062 -268.977 -87.1745 -269.367 -86.7109  c
-269.758 -86.2474 -269.953 -85.5729 -269.953 -84.6875  c
h
-262.995 -81.0000 m
-262.995 -87.2969 l
-264.089 -87.2969 l
-264.089 -88.2656 l
-262.995 -88.2656 l
-262.995 -89.0312 l
-262.995 -89.5208 -262.953 -89.8854 -262.870 -90.1250  c
-262.745 -90.4375 -262.534 -90.6927 -262.237 -90.8906  c
-261.940 -91.0885 -261.521 -91.1875 -260.979 -91.1875  c
-260.636 -91.1875 -260.256 -91.1458 -259.839 -91.0625  c
-260.026 -90.0000 l
-260.276 -90.0417 -260.516 -90.0625 -260.745 -90.0625  c
-261.120 -90.0625 -261.386 -89.9844 -261.542 -89.8281  c
-261.698 -89.6719 -261.776 -89.3750 -261.776 -88.9375  c
-261.776 -88.2656 l
-260.354 -88.2656 l
-260.354 -87.2969 l
-261.776 -87.2969 l
-261.776 -81.0000 l
-262.995 -81.0000 l
h
-253.277 -82.1875 m
-253.277 -81.0000 l
-259.902 -81.0000 l
-259.913 -81.2917 -259.866 -81.5781 -259.762 -81.8594  c
-259.585 -82.3073 -259.311 -82.7500 -258.941 -83.1875  c
-258.572 -83.6250 -258.038 -84.1302 -257.340 -84.7031  c
-256.246 -85.5990 -255.509 -86.3073 -255.129 -86.8281  c
-254.749 -87.3490 -254.559 -87.8438 -254.559 -88.3125  c
-254.559 -88.8021 -254.733 -89.2135 -255.082 -89.5469  c
-255.431 -89.8802 -255.882 -90.0469 -256.434 -90.0469  c
-257.027 -90.0469 -257.504 -89.8698 -257.863 -89.5156  c
-258.223 -89.1615 -258.402 -88.6667 -258.402 -88.0312  c
-259.668 -88.1719 l
-259.585 -89.1094 -259.259 -89.8255 -258.691 -90.3203  c
-258.124 -90.8151 -257.366 -91.0625 -256.418 -91.0625  c
-255.449 -91.0625 -254.686 -90.7969 -254.129 -90.2656  c
-253.572 -89.7344 -253.293 -89.0729 -253.293 -88.2812  c
-253.293 -87.8750 -253.374 -87.4792 -253.535 -87.0938  c
-253.697 -86.7083 -253.967 -86.3021 -254.348 -85.8750  c
-254.728 -85.4479 -255.361 -84.8594 -256.246 -84.1094  c
-256.986 -83.4948 -257.460 -83.0755 -257.668 -82.8516  c
-257.876 -82.6276 -258.048 -82.4062 -258.184 -82.1875  c
-253.277 -82.1875 l
h
-247.319 -81.0000 m
-248.554 -81.0000 l
-248.554 -88.8438 l
-248.845 -88.5625 -249.233 -88.2786 -249.718 -87.9922  c
-250.202 -87.7057 -250.632 -87.4948 -251.007 -87.3594  c
-251.007 -88.5469 l
-250.319 -88.8698 -249.718 -89.2604 -249.202 -89.7188  c
-248.687 -90.1771 -248.325 -90.6250 -248.116 -91.0625  c
-247.319 -91.0625 l
-247.319 -81.0000 l
h
-241.518 -83.4688 m
-241.528 -83.6354 -241.533 -83.7604 -241.533 -83.8438  c
-241.533 -84.3229 -241.465 -84.7396 -241.330 -85.0938  c
-241.226 -85.3542 -241.064 -85.6198 -240.846 -85.8906  c
-240.679 -86.0885 -240.382 -86.3750 -239.955 -86.7500  c
-239.528 -87.1250 -239.252 -87.4245 -239.127 -87.6484  c
-239.002 -87.8724 -238.939 -88.1146 -238.939 -88.3750  c
-238.939 -88.8542 -239.124 -89.2760 -239.494 -89.6406  c
-239.864 -90.0052 -240.320 -90.1875 -240.861 -90.1875  c
-241.393 -90.1875 -241.833 -90.0234 -242.182 -89.6953  c
-242.531 -89.3672 -242.762 -88.8542 -242.877 -88.1562  c
-244.143 -88.2969 l
-244.028 -89.2344 -243.689 -89.9505 -243.127 -90.4453  c
-242.564 -90.9401 -241.820 -91.1875 -240.893 -91.1875  c
-239.913 -91.1875 -239.132 -90.9219 -238.549 -90.3906  c
-237.965 -89.8594 -237.674 -89.2135 -237.674 -88.4531  c
-237.674 -88.0156 -237.775 -87.6120 -237.979 -87.2422  c
-238.182 -86.8724 -238.580 -86.4271 -239.174 -85.9062  c
-239.580 -85.5521 -239.846 -85.2891 -239.971 -85.1172  c
-240.096 -84.9453 -240.187 -84.7500 -240.244 -84.5312  c
-240.301 -84.3125 -240.335 -83.9583 -240.346 -83.4688  c
-241.518 -83.4688 l
h
-241.596 -81.0000 m
-241.596 -82.4062 l
-240.205 -82.4062 l
-240.205 -81.0000 l
-241.596 -81.0000 l
h
f
newpath
-101.938 -81.0000 m
-103.078 -81.0000 l
-103.078 -91.0156 l
-101.859 -91.0156 l
-101.859 -87.4531 l
-101.339 -88.0990 -100.672 -88.4219 -99.8594 -88.4219  c
-99.4115 -88.4219 -98.9896 -88.3333 -98.5938 -88.1562  c
-98.1979 -87.9792 -97.8698 -87.7266 -97.6094 -87.3984  c
-97.3490 -87.0703 -97.1458 -86.6771 -97.0000 -86.2188  c
-96.8542 -85.7604 -96.7812 -85.2656 -96.7812 -84.7344  c
-96.7812 -83.4948 -97.0911 -82.5339 -97.7109 -81.8516  c
-98.3307 -81.1693 -99.0677 -80.8281 -99.9219 -80.8281  c
-100.776 -80.8281 -101.448 -81.1875 -101.938 -81.9062  c
-101.938 -81.0000 l
h
-101.953 -84.6875 m
-101.953 -83.8125 -101.833 -83.1823 -101.594 -82.7969  c
-101.208 -82.1615 -100.688 -81.8438 -100.031 -81.8438  c
-99.4896 -81.8438 -99.0234 -82.0781 -98.6328 -82.5469  c
-98.2422 -83.0156 -98.0469 -83.7135 -98.0469 -84.6406  c
-98.0469 -85.5885 -98.2344 -86.2865 -98.6094 -86.7344  c
-98.9844 -87.1823 -99.4375 -87.4062 -99.9688 -87.4062  c
-100.510 -87.4062 -100.977 -87.1745 -101.367 -86.7109  c
-101.758 -86.2474 -101.953 -85.5729 -101.953 -84.6875  c
h
-94.9951 -81.0000 m
-94.9951 -87.2969 l
-96.0889 -87.2969 l
-96.0889 -88.2656 l
-94.9951 -88.2656 l
-94.9951 -89.0312 l
-94.9951 -89.5208 -94.9535 -89.8854 -94.8701 -90.1250  c
-94.7451 -90.4375 -94.5342 -90.6927 -94.2373 -90.8906  c
-93.9404 -91.0885 -93.5212 -91.1875 -92.9795 -91.1875  c
-92.6357 -91.1875 -92.2555 -91.1458 -91.8389 -91.0625  c
-92.0264 -90.0000 l
-92.2764 -90.0417 -92.5160 -90.0625 -92.7451 -90.0625  c
-93.1201 -90.0625 -93.3857 -89.9844 -93.5420 -89.8281  c
-93.6982 -89.6719 -93.7764 -89.3750 -93.7764 -88.9375  c
-93.7764 -88.2656 l
-92.3545 -88.2656 l
-92.3545 -87.2969 l
-93.7764 -87.2969 l
-93.7764 -81.0000 l
-94.9951 -81.0000 l
h
-87.1055 -81.0000 m
-88.3398 -81.0000 l
-88.3398 -88.8438 l
-88.6315 -88.5625 -89.0195 -88.2786 -89.5039 -87.9922  c
-89.9883 -87.7057 -90.4180 -87.4948 -90.7930 -87.3594  c
-90.7930 -88.5469 l
-90.1055 -88.8698 -89.5039 -89.2604 -88.9883 -89.7188  c
-88.4727 -90.1771 -88.1107 -90.6250 -87.9023 -91.0625  c
-87.1055 -91.0625 l
-87.1055 -81.0000 l
h
-77.4912 -82.1875 m
-77.4912 -81.0000 l
-84.1162 -81.0000 l
-84.1266 -81.2917 -84.0798 -81.5781 -83.9756 -81.8594  c
-83.7985 -82.3073 -83.5251 -82.7500 -83.1553 -83.1875  c
-82.7855 -83.6250 -82.2516 -84.1302 -81.5537 -84.7031  c
-80.4600 -85.5990 -79.7230 -86.3073 -79.3428 -86.8281  c
-78.9626 -87.3490 -78.7725 -87.8438 -78.7725 -88.3125  c
-78.7725 -88.8021 -78.9469 -89.2135 -79.2959 -89.5469  c
-79.6449 -89.8802 -80.0954 -90.0469 -80.6475 -90.0469  c
-81.2412 -90.0469 -81.7178 -89.8698 -82.0771 -89.5156  c
-82.4365 -89.1615 -82.6162 -88.6667 -82.6162 -88.0312  c
-83.8818 -88.1719 l
-83.7985 -89.1094 -83.4730 -89.8255 -82.9053 -90.3203  c
-82.3376 -90.8151 -81.5798 -91.0625 -80.6318 -91.0625  c
-79.6631 -91.0625 -78.9001 -90.7969 -78.3428 -90.2656  c
-77.7855 -89.7344 -77.5068 -89.0729 -77.5068 -88.2812  c
-77.5068 -87.8750 -77.5876 -87.4792 -77.7490 -87.0938  c
-77.9105 -86.7083 -78.1813 -86.3021 -78.5615 -85.8750  c
-78.9417 -85.4479 -79.5745 -84.8594 -80.4600 -84.1094  c
-81.1995 -83.4948 -81.6735 -83.0755 -81.8818 -82.8516  c
-82.0902 -82.6276 -82.2620 -82.4062 -82.3975 -82.1875  c
-77.4912 -82.1875 l
h
-73.5176 -83.4688 m
-73.5280 -83.6354 -73.5332 -83.7604 -73.5332 -83.8438  c
-73.5332 -84.3229 -73.4655 -84.7396 -73.3301 -85.0938  c
-73.2259 -85.3542 -73.0645 -85.6198 -72.8457 -85.8906  c
-72.6790 -86.0885 -72.3822 -86.3750 -71.9551 -86.7500  c
-71.5280 -87.1250 -71.2520 -87.4245 -71.1270 -87.6484  c
-71.0020 -87.8724 -70.9395 -88.1146 -70.9395 -88.3750  c
-70.9395 -88.8542 -71.1243 -89.2760 -71.4941 -89.6406  c
-71.8639 -90.0052 -72.3197 -90.1875 -72.8613 -90.1875  c
-73.3926 -90.1875 -73.8327 -90.0234 -74.1816 -89.6953  c
-74.5306 -89.3672 -74.7624 -88.8542 -74.8770 -88.1562  c
-76.1426 -88.2969 l
-76.0280 -89.2344 -75.6895 -89.9505 -75.1270 -90.4453  c
-74.5645 -90.9401 -73.8197 -91.1875 -72.8926 -91.1875  c
-71.9134 -91.1875 -71.1322 -90.9219 -70.5488 -90.3906  c
-69.9655 -89.8594 -69.6738 -89.2135 -69.6738 -88.4531  c
-69.6738 -88.0156 -69.7754 -87.6120 -69.9785 -87.2422  c
-70.1816 -86.8724 -70.5801 -86.4271 -71.1738 -85.9062  c
-71.5801 -85.5521 -71.8457 -85.2891 -71.9707 -85.1172  c
-72.0957 -84.9453 -72.1868 -84.7500 -72.2441 -84.5312  c
-72.3014 -84.3125 -72.3353 -83.9583 -72.3457 -83.4688  c
-73.5176 -83.4688 l
h
-73.5957 -81.0000 m
-73.5957 -82.4062 l
-72.2051 -82.4062 l
-72.2051 -81.0000 l
-73.5957 -81.0000 l
h
f
.647059 .686275 .803922 RG
newpath
-164.000 -144.000 m
-164.000 -137.373 -169.373 -132.000 -176.000 -132.000  c
-182.627 -132.000 -188.000 -137.373 -188.000 -144.000  c
-188.000 -150.627 -182.627 -156.000 -176.000 -156.000  c
-169.373 -156.000 -164.000 -150.627 -164.000 -144.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-164.000 -144.000 m
-164.000 -137.373 -169.373 -132.000 -176.000 -132.000  c
-182.627 -132.000 -188.000 -137.373 -188.000 -144.000  c
-188.000 -150.627 -182.627 -156.000 -176.000 -156.000  c
-169.373 -156.000 -164.000 -150.627 -164.000 -144.000  c
h
S
newpath
-168.000 -144.000 m
-168.000 -139.582 -171.582 -136.000 -176.000 -136.000  c
-180.418 -136.000 -184.000 -139.582 -184.000 -144.000  c
-184.000 -148.418 -180.418 -152.000 -176.000 -152.000  c
-171.582 -152.000 -168.000 -148.418 -168.000 -144.000  c
h
S
.647059 .686275 .803922 RG
newpath
-164.000 -48.0000 m
-164.000 -41.3726 -169.373 -36.0000 -176.000 -36.0000  c
-182.627 -36.0000 -188.000 -41.3726 -188.000 -48.0000  c
-188.000 -54.6274 -182.627 -60.0000 -176.000 -60.0000  c
-169.373 -60.0000 -164.000 -54.6274 -164.000 -48.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-164.000 -48.0000 m
-164.000 -41.3726 -169.373 -36.0000 -176.000 -36.0000  c
-182.627 -36.0000 -188.000 -41.3726 -188.000 -48.0000  c
-188.000 -54.6274 -182.627 -60.0000 -176.000 -60.0000  c
-169.373 -60.0000 -164.000 -54.6274 -164.000 -48.0000  c
h
S
newpath
-172.786 -51.8302 m
-174.815 -53.5326 -177.819 -53.3577 -179.637 -51.4312  c
-181.454 -49.5048 -181.454 -46.4952 -179.637 -44.5688  c
-177.819 -42.6423 -174.815 -42.4674 -172.786 -44.1698  c
S
.647059 .686275 .803922 RG
newpath
-36.0000 -144.000 m
-36.0000 -137.373 -41.3726 -132.000 -48.0000 -132.000  c
-54.6274 -132.000 -60.0000 -137.373 -60.0000 -144.000  c
-60.0000 -150.627 -54.6274 -156.000 -48.0000 -156.000  c
-41.3726 -156.000 -36.0000 -150.627 -36.0000 -144.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-36.0000 -144.000 m
-36.0000 -137.373 -41.3726 -132.000 -48.0000 -132.000  c
-54.6274 -132.000 -60.0000 -137.373 -60.0000 -144.000  c
-60.0000 -150.627 -54.6274 -156.000 -48.0000 -156.000  c
-41.3726 -156.000 -36.0000 -150.627 -36.0000 -144.000  c
h
S
.647059 .686275 .803922 RG
newpath
-292.000 -144.000 m
-292.000 -137.373 -297.373 -132.000 -304.000 -132.000  c
-310.627 -132.000 -316.000 -137.373 -316.000 -144.000  c
-316.000 -150.627 -310.627 -156.000 -304.000 -156.000  c
-297.373 -156.000 -292.000 -150.627 -292.000 -144.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-292.000 -144.000 m
-292.000 -137.373 -297.373 -132.000 -304.000 -132.000  c
-310.627 -132.000 -316.000 -137.373 -316.000 -144.000  c
-316.000 -150.627 -310.627 -156.000 -304.000 -156.000  c
-297.373 -156.000 -292.000 -150.627 -292.000 -144.000  c
h
S
.549020 .219608 .388235 RG
newpath
-57.3750 -162.219 m
-56.1250 -162.328 l
-56.0625 -161.828 -55.9219 -161.417 -55.7031 -161.094  c
-55.4844 -160.771 -55.1484 -160.510 -54.6953 -160.312  c
-54.2422 -160.115 -53.7292 -160.016 -53.1562 -160.016  c
-52.6562 -160.016 -52.2109 -160.091 -51.8203 -160.242  c
-51.4297 -160.393 -51.1406 -160.599 -50.9531 -160.859  c
-50.7656 -161.120 -50.6719 -161.406 -50.6719 -161.719  c
-50.6719 -162.031 -50.7630 -162.305 -50.9453 -162.539  c
-51.1276 -162.773 -51.4271 -162.974 -51.8438 -163.141  c
-52.1146 -163.245 -52.7109 -163.406 -53.6328 -163.625  c
-54.5547 -163.844 -55.1979 -164.052 -55.5625 -164.250  c
-56.0417 -164.500 -56.3984 -164.810 -56.6328 -165.180  c
-56.8672 -165.549 -56.9844 -165.969 -56.9844 -166.438  c
-56.9844 -166.938 -56.8411 -167.409 -56.5547 -167.852  c
-56.2682 -168.294 -55.8490 -168.628 -55.2969 -168.852  c
-54.7448 -169.076 -54.1302 -169.188 -53.4531 -169.188  c
-52.7135 -169.188 -52.0599 -169.068 -51.4922 -168.828  c
-50.9245 -168.589 -50.4896 -168.237 -50.1875 -167.773  c
-49.8854 -167.310 -49.7188 -166.786 -49.6875 -166.203  c
-50.9688 -166.109 l
-51.0312 -166.734 -51.2604 -167.211 -51.6562 -167.539  c
-52.0521 -167.867 -52.6354 -168.031 -53.4062 -168.031  c
-54.2083 -168.031 -54.7917 -167.883 -55.1562 -167.586  c
-55.5208 -167.289 -55.7031 -166.932 -55.7031 -166.516  c
-55.7031 -166.161 -55.5729 -165.865 -55.3125 -165.625  c
-55.0625 -165.396 -54.3984 -165.159 -53.3203 -164.914  c
-52.2422 -164.669 -51.5052 -164.458 -51.1094 -164.281  c
-50.5260 -164.010 -50.0938 -163.669 -49.8125 -163.258  c
-49.5312 -162.846 -49.3906 -162.370 -49.3906 -161.828  c
-49.3906 -161.297 -49.5443 -160.794 -49.8516 -160.320  c
-50.1589 -159.846 -50.5990 -159.479 -51.1719 -159.219  c
-51.7448 -158.958 -52.3854 -158.828 -53.0938 -158.828  c
-54.0000 -158.828 -54.7604 -158.961 -55.3750 -159.227  c
-55.9896 -159.492 -56.4714 -159.891 -56.8203 -160.422  c
-57.1693 -160.953 -57.3542 -161.552 -57.3750 -162.219  c
h
-43.4434 -159.000 m
-44.6777 -159.000 l
-44.6777 -166.844 l
-44.9694 -166.562 -45.3574 -166.279 -45.8418 -165.992  c
-46.3262 -165.706 -46.7559 -165.495 -47.1309 -165.359  c
-47.1309 -166.547 l
-46.4434 -166.870 -45.8418 -167.260 -45.3262 -167.719  c
-44.8105 -168.177 -44.4486 -168.625 -44.2402 -169.062  c
-43.4434 -169.062 l
-43.4434 -159.000 l
h
f
newpath
-185.375 -162.219 m
-184.125 -162.328 l
-184.062 -161.828 -183.922 -161.417 -183.703 -161.094  c
-183.484 -160.771 -183.148 -160.510 -182.695 -160.312  c
-182.242 -160.115 -181.729 -160.016 -181.156 -160.016  c
-180.656 -160.016 -180.211 -160.091 -179.820 -160.242  c
-179.430 -160.393 -179.141 -160.599 -178.953 -160.859  c
-178.766 -161.120 -178.672 -161.406 -178.672 -161.719  c
-178.672 -162.031 -178.763 -162.305 -178.945 -162.539  c
-179.128 -162.773 -179.427 -162.974 -179.844 -163.141  c
-180.115 -163.245 -180.711 -163.406 -181.633 -163.625  c
-182.555 -163.844 -183.198 -164.052 -183.562 -164.250  c
-184.042 -164.500 -184.398 -164.810 -184.633 -165.180  c
-184.867 -165.549 -184.984 -165.969 -184.984 -166.438  c
-184.984 -166.938 -184.841 -167.409 -184.555 -167.852  c
-184.268 -168.294 -183.849 -168.628 -183.297 -168.852  c
-182.745 -169.076 -182.130 -169.188 -181.453 -169.188  c
-180.714 -169.188 -180.060 -169.068 -179.492 -168.828  c
-178.924 -168.589 -178.490 -168.237 -178.188 -167.773  c
-177.885 -167.310 -177.719 -166.786 -177.688 -166.203  c
-178.969 -166.109 l
-179.031 -166.734 -179.260 -167.211 -179.656 -167.539  c
-180.052 -167.867 -180.635 -168.031 -181.406 -168.031  c
-182.208 -168.031 -182.792 -167.883 -183.156 -167.586  c
-183.521 -167.289 -183.703 -166.932 -183.703 -166.516  c
-183.703 -166.161 -183.573 -165.865 -183.312 -165.625  c
-183.062 -165.396 -182.398 -165.159 -181.320 -164.914  c
-180.242 -164.669 -179.505 -164.458 -179.109 -164.281  c
-178.526 -164.010 -178.094 -163.669 -177.812 -163.258  c
-177.531 -162.846 -177.391 -162.370 -177.391 -161.828  c
-177.391 -161.297 -177.544 -160.794 -177.852 -160.320  c
-178.159 -159.846 -178.599 -159.479 -179.172 -159.219  c
-179.745 -158.958 -180.385 -158.828 -181.094 -158.828  c
-182.000 -158.828 -182.760 -158.961 -183.375 -159.227  c
-183.990 -159.492 -184.471 -159.891 -184.820 -160.422  c
-185.169 -160.953 -185.354 -161.552 -185.375 -162.219  c
h
-176.084 -163.938 m
-176.084 -165.125 -175.962 -166.081 -175.717 -166.805  c
-175.472 -167.529 -175.110 -168.086 -174.631 -168.477  c
-174.152 -168.867 -173.548 -169.062 -172.818 -169.062  c
-172.277 -169.062 -171.803 -168.953 -171.396 -168.734  c
-170.990 -168.516 -170.654 -168.203 -170.389 -167.797  c
-170.123 -167.391 -169.917 -166.896 -169.771 -166.312  c
-169.626 -165.729 -169.553 -164.938 -169.553 -163.938  c
-169.553 -162.760 -169.673 -161.812 -169.912 -161.094  c
-170.152 -160.375 -170.511 -159.818 -170.990 -159.422  c
-171.469 -159.026 -172.079 -158.828 -172.818 -158.828  c
-173.777 -158.828 -174.532 -159.177 -175.084 -159.875  c
-175.751 -160.708 -176.084 -162.062 -176.084 -163.938  c
h
-174.818 -163.938 m
-174.818 -162.292 -174.626 -161.198 -174.240 -160.656  c
-173.855 -160.115 -173.381 -159.844 -172.818 -159.844  c
-172.245 -159.844 -171.766 -160.117 -171.381 -160.664  c
-170.995 -161.211 -170.803 -162.302 -170.803 -163.938  c
-170.803 -165.594 -170.995 -166.693 -171.381 -167.234  c
-171.766 -167.776 -172.251 -168.047 -172.834 -168.047  c
-173.396 -168.047 -173.844 -167.807 -174.178 -167.328  c
-174.605 -166.714 -174.818 -165.583 -174.818 -163.938  c
h
f
newpath
-183.375 -20.2188 m
-182.125 -20.3281 l
-182.062 -19.8281 -181.922 -19.4167 -181.703 -19.0938  c
-181.484 -18.7708 -181.148 -18.5104 -180.695 -18.3125  c
-180.242 -18.1146 -179.729 -18.0156 -179.156 -18.0156  c
-178.656 -18.0156 -178.211 -18.0911 -177.820 -18.2422  c
-177.430 -18.3932 -177.141 -18.5990 -176.953 -18.8594  c
-176.766 -19.1198 -176.672 -19.4062 -176.672 -19.7188  c
-176.672 -20.0312 -176.763 -20.3047 -176.945 -20.5391  c
-177.128 -20.7734 -177.427 -20.9740 -177.844 -21.1406  c
-178.115 -21.2448 -178.711 -21.4062 -179.633 -21.6250  c
-180.555 -21.8438 -181.198 -22.0521 -181.562 -22.2500  c
-182.042 -22.5000 -182.398 -22.8099 -182.633 -23.1797  c
-182.867 -23.5495 -182.984 -23.9688 -182.984 -24.4375  c
-182.984 -24.9375 -182.841 -25.4089 -182.555 -25.8516  c
-182.268 -26.2943 -181.849 -26.6276 -181.297 -26.8516  c
-180.745 -27.0755 -180.130 -27.1875 -179.453 -27.1875  c
-178.714 -27.1875 -178.060 -27.0677 -177.492 -26.8281  c
-176.924 -26.5885 -176.490 -26.2370 -176.188 -25.7734  c
-175.885 -25.3099 -175.719 -24.7865 -175.688 -24.2031  c
-176.969 -24.1094 l
-177.031 -24.7344 -177.260 -25.2109 -177.656 -25.5391  c
-178.052 -25.8672 -178.635 -26.0312 -179.406 -26.0312  c
-180.208 -26.0312 -180.792 -25.8828 -181.156 -25.5859  c
-181.521 -25.2891 -181.703 -24.9323 -181.703 -24.5156  c
-181.703 -24.1615 -181.573 -23.8646 -181.312 -23.6250  c
-181.062 -23.3958 -180.398 -23.1589 -179.320 -22.9141  c
-178.242 -22.6693 -177.505 -22.4583 -177.109 -22.2812  c
-176.526 -22.0104 -176.094 -21.6693 -175.812 -21.2578  c
-175.531 -20.8464 -175.391 -20.3698 -175.391 -19.8281  c
-175.391 -19.2969 -175.544 -18.7943 -175.852 -18.3203  c
-176.159 -17.8464 -176.599 -17.4792 -177.172 -17.2188  c
-177.745 -16.9583 -178.385 -16.8281 -179.094 -16.8281  c
-180.000 -16.8281 -180.760 -16.9609 -181.375 -17.2266  c
-181.990 -17.4922 -182.471 -17.8906 -182.820 -18.4219  c
-183.169 -18.9531 -183.354 -19.5521 -183.375 -20.2188  c
h
-170.131 -17.0000 m
-170.131 -19.4062 l
-174.490 -19.4062 l
-174.490 -20.5312 l
-169.912 -27.0156 l
-168.912 -27.0156 l
-168.912 -20.5312 l
-167.553 -20.5312 l
-167.553 -19.4062 l
-168.912 -19.4062 l
-168.912 -17.0000 l
-170.131 -17.0000 l
h
-170.131 -20.5312 m
-170.131 -25.0469 l
-173.271 -20.5312 l
-170.131 -20.5312 l
h
f
.258824 .258824 .658824 RG
newpath
-279.078 -62.2188 m
-279.078 -72.2656 l
-277.953 -72.2656 l
-277.953 -71.3125 l
-277.693 -71.6875 -277.396 -71.9661 -277.062 -72.1484  c
-276.729 -72.3307 -276.323 -72.4219 -275.844 -72.4219  c
-275.229 -72.4219 -274.685 -72.2630 -274.211 -71.9453  c
-273.737 -71.6276 -273.380 -71.1771 -273.141 -70.5938  c
-272.901 -70.0104 -272.781 -69.3750 -272.781 -68.6875  c
-272.781 -67.9479 -272.914 -67.2786 -273.180 -66.6797  c
-273.445 -66.0807 -273.831 -65.6224 -274.336 -65.3047  c
-274.841 -64.9870 -275.375 -64.8281 -275.938 -64.8281  c
-276.344 -64.8281 -276.711 -64.9167 -277.039 -65.0938  c
-277.367 -65.2708 -277.635 -65.4896 -277.844 -65.7500  c
-277.844 -62.2188 l
-279.078 -62.2188 l
h
-277.969 -68.5938 m
-277.969 -67.6562 -277.779 -66.9635 -277.398 -66.5156  c
-277.018 -66.0677 -276.557 -65.8438 -276.016 -65.8438  c
-275.474 -65.8438 -275.008 -66.0755 -274.617 -66.5391  c
-274.227 -67.0026 -274.031 -67.7188 -274.031 -68.6875  c
-274.031 -69.6146 -274.221 -70.3073 -274.602 -70.7656  c
-274.982 -71.2240 -275.438 -71.4531 -275.969 -71.4531  c
-276.490 -71.4531 -276.953 -71.2083 -277.359 -70.7188  c
-277.766 -70.2292 -277.969 -69.5208 -277.969 -68.5938  c
h
-270.948 -70.8594 m
-270.948 -72.2656 l
-269.542 -72.2656 l
-269.542 -70.8594 l
-270.948 -70.8594 l
h
-270.948 -65.0000 m
-270.948 -66.4062 l
-269.542 -66.4062 l
-269.542 -65.0000 l
-270.948 -65.0000 l
h
-260.934 -70.8906 m
-267.543 -70.8906 l
-267.543 -72.0469 l
-260.934 -72.0469 l
-260.934 -70.8906 l
h
-260.934 -67.8438 m
-267.543 -67.8438 l
-267.543 -69.0000 l
-260.934 -69.0000 l
-260.934 -67.8438 l
h
-259.227 -62.2188 m
-259.227 -72.2656 l
-258.102 -72.2656 l
-258.102 -71.3125 l
-257.841 -71.6875 -257.544 -71.9661 -257.211 -72.1484  c
-256.878 -72.3307 -256.471 -72.4219 -255.992 -72.4219  c
-255.378 -72.4219 -254.833 -72.2630 -254.359 -71.9453  c
-253.885 -71.6276 -253.529 -71.1771 -253.289 -70.5938  c
-253.049 -70.0104 -252.930 -69.3750 -252.930 -68.6875  c
-252.930 -67.9479 -253.062 -67.2786 -253.328 -66.6797  c
-253.594 -66.0807 -253.979 -65.6224 -254.484 -65.3047  c
-254.990 -64.9870 -255.523 -64.8281 -256.086 -64.8281  c
-256.492 -64.8281 -256.859 -64.9167 -257.188 -65.0938  c
-257.516 -65.2708 -257.784 -65.4896 -257.992 -65.7500  c
-257.992 -62.2188 l
-259.227 -62.2188 l
h
-258.117 -68.5938 m
-258.117 -67.6562 -257.927 -66.9635 -257.547 -66.5156  c
-257.167 -66.0677 -256.706 -65.8438 -256.164 -65.8438  c
-255.622 -65.8438 -255.156 -66.0755 -254.766 -66.5391  c
-254.375 -67.0026 -254.180 -67.7188 -254.180 -68.6875  c
-254.180 -69.6146 -254.370 -70.3073 -254.750 -70.7656  c
-255.130 -71.2240 -255.586 -71.4531 -256.117 -71.4531  c
-256.638 -71.4531 -257.102 -71.2083 -257.508 -70.7188  c
-257.914 -70.2292 -258.117 -69.5208 -258.117 -68.5938  c
h
-248.862 -66.6250 m
-248.862 -69.3750 l
-251.581 -69.3750 l
-251.581 -70.5156 l
-248.862 -70.5156 l
-248.862 -73.2500 l
-247.690 -73.2500 l
-247.690 -70.5156 l
-244.972 -70.5156 l
-244.972 -69.3750 l
-247.690 -69.3750 l
-247.690 -66.6250 l
-248.862 -66.6250 l
h
-238.968 -65.0000 m
-240.202 -65.0000 l
-240.202 -72.8438 l
-240.494 -72.5625 -240.882 -72.2786 -241.366 -71.9922  c
-241.851 -71.7057 -242.280 -71.4948 -242.655 -71.3594  c
-242.655 -72.5469 l
-241.968 -72.8698 -241.366 -73.2604 -240.851 -73.7188  c
-240.335 -74.1771 -239.973 -74.6250 -239.765 -75.0625  c
-238.968 -75.0625 l
-238.968 -65.0000 l
h
f
newpath
-204.391 -90.0938 m
-204.219 -89.0156 l
-204.562 -88.9427 -204.870 -88.9062 -205.141 -88.9062  c
-205.589 -88.9062 -205.935 -88.9766 -206.180 -89.1172  c
-206.424 -89.2578 -206.596 -89.4427 -206.695 -89.6719  c
-206.794 -89.9010 -206.844 -90.3854 -206.844 -91.1250  c
-206.844 -95.2969 l
-207.750 -95.2969 l
-207.750 -96.2656 l
-206.844 -96.2656 l
-206.844 -98.0625 l
-205.625 -98.7969 l
-205.625 -96.2656 l
-204.391 -96.2656 l
-204.391 -95.2969 l
-205.625 -95.2969 l
-205.625 -91.0625 l
-205.625 -90.7083 -205.604 -90.4818 -205.562 -90.3828  c
-205.521 -90.2839 -205.451 -90.2031 -205.352 -90.1406  c
-205.253 -90.0781 -205.115 -90.0469 -204.938 -90.0469  c
-204.792 -90.0469 -204.609 -90.0625 -204.391 -90.0938  c
h
-203.188 -86.2188 m
-203.188 -96.2656 l
-202.063 -96.2656 l
-202.063 -95.3125 l
-201.803 -95.6875 -201.506 -95.9661 -201.173 -96.1484  c
-200.840 -96.3307 -200.433 -96.4219 -199.954 -96.4219  c
-199.340 -96.4219 -198.795 -96.2630 -198.321 -95.9453  c
-197.847 -95.6276 -197.491 -95.1771 -197.251 -94.5938  c
-197.011 -94.0104 -196.892 -93.3750 -196.892 -92.6875  c
-196.892 -91.9479 -197.024 -91.2786 -197.290 -90.6797  c
-197.556 -90.0807 -197.941 -89.6224 -198.446 -89.3047  c
-198.951 -88.9870 -199.485 -88.8281 -200.048 -88.8281  c
-200.454 -88.8281 -200.821 -88.9167 -201.149 -89.0938  c
-201.478 -89.2708 -201.746 -89.4896 -201.954 -89.7500  c
-201.954 -86.2188 l
-203.188 -86.2188 l
h
-202.079 -92.5938 m
-202.079 -91.6562 -201.889 -90.9635 -201.509 -90.5156  c
-201.129 -90.0677 -200.668 -89.8438 -200.126 -89.8438  c
-199.584 -89.8438 -199.118 -90.0755 -198.728 -90.5391  c
-198.337 -91.0026 -198.142 -91.7188 -198.142 -92.6875  c
-198.142 -93.6146 -198.332 -94.3073 -198.712 -94.7656  c
-199.092 -95.2240 -199.548 -95.4531 -200.079 -95.4531  c
-200.600 -95.4531 -201.063 -95.2083 -201.470 -94.7188  c
-201.876 -94.2292 -202.079 -93.5208 -202.079 -92.5938  c
h
-195.059 -94.8594 m
-195.059 -96.2656 l
-193.652 -96.2656 l
-193.652 -94.8594 l
-195.059 -94.8594 l
h
-195.059 -89.0000 m
-195.059 -90.4062 l
-193.652 -90.4062 l
-193.652 -89.0000 l
-195.059 -89.0000 l
h
-185.044 -94.8906 m
-191.653 -94.8906 l
-191.653 -96.0469 l
-185.044 -96.0469 l
-185.044 -94.8906 l
h
-185.044 -91.8438 m
-191.653 -91.8438 l
-191.653 -93.0000 l
-185.044 -93.0000 l
-185.044 -91.8438 l
h
-183.681 -93.9375 m
-183.681 -95.1250 -183.558 -96.0807 -183.313 -96.8047  c
-183.069 -97.5286 -182.707 -98.0859 -182.228 -98.4766  c
-181.748 -98.8672 -181.144 -99.0625 -180.415 -99.0625  c
-179.873 -99.0625 -179.399 -98.9531 -178.993 -98.7344  c
-178.587 -98.5156 -178.251 -98.2031 -177.985 -97.7969  c
-177.720 -97.3906 -177.514 -96.8958 -177.368 -96.3125  c
-177.222 -95.7292 -177.149 -94.9375 -177.149 -93.9375  c
-177.149 -92.7604 -177.269 -91.8125 -177.509 -91.0938  c
-177.748 -90.3750 -178.108 -89.8177 -178.587 -89.4219  c
-179.066 -89.0260 -179.675 -88.8281 -180.415 -88.8281  c
-181.373 -88.8281 -182.129 -89.1771 -182.681 -89.8750  c
-183.347 -90.7083 -183.681 -92.0625 -183.681 -93.9375  c
h
-182.415 -93.9375 m
-182.415 -92.2917 -182.222 -91.1979 -181.837 -90.6562  c
-181.451 -90.1146 -180.978 -89.8438 -180.415 -89.8438  c
-179.842 -89.8438 -179.363 -90.1172 -178.978 -90.6641  c
-178.592 -91.2109 -178.399 -92.3021 -178.399 -93.9375  c
-178.399 -95.5938 -178.592 -96.6927 -178.978 -97.2344  c
-179.363 -97.7760 -179.847 -98.0469 -180.431 -98.0469  c
-180.993 -98.0469 -181.441 -97.8073 -181.774 -97.3281  c
-182.201 -96.7135 -182.415 -95.5833 -182.415 -93.9375  c
h
f
.549020 .219608 .388235 RG
newpath
-313.375 -162.219 m
-312.125 -162.328 l
-312.062 -161.828 -311.922 -161.417 -311.703 -161.094  c
-311.484 -160.771 -311.148 -160.510 -310.695 -160.312  c
-310.242 -160.115 -309.729 -160.016 -309.156 -160.016  c
-308.656 -160.016 -308.211 -160.091 -307.820 -160.242  c
-307.430 -160.393 -307.141 -160.599 -306.953 -160.859  c
-306.766 -161.120 -306.672 -161.406 -306.672 -161.719  c
-306.672 -162.031 -306.763 -162.305 -306.945 -162.539  c
-307.128 -162.773 -307.427 -162.974 -307.844 -163.141  c
-308.115 -163.245 -308.711 -163.406 -309.633 -163.625  c
-310.555 -163.844 -311.198 -164.052 -311.562 -164.250  c
-312.042 -164.500 -312.398 -164.810 -312.633 -165.180  c
-312.867 -165.549 -312.984 -165.969 -312.984 -166.438  c
-312.984 -166.938 -312.841 -167.409 -312.555 -167.852  c
-312.268 -168.294 -311.849 -168.628 -311.297 -168.852  c
-310.745 -169.076 -310.130 -169.188 -309.453 -169.188  c
-308.714 -169.188 -308.060 -169.068 -307.492 -168.828  c
-306.924 -168.589 -306.490 -168.237 -306.188 -167.773  c
-305.885 -167.310 -305.719 -166.786 -305.688 -166.203  c
-306.969 -166.109 l
-307.031 -166.734 -307.260 -167.211 -307.656 -167.539  c
-308.052 -167.867 -308.635 -168.031 -309.406 -168.031  c
-310.208 -168.031 -310.792 -167.883 -311.156 -167.586  c
-311.521 -167.289 -311.703 -166.932 -311.703 -166.516  c
-311.703 -166.161 -311.573 -165.865 -311.312 -165.625  c
-311.062 -165.396 -310.398 -165.159 -309.320 -164.914  c
-308.242 -164.669 -307.505 -164.458 -307.109 -164.281  c
-306.526 -164.010 -306.094 -163.669 -305.812 -163.258  c
-305.531 -162.846 -305.391 -162.370 -305.391 -161.828  c
-305.391 -161.297 -305.544 -160.794 -305.852 -160.320  c
-306.159 -159.846 -306.599 -159.479 -307.172 -159.219  c
-307.745 -158.958 -308.385 -158.828 -309.094 -158.828  c
-310.000 -158.828 -310.760 -158.961 -311.375 -159.227  c
-311.990 -159.492 -312.471 -159.891 -312.820 -160.422  c
-313.169 -160.953 -313.354 -161.552 -313.375 -162.219  c
h
-297.615 -160.188 m
-297.615 -159.000 l
-304.240 -159.000 l
-304.251 -159.292 -304.204 -159.578 -304.100 -159.859  c
-303.923 -160.307 -303.649 -160.750 -303.279 -161.188  c
-302.910 -161.625 -302.376 -162.130 -301.678 -162.703  c
-300.584 -163.599 -299.847 -164.307 -299.467 -164.828  c
-299.087 -165.349 -298.896 -165.844 -298.896 -166.312  c
-298.896 -166.802 -299.071 -167.214 -299.420 -167.547  c
-299.769 -167.880 -300.219 -168.047 -300.771 -168.047  c
-301.365 -168.047 -301.842 -167.870 -302.201 -167.516  c
-302.561 -167.161 -302.740 -166.667 -302.740 -166.031  c
-304.006 -166.172 l
-303.923 -167.109 -303.597 -167.826 -303.029 -168.320  c
-302.462 -168.815 -301.704 -169.062 -300.756 -169.062  c
-299.787 -169.062 -299.024 -168.797 -298.467 -168.266  c
-297.910 -167.734 -297.631 -167.073 -297.631 -166.281  c
-297.631 -165.875 -297.712 -165.479 -297.873 -165.094  c
-298.035 -164.708 -298.305 -164.302 -298.686 -163.875  c
-299.066 -163.448 -299.699 -162.859 -300.584 -162.109  c
-301.324 -161.495 -301.798 -161.076 -302.006 -160.852  c
-302.214 -160.628 -302.386 -160.406 -302.521 -160.188  c
-297.615 -160.188 l
h
f
.258824 .258824 .658824 RG
newpath
-111.078 -62.2188 m
-111.078 -72.2656 l
-109.953 -72.2656 l
-109.953 -71.3125 l
-109.693 -71.6875 -109.396 -71.9661 -109.062 -72.1484  c
-108.729 -72.3307 -108.323 -72.4219 -107.844 -72.4219  c
-107.229 -72.4219 -106.685 -72.2630 -106.211 -71.9453  c
-105.737 -71.6276 -105.380 -71.1771 -105.141 -70.5938  c
-104.901 -70.0104 -104.781 -69.3750 -104.781 -68.6875  c
-104.781 -67.9479 -104.914 -67.2786 -105.180 -66.6797  c
-105.445 -66.0807 -105.831 -65.6224 -106.336 -65.3047  c
-106.841 -64.9870 -107.375 -64.8281 -107.938 -64.8281  c
-108.344 -64.8281 -108.711 -64.9167 -109.039 -65.0938  c
-109.367 -65.2708 -109.635 -65.4896 -109.844 -65.7500  c
-109.844 -62.2188 l
-111.078 -62.2188 l
h
-109.969 -68.5938 m
-109.969 -67.6562 -109.779 -66.9635 -109.398 -66.5156  c
-109.018 -66.0677 -108.557 -65.8438 -108.016 -65.8438  c
-107.474 -65.8438 -107.008 -66.0755 -106.617 -66.5391  c
-106.227 -67.0026 -106.031 -67.7188 -106.031 -68.6875  c
-106.031 -69.6146 -106.221 -70.3073 -106.602 -70.7656  c
-106.982 -71.2240 -107.438 -71.4531 -107.969 -71.4531  c
-108.490 -71.4531 -108.953 -71.2083 -109.359 -70.7188  c
-109.766 -70.2292 -109.969 -69.5208 -109.969 -68.5938  c
h
-102.948 -70.8594 m
-102.948 -72.2656 l
-101.542 -72.2656 l
-101.542 -70.8594 l
-102.948 -70.8594 l
h
-102.948 -65.0000 m
-102.948 -66.4062 l
-101.542 -66.4062 l
-101.542 -65.0000 l
-102.948 -65.0000 l
h
-92.9336 -70.8906 m
-99.5430 -70.8906 l
-99.5430 -72.0469 l
-92.9336 -72.0469 l
-92.9336 -70.8906 l
h
-92.9336 -67.8438 m
-99.5430 -67.8438 l
-99.5430 -69.0000 l
-92.9336 -69.0000 l
-92.9336 -67.8438 l
h
-91.2266 -62.2188 m
-91.2266 -72.2656 l
-90.1016 -72.2656 l
-90.1016 -71.3125 l
-89.8411 -71.6875 -89.5443 -71.9661 -89.2109 -72.1484  c
-88.8776 -72.3307 -88.4714 -72.4219 -87.9922 -72.4219  c
-87.3776 -72.4219 -86.8333 -72.2630 -86.3594 -71.9453  c
-85.8854 -71.6276 -85.5286 -71.1771 -85.2891 -70.5938  c
-85.0495 -70.0104 -84.9297 -69.3750 -84.9297 -68.6875  c
-84.9297 -67.9479 -85.0625 -67.2786 -85.3281 -66.6797  c
-85.5938 -66.0807 -85.9792 -65.6224 -86.4844 -65.3047  c
-86.9896 -64.9870 -87.5234 -64.8281 -88.0859 -64.8281  c
-88.4922 -64.8281 -88.8594 -64.9167 -89.1875 -65.0938  c
-89.5156 -65.2708 -89.7839 -65.4896 -89.9922 -65.7500  c
-89.9922 -62.2188 l
-91.2266 -62.2188 l
h
-90.1172 -68.5938 m
-90.1172 -67.6562 -89.9271 -66.9635 -89.5469 -66.5156  c
-89.1667 -66.0677 -88.7057 -65.8438 -88.1641 -65.8438  c
-87.6224 -65.8438 -87.1562 -66.0755 -86.7656 -66.5391  c
-86.3750 -67.0026 -86.1797 -67.7188 -86.1797 -68.6875  c
-86.1797 -69.6146 -86.3698 -70.3073 -86.7500 -70.7656  c
-87.1302 -71.2240 -87.5859 -71.4531 -88.1172 -71.4531  c
-88.6380 -71.4531 -89.1016 -71.2083 -89.5078 -70.7188  c
-89.9141 -70.2292 -90.1172 -69.5208 -90.1172 -68.5938  c
h
-80.8623 -66.6250 m
-80.8623 -69.3750 l
-83.5811 -69.3750 l
-83.5811 -70.5156 l
-80.8623 -70.5156 l
-80.8623 -73.2500 l
-79.6904 -73.2500 l
-79.6904 -70.5156 l
-76.9717 -70.5156 l
-76.9717 -69.3750 l
-79.6904 -69.3750 l
-79.6904 -66.6250 l
-80.8623 -66.6250 l
h
-70.9678 -65.0000 m
-72.2021 -65.0000 l
-72.2021 -72.8438 l
-72.4938 -72.5625 -72.8818 -72.2786 -73.3662 -71.9922  c
-73.8506 -71.7057 -74.2803 -71.4948 -74.6553 -71.3594  c
-74.6553 -72.5469 l
-73.9678 -72.8698 -73.3662 -73.2604 -72.8506 -73.7188  c
-72.3350 -74.1771 -71.9730 -74.6250 -71.7646 -75.0625  c
-70.9678 -75.0625 l
-70.9678 -65.0000 l
h
f
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
-176.000 -61.0000 m
-176.000 -63.0000 -176.000 -67.3333 -176.000 -74.0000  c
-176.000 -131.000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-173.412 -121.341 m
-176.000 -131.000 l
-178.588 -121.341 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-58.4000 -136.200 m
-165.600 -55.8000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-159.426 -63.6661 m
-165.600 -55.8000 l
-156.320 -59.5250 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-163.000 -144.000 m
-106.000 -144.000 l
-99.3333 -144.000 -92.6667 -144.000 -86.0000 -144.000  c
-61.0000 -144.000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-70.6593 -141.412 m
-61.0000 -144.000 l
-70.6593 -146.588 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-293.600 -136.200 m
-186.400 -55.8000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-195.680 -59.5250 m
-186.400 -55.8000 l
-192.574 -63.6661 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-189.000 -144.000 m
-246.000 -144.000 l
-252.667 -144.000 -259.333 -144.000 -266.000 -144.000  c
-291.000 -144.000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-281.341 -146.588 m
-291.000 -144.000 l
-281.341 -141.412 l
S
2 J
0 j
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix

%%Trailer
%%EOF
