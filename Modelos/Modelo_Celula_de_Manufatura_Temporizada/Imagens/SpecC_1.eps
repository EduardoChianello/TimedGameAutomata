%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 294 575 497
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Quarta-feira, 1 de Maio de 2019 09h50min39s BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
187 68 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
187.000 0.00000 l
187.000 68.0000 l
0.00000 68.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
187.000 0.00000 l
187.000 68.0000 l
0.00000 68.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
h
f
Q
[ 1.00000 0.00000 0.00000 1.00000 349.000 177.000 ] concat
.258824 .627451 .658824 RG
newpath
-269.938 -161.000 m
-271.078 -161.000 l
-271.078 -171.016 l
-269.859 -171.016 l
-269.859 -167.453 l
-269.339 -168.099 -268.672 -168.422 -267.859 -168.422  c
-267.411 -168.422 -266.990 -168.333 -266.594 -168.156  c
-266.198 -167.979 -265.870 -167.727 -265.609 -167.398  c
-265.349 -167.070 -265.146 -166.677 -265.000 -166.219  c
-264.854 -165.760 -264.781 -165.266 -264.781 -164.734  c
-264.781 -163.495 -265.091 -162.534 -265.711 -161.852  c
-266.331 -161.169 -267.068 -160.828 -267.922 -160.828  c
-268.776 -160.828 -269.448 -161.188 -269.938 -161.906  c
-269.938 -161.000 l
h
-269.953 -164.688 m
-269.953 -163.812 -269.833 -163.182 -269.594 -162.797  c
-269.208 -162.161 -268.688 -161.844 -268.031 -161.844  c
-267.490 -161.844 -267.023 -162.078 -266.633 -162.547  c
-266.242 -163.016 -266.047 -163.714 -266.047 -164.641  c
-266.047 -165.589 -266.234 -166.286 -266.609 -166.734  c
-266.984 -167.182 -267.438 -167.406 -267.969 -167.406  c
-268.510 -167.406 -268.977 -167.174 -269.367 -166.711  c
-269.758 -166.247 -269.953 -165.573 -269.953 -164.688  c
h
-258.995 -161.000 m
-260.229 -161.000 l
-260.229 -168.844 l
-260.521 -168.562 -260.909 -168.279 -261.394 -167.992  c
-261.878 -167.706 -262.308 -167.495 -262.683 -167.359  c
-262.683 -168.547 l
-261.995 -168.870 -261.394 -169.260 -260.878 -169.719  c
-260.362 -170.177 -260.000 -170.625 -259.792 -171.062  c
-258.995 -171.062 l
-258.995 -161.000 l
h
-251.209 -161.000 m
-252.443 -161.000 l
-252.443 -168.844 l
-252.735 -168.562 -253.123 -168.279 -253.607 -167.992  c
-254.092 -167.706 -254.521 -167.495 -254.896 -167.359  c
-254.896 -168.547 l
-254.209 -168.870 -253.607 -169.260 -253.092 -169.719  c
-252.576 -170.177 -252.214 -170.625 -252.006 -171.062  c
-251.209 -171.062 l
-251.209 -161.000 l
h
-247.063 -163.484 m
-247.438 -168.797 l
-247.438 -171.016 l
-245.907 -171.016 l
-245.907 -168.797 l
-246.267 -163.484 l
-247.063 -163.484 l
h
-247.376 -161.000 m
-247.376 -162.406 l
-245.970 -162.406 l
-245.970 -161.000 l
-247.376 -161.000 l
h
f
.647059 .686275 .803922 RG
newpath
-164.000 -144.000 m
-164.000 -137.373 -169.373 -132.000 -176.000 -132.000  c
-182.627 -132.000 -188.000 -137.373 -188.000 -144.000  c
-188.000 -150.627 -182.627 -156.000 -176.000 -156.000  c
-169.373 -156.000 -164.000 -150.627 -164.000 -144.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-164.000 -144.000 m
-164.000 -137.373 -169.373 -132.000 -176.000 -132.000  c
-182.627 -132.000 -188.000 -137.373 -188.000 -144.000  c
-188.000 -150.627 -182.627 -156.000 -176.000 -156.000  c
-169.373 -156.000 -164.000 -150.627 -164.000 -144.000  c
h
S
.647059 .686275 .803922 RG
newpath
-324.000 -144.000 m
-324.000 -137.373 -329.373 -132.000 -336.000 -132.000  c
-342.627 -132.000 -348.000 -137.373 -348.000 -144.000  c
-348.000 -150.627 -342.627 -156.000 -336.000 -156.000  c
-329.373 -156.000 -324.000 -150.627 -324.000 -144.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-324.000 -144.000 m
-324.000 -137.373 -329.373 -132.000 -336.000 -132.000  c
-342.627 -132.000 -348.000 -137.373 -348.000 -144.000  c
-348.000 -150.627 -342.627 -156.000 -336.000 -156.000  c
-329.373 -156.000 -324.000 -150.627 -324.000 -144.000  c
h
S
newpath
-328.000 -144.000 m
-328.000 -139.582 -331.582 -136.000 -336.000 -136.000  c
-340.418 -136.000 -344.000 -139.582 -344.000 -144.000  c
-344.000 -148.418 -340.418 -152.000 -336.000 -152.000  c
-331.582 -152.000 -328.000 -148.418 -328.000 -144.000  c
h
S
.549020 .219608 .388235 RG
newpath
-185.375 -162.219 m
-184.125 -162.328 l
-184.062 -161.828 -183.922 -161.417 -183.703 -161.094  c
-183.484 -160.771 -183.148 -160.510 -182.695 -160.312  c
-182.242 -160.115 -181.729 -160.016 -181.156 -160.016  c
-180.656 -160.016 -180.211 -160.091 -179.820 -160.242  c
-179.430 -160.393 -179.141 -160.599 -178.953 -160.859  c
-178.766 -161.120 -178.672 -161.406 -178.672 -161.719  c
-178.672 -162.031 -178.763 -162.305 -178.945 -162.539  c
-179.128 -162.773 -179.427 -162.974 -179.844 -163.141  c
-180.115 -163.245 -180.711 -163.406 -181.633 -163.625  c
-182.555 -163.844 -183.198 -164.052 -183.562 -164.250  c
-184.042 -164.500 -184.398 -164.810 -184.633 -165.180  c
-184.867 -165.549 -184.984 -165.969 -184.984 -166.438  c
-184.984 -166.938 -184.841 -167.409 -184.555 -167.852  c
-184.268 -168.294 -183.849 -168.628 -183.297 -168.852  c
-182.745 -169.076 -182.130 -169.188 -181.453 -169.188  c
-180.714 -169.188 -180.060 -169.068 -179.492 -168.828  c
-178.924 -168.589 -178.490 -168.237 -178.188 -167.773  c
-177.885 -167.310 -177.719 -166.786 -177.688 -166.203  c
-178.969 -166.109 l
-179.031 -166.734 -179.260 -167.211 -179.656 -167.539  c
-180.052 -167.867 -180.635 -168.031 -181.406 -168.031  c
-182.208 -168.031 -182.792 -167.883 -183.156 -167.586  c
-183.521 -167.289 -183.703 -166.932 -183.703 -166.516  c
-183.703 -166.161 -183.573 -165.865 -183.312 -165.625  c
-183.062 -165.396 -182.398 -165.159 -181.320 -164.914  c
-180.242 -164.669 -179.505 -164.458 -179.109 -164.281  c
-178.526 -164.010 -178.094 -163.669 -177.812 -163.258  c
-177.531 -162.846 -177.391 -162.370 -177.391 -161.828  c
-177.391 -161.297 -177.544 -160.794 -177.852 -160.320  c
-178.159 -159.846 -178.599 -159.479 -179.172 -159.219  c
-179.745 -158.958 -180.385 -158.828 -181.094 -158.828  c
-182.000 -158.828 -182.760 -158.961 -183.375 -159.227  c
-183.990 -159.492 -184.471 -159.891 -184.820 -160.422  c
-185.169 -160.953 -185.354 -161.552 -185.375 -162.219  c
h
-171.443 -159.000 m
-172.678 -159.000 l
-172.678 -166.844 l
-172.969 -166.562 -173.357 -166.279 -173.842 -165.992  c
-174.326 -165.706 -174.756 -165.495 -175.131 -165.359  c
-175.131 -166.547 l
-174.443 -166.870 -173.842 -167.260 -173.326 -167.719  c
-172.811 -168.177 -172.449 -168.625 -172.240 -169.062  c
-171.443 -169.062 l
-171.443 -159.000 l
h
f
.258824 .627451 .658824 RG
newpath
-266.344 -113.891 m
-266.792 -113.505 -267.227 -113.232 -267.648 -113.070  c
-268.070 -112.909 -268.526 -112.828 -269.016 -112.828  c
-269.807 -112.828 -270.419 -113.023 -270.852 -113.414  c
-271.284 -113.805 -271.500 -114.307 -271.500 -114.922  c
-271.500 -115.276 -271.419 -115.599 -271.258 -115.891  c
-271.096 -116.182 -270.883 -116.417 -270.617 -116.594  c
-270.352 -116.771 -270.057 -116.906 -269.734 -117.000  c
-269.495 -117.062 -269.130 -117.125 -268.641 -117.188  c
-267.641 -117.302 -266.906 -117.443 -266.438 -117.609  c
-266.438 -117.776 -266.438 -117.880 -266.438 -117.922  c
-266.438 -118.432 -266.552 -118.786 -266.781 -118.984  c
-267.094 -119.266 -267.562 -119.406 -268.188 -119.406  c
-268.760 -119.406 -269.185 -119.305 -269.461 -119.102  c
-269.737 -118.898 -269.943 -118.542 -270.078 -118.031  c
-271.281 -118.188 l
-271.177 -118.708 -270.997 -119.125 -270.742 -119.438  c
-270.487 -119.750 -270.122 -119.992 -269.648 -120.164  c
-269.174 -120.336 -268.625 -120.422 -268.000 -120.422  c
-267.385 -120.422 -266.885 -120.349 -266.500 -120.203  c
-266.115 -120.057 -265.831 -119.875 -265.648 -119.656  c
-265.466 -119.438 -265.339 -119.156 -265.266 -118.812  c
-265.224 -118.604 -265.203 -118.229 -265.203 -117.688  c
-265.203 -116.047 l
-265.203 -114.901 -265.177 -114.177 -265.125 -113.875  c
-265.073 -113.573 -264.969 -113.281 -264.812 -113.000  c
-266.094 -113.000 l
-266.219 -113.260 -266.302 -113.557 -266.344 -113.891  c
h
-266.438 -116.641 m
-266.885 -116.464 -267.557 -116.307 -268.453 -116.172  c
-268.953 -116.099 -269.310 -116.018 -269.523 -115.930  c
-269.737 -115.841 -269.901 -115.708 -270.016 -115.531  c
-270.130 -115.354 -270.188 -115.161 -270.188 -114.953  c
-270.188 -114.620 -270.062 -114.344 -269.812 -114.125  c
-269.562 -113.906 -269.198 -113.797 -268.719 -113.797  c
-268.240 -113.797 -267.818 -113.901 -267.453 -114.109  c
-267.089 -114.318 -266.818 -114.604 -266.641 -114.969  c
-266.505 -115.240 -266.438 -115.646 -266.438 -116.188  c
-266.438 -116.641 l
h
-257.167 -114.188 m
-257.167 -113.000 l
-263.792 -113.000 l
-263.802 -113.292 -263.756 -113.578 -263.651 -113.859  c
-263.474 -114.307 -263.201 -114.750 -262.831 -115.188  c
-262.461 -115.625 -261.927 -116.130 -261.229 -116.703  c
-260.136 -117.599 -259.399 -118.307 -259.019 -118.828  c
-258.638 -119.349 -258.448 -119.844 -258.448 -120.312  c
-258.448 -120.802 -258.623 -121.214 -258.972 -121.547  c
-259.321 -121.880 -259.771 -122.047 -260.323 -122.047  c
-260.917 -122.047 -261.394 -121.870 -261.753 -121.516  c
-262.112 -121.161 -262.292 -120.667 -262.292 -120.031  c
-263.558 -120.172 l
-263.474 -121.109 -263.149 -121.826 -262.581 -122.320  c
-262.013 -122.815 -261.256 -123.062 -260.308 -123.062  c
-259.339 -123.062 -258.576 -122.797 -258.019 -122.266  c
-257.461 -121.734 -257.183 -121.073 -257.183 -120.281  c
-257.183 -119.875 -257.263 -119.479 -257.425 -119.094  c
-257.586 -118.708 -257.857 -118.302 -258.237 -117.875  c
-258.618 -117.448 -259.250 -116.859 -260.136 -116.109  c
-260.875 -115.495 -261.349 -115.076 -261.558 -114.852  c
-261.766 -114.628 -261.938 -114.406 -262.073 -114.188  c
-257.167 -114.188 l
h
-251.209 -113.000 m
-252.443 -113.000 l
-252.443 -120.844 l
-252.735 -120.562 -253.123 -120.279 -253.607 -119.992  c
-254.092 -119.706 -254.521 -119.495 -254.896 -119.359  c
-254.896 -120.547 l
-254.209 -120.870 -253.607 -121.260 -253.092 -121.719  c
-252.576 -122.177 -252.214 -122.625 -252.006 -123.062  c
-251.209 -123.062 l
-251.209 -113.000 l
h
-247.063 -115.484 m
-247.438 -120.797 l
-247.438 -123.016 l
-245.907 -123.016 l
-245.907 -120.797 l
-246.267 -115.484 l
-247.063 -115.484 l
h
-247.376 -113.000 m
-247.376 -114.406 l
-245.970 -114.406 l
-245.970 -113.000 l
-247.376 -113.000 l
h
f
.549020 .219608 .388235 RG
newpath
-345.375 -162.219 m
-344.125 -162.328 l
-344.062 -161.828 -343.922 -161.417 -343.703 -161.094  c
-343.484 -160.771 -343.148 -160.510 -342.695 -160.312  c
-342.242 -160.115 -341.729 -160.016 -341.156 -160.016  c
-340.656 -160.016 -340.211 -160.091 -339.820 -160.242  c
-339.430 -160.393 -339.141 -160.599 -338.953 -160.859  c
-338.766 -161.120 -338.672 -161.406 -338.672 -161.719  c
-338.672 -162.031 -338.763 -162.305 -338.945 -162.539  c
-339.128 -162.773 -339.427 -162.974 -339.844 -163.141  c
-340.115 -163.245 -340.711 -163.406 -341.633 -163.625  c
-342.555 -163.844 -343.198 -164.052 -343.562 -164.250  c
-344.042 -164.500 -344.398 -164.810 -344.633 -165.180  c
-344.867 -165.549 -344.984 -165.969 -344.984 -166.438  c
-344.984 -166.938 -344.841 -167.409 -344.555 -167.852  c
-344.268 -168.294 -343.849 -168.628 -343.297 -168.852  c
-342.745 -169.076 -342.130 -169.188 -341.453 -169.188  c
-340.714 -169.188 -340.060 -169.068 -339.492 -168.828  c
-338.924 -168.589 -338.490 -168.237 -338.188 -167.773  c
-337.885 -167.310 -337.719 -166.786 -337.688 -166.203  c
-338.969 -166.109 l
-339.031 -166.734 -339.260 -167.211 -339.656 -167.539  c
-340.052 -167.867 -340.635 -168.031 -341.406 -168.031  c
-342.208 -168.031 -342.792 -167.883 -343.156 -167.586  c
-343.521 -167.289 -343.703 -166.932 -343.703 -166.516  c
-343.703 -166.161 -343.573 -165.865 -343.312 -165.625  c
-343.062 -165.396 -342.398 -165.159 -341.320 -164.914  c
-340.242 -164.669 -339.505 -164.458 -339.109 -164.281  c
-338.526 -164.010 -338.094 -163.669 -337.812 -163.258  c
-337.531 -162.846 -337.391 -162.370 -337.391 -161.828  c
-337.391 -161.297 -337.544 -160.794 -337.852 -160.320  c
-338.159 -159.846 -338.599 -159.479 -339.172 -159.219  c
-339.745 -158.958 -340.385 -158.828 -341.094 -158.828  c
-342.000 -158.828 -342.760 -158.961 -343.375 -159.227  c
-343.990 -159.492 -344.471 -159.891 -344.820 -160.422  c
-345.169 -160.953 -345.354 -161.552 -345.375 -162.219  c
h
-336.084 -163.938 m
-336.084 -165.125 -335.962 -166.081 -335.717 -166.805  c
-335.472 -167.529 -335.110 -168.086 -334.631 -168.477  c
-334.152 -168.867 -333.548 -169.062 -332.818 -169.062  c
-332.277 -169.062 -331.803 -168.953 -331.396 -168.734  c
-330.990 -168.516 -330.654 -168.203 -330.389 -167.797  c
-330.123 -167.391 -329.917 -166.896 -329.771 -166.312  c
-329.626 -165.729 -329.553 -164.938 -329.553 -163.938  c
-329.553 -162.760 -329.673 -161.812 -329.912 -161.094  c
-330.152 -160.375 -330.511 -159.818 -330.990 -159.422  c
-331.469 -159.026 -332.079 -158.828 -332.818 -158.828  c
-333.777 -158.828 -334.532 -159.177 -335.084 -159.875  c
-335.751 -160.708 -336.084 -162.062 -336.084 -163.938  c
h
-334.818 -163.938 m
-334.818 -162.292 -334.626 -161.198 -334.240 -160.656  c
-333.855 -160.115 -333.381 -159.844 -332.818 -159.844  c
-332.245 -159.844 -331.766 -160.117 -331.381 -160.664  c
-330.995 -161.211 -330.803 -162.302 -330.803 -163.938  c
-330.803 -165.594 -330.995 -166.693 -331.381 -167.234  c
-331.766 -167.776 -332.251 -168.047 -332.834 -168.047  c
-333.396 -168.047 -333.844 -167.807 -334.178 -167.328  c
-334.605 -166.714 -334.818 -165.583 -334.818 -163.938  c
h
f
1 J
2 j
0.00000 0.00000 0.00000 RG
newpath
-188.748 -141.450 m
-246.194 -129.961 l
-252.731 -128.654 -259.269 -128.654 -265.806 -129.961  c
-323.252 -141.450 l
S
newpath
-313.273 -142.094 m
-323.252 -141.450 l
-314.288 -137.018 l
S
2 J
0 j
1 J
2 j
newpath
-323.252 -146.550 m
-265.806 -158.039 l
-259.269 -159.346 -252.731 -159.346 -246.194 -158.039  c
-188.748 -146.550 l
S
newpath
-198.727 -145.906 m
-188.748 -146.550 l
-197.712 -150.982 l
S
2 J
0 j
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix

%%Trailer
%%EOF
