%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 230 575 561
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Quarta-feira, 1 de Maio de 2019 09h51min34s BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
168 100 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
168.000 0.00000 l
168.000 100.000 l
0.00000 100.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
168.000 0.00000 l
168.000 100.000 l
0.00000 100.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
h
f
Q
[ 1.00000 0.00000 0.00000 1.00000 98.0000 33.0000 ] concat
.258824 .627451 .658824 RG
newpath
45.6562 22.1094 m
45.2083 22.4948 44.7734 22.7682 44.3516 22.9297  c
43.9297 23.0911 43.4740 23.1719 42.9844 23.1719  c
42.1927 23.1719 41.5807 22.9766 41.1484 22.5859  c
40.7161 22.1953 40.5000 21.6927 40.5000 21.0781  c
40.5000 20.7240 40.5807 20.4010 40.7422 20.1094  c
40.9036 19.8177 41.1172 19.5833 41.3828 19.4062  c
41.6484 19.2292 41.9427 19.0938 42.2656 19.0000  c
42.5052 18.9375 42.8698 18.8750 43.3594 18.8125  c
44.3594 18.6979 45.0938 18.5573 45.5625 18.3906  c
45.5625 18.2240 45.5625 18.1198 45.5625 18.0781  c
45.5625 17.5677 45.4479 17.2135 45.2188 17.0156  c
44.9062 16.7344 44.4375 16.5938 43.8125 16.5938  c
43.2396 16.5938 42.8151 16.6953 42.5391 16.8984  c
42.2630 17.1016 42.0573 17.4583 41.9219 17.9688  c
40.7188 17.8125 l
40.8229 17.2917 41.0026 16.8750 41.2578 16.5625  c
41.5130 16.2500 41.8776 16.0078 42.3516 15.8359  c
42.8255 15.6641 43.3750 15.5781 44.0000 15.5781  c
44.6146 15.5781 45.1146 15.6510 45.5000 15.7969  c
45.8854 15.9427 46.1693 16.1250 46.3516 16.3438  c
46.5339 16.5625 46.6615 16.8438 46.7344 17.1875  c
46.7760 17.3958 46.7969 17.7708 46.7969 18.3125  c
46.7969 19.9531 l
46.7969 21.0990 46.8229 21.8229 46.8750 22.1250  c
46.9271 22.4271 47.0312 22.7188 47.1875 23.0000  c
45.9062 23.0000 l
45.7812 22.7396 45.6979 22.4427 45.6562 22.1094  c
h
45.5625 19.3594 m
45.1146 19.5365 44.4427 19.6927 43.5469 19.8281  c
43.0469 19.9010 42.6901 19.9818 42.4766 20.0703  c
42.2630 20.1589 42.0990 20.2917 41.9844 20.4688  c
41.8698 20.6458 41.8125 20.8385 41.8125 21.0469  c
41.8125 21.3802 41.9375 21.6562 42.1875 21.8750  c
42.4375 22.0938 42.8021 22.2031 43.2812 22.2031  c
43.7604 22.2031 44.1823 22.0990 44.5469 21.8906  c
44.9115 21.6823 45.1823 21.3958 45.3594 21.0312  c
45.4948 20.7604 45.5625 20.3542 45.5625 19.8125  c
45.5625 19.3594 l
h
53.0049 23.0000 m
51.7705 23.0000 l
51.7705 15.1562 l
51.4788 15.4375 51.0908 15.7214 50.6064 16.0078  c
50.1221 16.2943 49.6924 16.5052 49.3174 16.6406  c
49.3174 15.4531 l
50.0049 15.1302 50.6064 14.7396 51.1221 14.2812  c
51.6377 13.8229 51.9997 13.3750 52.2080 12.9375  c
53.0049 12.9375 l
53.0049 23.0000 l
h
60.7910 23.0000 m
59.5566 23.0000 l
59.5566 15.1562 l
59.2650 15.4375 58.8770 15.7214 58.3926 16.0078  c
57.9082 16.2943 57.4785 16.5052 57.1035 16.6406  c
57.1035 15.4531 l
57.7910 15.1302 58.3926 14.7396 58.9082 14.2812  c
59.4238 13.8229 59.7858 13.3750 59.9941 12.9375  c
60.7910 12.9375 l
60.7910 23.0000 l
h
64.9365 20.5156 m
64.5615 15.2031 l
64.5615 12.9844 l
66.0928 12.9844 l
66.0928 15.2031 l
65.7334 20.5156 l
64.9365 20.5156 l
h
64.6240 23.0000 m
64.6240 21.5938 l
66.0303 21.5938 l
66.0303 23.0000 l
64.6240 23.0000 l
h
f
.647059 .686275 .803922 RG
newpath
-4.00000 16.0000 m
-4.00000 22.6274 -9.37258 28.0000 -16.0000 28.0000  c
-22.6274 28.0000 -28.0000 22.6274 -28.0000 16.0000  c
-28.0000 9.37258 -22.6274 4.00000 -16.0000 4.00000  c
-9.37258 4.00000 -4.00000 9.37258 -4.00000 16.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-4.00000 16.0000 m
-4.00000 22.6274 -9.37258 28.0000 -16.0000 28.0000  c
-22.6274 28.0000 -28.0000 22.6274 -28.0000 16.0000  c
-28.0000 9.37258 -22.6274 4.00000 -16.0000 4.00000  c
-9.37258 4.00000 -4.00000 9.37258 -4.00000 16.0000  c
h
S
newpath
-8.00000 16.0000 m
-8.00000 20.4183 -11.5817 24.0000 -16.0000 24.0000  c
-20.4183 24.0000 -24.0000 20.4183 -24.0000 16.0000  c
-24.0000 11.5817 -20.4183 8.00000 -16.0000 8.00000  c
-11.5817 8.00000 -8.00000 11.5817 -8.00000 16.0000  c
h
S
.258824 .627451 .658824 RG
newpath
-90.3438 22.1094 m
-90.7917 22.4948 -91.2266 22.7682 -91.6484 22.9297  c
-92.0703 23.0911 -92.5260 23.1719 -93.0156 23.1719  c
-93.8073 23.1719 -94.4193 22.9766 -94.8516 22.5859  c
-95.2839 22.1953 -95.5000 21.6927 -95.5000 21.0781  c
-95.5000 20.7240 -95.4193 20.4010 -95.2578 20.1094  c
-95.0964 19.8177 -94.8828 19.5833 -94.6172 19.4062  c
-94.3516 19.2292 -94.0573 19.0938 -93.7344 19.0000  c
-93.4948 18.9375 -93.1302 18.8750 -92.6406 18.8125  c
-91.6406 18.6979 -90.9062 18.5573 -90.4375 18.3906  c
-90.4375 18.2240 -90.4375 18.1198 -90.4375 18.0781  c
-90.4375 17.5677 -90.5521 17.2135 -90.7812 17.0156  c
-91.0938 16.7344 -91.5625 16.5938 -92.1875 16.5938  c
-92.7604 16.5938 -93.1849 16.6953 -93.4609 16.8984  c
-93.7370 17.1016 -93.9427 17.4583 -94.0781 17.9688  c
-95.2812 17.8125 l
-95.1771 17.2917 -94.9974 16.8750 -94.7422 16.5625  c
-94.4870 16.2500 -94.1224 16.0078 -93.6484 15.8359  c
-93.1745 15.6641 -92.6250 15.5781 -92.0000 15.5781  c
-91.3854 15.5781 -90.8854 15.6510 -90.5000 15.7969  c
-90.1146 15.9427 -89.8307 16.1250 -89.6484 16.3438  c
-89.4661 16.5625 -89.3385 16.8438 -89.2656 17.1875  c
-89.2240 17.3958 -89.2031 17.7708 -89.2031 18.3125  c
-89.2031 19.9531 l
-89.2031 21.0990 -89.1771 21.8229 -89.1250 22.1250  c
-89.0729 22.4271 -88.9688 22.7188 -88.8125 23.0000  c
-90.0938 23.0000 l
-90.2188 22.7396 -90.3021 22.4427 -90.3438 22.1094  c
h
-90.4375 19.3594 m
-90.8854 19.5365 -91.5573 19.6927 -92.4531 19.8281  c
-92.9531 19.9010 -93.3099 19.9818 -93.5234 20.0703  c
-93.7370 20.1589 -93.9010 20.2917 -94.0156 20.4688  c
-94.1302 20.6458 -94.1875 20.8385 -94.1875 21.0469  c
-94.1875 21.3802 -94.0625 21.6562 -93.8125 21.8750  c
-93.5625 22.0938 -93.1979 22.2031 -92.7188 22.2031  c
-92.2396 22.2031 -91.8177 22.0990 -91.4531 21.8906  c
-91.0885 21.6823 -90.8177 21.3958 -90.6406 21.0312  c
-90.5052 20.7604 -90.4375 20.3542 -90.4375 19.8125  c
-90.4375 19.3594 l
h
-81.1670 21.8125 m
-81.1670 23.0000 l
-87.7920 23.0000 l
-87.8024 22.7083 -87.7555 22.4219 -87.6514 22.1406  c
-87.4743 21.6927 -87.2008 21.2500 -86.8311 20.8125  c
-86.4613 20.3750 -85.9274 19.8698 -85.2295 19.2969  c
-84.1357 18.4010 -83.3988 17.6927 -83.0186 17.1719  c
-82.6383 16.6510 -82.4482 16.1562 -82.4482 15.6875  c
-82.4482 15.1979 -82.6227 14.7865 -82.9717 14.4531  c
-83.3206 14.1198 -83.7712 13.9531 -84.3232 13.9531  c
-84.9170 13.9531 -85.3936 14.1302 -85.7529 14.4844  c
-86.1123 14.8385 -86.2920 15.3333 -86.2920 15.9688  c
-87.5576 15.8281 l
-87.4743 14.8906 -87.1488 14.1745 -86.5811 13.6797  c
-86.0133 13.1849 -85.2555 12.9375 -84.3076 12.9375  c
-83.3389 12.9375 -82.5758 13.2031 -82.0186 13.7344  c
-81.4613 14.2656 -81.1826 14.9271 -81.1826 15.7188  c
-81.1826 16.1250 -81.2633 16.5208 -81.4248 16.9062  c
-81.5863 17.2917 -81.8571 17.6979 -82.2373 18.1250  c
-82.6175 18.5521 -83.2503 19.1406 -84.1357 19.8906  c
-84.8753 20.5052 -85.3493 20.9245 -85.5576 21.1484  c
-85.7660 21.3724 -85.9378 21.5938 -86.0732 21.8125  c
-81.1670 21.8125 l
h
-73.3809 21.8125 m
-73.3809 23.0000 l
-80.0059 23.0000 l
-80.0163 22.7083 -79.9694 22.4219 -79.8652 22.1406  c
-79.6882 21.6927 -79.4147 21.2500 -79.0449 20.8125  c
-78.6751 20.3750 -78.1413 19.8698 -77.4434 19.2969  c
-76.3496 18.4010 -75.6126 17.6927 -75.2324 17.1719  c
-74.8522 16.6510 -74.6621 16.1562 -74.6621 15.6875  c
-74.6621 15.1979 -74.8366 14.7865 -75.1855 14.4531  c
-75.5345 14.1198 -75.9850 13.9531 -76.5371 13.9531  c
-77.1309 13.9531 -77.6074 14.1302 -77.9668 14.4844  c
-78.3262 14.8385 -78.5059 15.3333 -78.5059 15.9688  c
-79.7715 15.8281 l
-79.6882 14.8906 -79.3626 14.1745 -78.7949 13.6797  c
-78.2272 13.1849 -77.4694 12.9375 -76.5215 12.9375  c
-75.5527 12.9375 -74.7897 13.2031 -74.2324 13.7344  c
-73.6751 14.2656 -73.3965 14.9271 -73.3965 15.7188  c
-73.3965 16.1250 -73.4772 16.5208 -73.6387 16.9062  c
-73.8001 17.2917 -74.0710 17.6979 -74.4512 18.1250  c
-74.8314 18.5521 -75.4642 19.1406 -76.3496 19.8906  c
-77.0892 20.5052 -77.5632 20.9245 -77.7715 21.1484  c
-77.9798 21.3724 -78.1517 21.5938 -78.2871 21.8125  c
-73.3809 21.8125 l
h
-71.0635 20.5156 m
-71.4385 15.2031 l
-71.4385 12.9844 l
-69.9072 12.9844 l
-69.9072 15.2031 l
-70.2666 20.5156 l
-71.0635 20.5156 l
h
-71.3760 23.0000 m
-71.3760 21.5938 l
-69.9697 21.5938 l
-69.9697 23.0000 l
-71.3760 23.0000 l
h
f
.549020 .219608 .388235 RG
newpath
-25.3750 -2.21875 m
-24.1250 -2.32812 l
-24.0625 -1.82812 -23.9219 -1.41667 -23.7031 -1.09375  c
-23.4844 -.770833 -23.1484 -.510417 -22.6953 -.312500  c
-22.2422 -.114583 -21.7292 -.0156250 -21.1562 -.0156250  c
-20.6562 -.0156250 -20.2109 -.0911458 -19.8203 -.242188  c
-19.4297 -.393229 -19.1406 -.598958 -18.9531 -.859375  c
-18.7656 -1.11979 -18.6719 -1.40625 -18.6719 -1.71875  c
-18.6719 -2.03125 -18.7630 -2.30469 -18.9453 -2.53906  c
-19.1276 -2.77344 -19.4271 -2.97396 -19.8438 -3.14062  c
-20.1146 -3.24479 -20.7109 -3.40625 -21.6328 -3.62500  c
-22.5547 -3.84375 -23.1979 -4.05208 -23.5625 -4.25000  c
-24.0417 -4.50000 -24.3984 -4.80990 -24.6328 -5.17969  c
-24.8672 -5.54948 -24.9844 -5.96875 -24.9844 -6.43750  c
-24.9844 -6.93750 -24.8411 -7.40885 -24.5547 -7.85156  c
-24.2682 -8.29427 -23.8490 -8.62760 -23.2969 -8.85156  c
-22.7448 -9.07552 -22.1302 -9.18750 -21.4531 -9.18750  c
-20.7135 -9.18750 -20.0599 -9.06771 -19.4922 -8.82812  c
-18.9245 -8.58854 -18.4896 -8.23698 -18.1875 -7.77344  c
-17.8854 -7.30990 -17.7188 -6.78646 -17.6875 -6.20312  c
-18.9688 -6.10938 l
-19.0312 -6.73438 -19.2604 -7.21094 -19.6562 -7.53906  c
-20.0521 -7.86719 -20.6354 -8.03125 -21.4062 -8.03125  c
-22.2083 -8.03125 -22.7917 -7.88281 -23.1562 -7.58594  c
-23.5208 -7.28906 -23.7031 -6.93229 -23.7031 -6.51562  c
-23.7031 -6.16146 -23.5729 -5.86458 -23.3125 -5.62500  c
-23.0625 -5.39583 -22.3984 -5.15885 -21.3203 -4.91406  c
-20.2422 -4.66927 -19.5052 -4.45833 -19.1094 -4.28125  c
-18.5260 -4.01042 -18.0938 -3.66927 -17.8125 -3.25781  c
-17.5312 -2.84635 -17.3906 -2.36979 -17.3906 -1.82812  c
-17.3906 -1.29688 -17.5443 -.794271 -17.8516 -.320312  c
-18.1589 .153646 -18.5990 .520833 -19.1719 .781250  c
-19.7448 1.04167 -20.3854 1.17188 -21.0938 1.17188  c
-22.0000 1.17188 -22.7604 1.03906 -23.3750 .773438  c
-23.9896 .507812 -24.4714 .109375 -24.8203 -.421875  c
-25.1693 -.953125 -25.3542 -1.55208 -25.3750 -2.21875  c
h
-16.0840 -3.93750 m
-16.0840 -5.12500 -15.9616 -6.08073 -15.7168 -6.80469  c
-15.4720 -7.52865 -15.1100 -8.08594 -14.6309 -8.47656  c
-14.1517 -8.86719 -13.5475 -9.06250 -12.8184 -9.06250  c
-12.2767 -9.06250 -11.8027 -8.95312 -11.3965 -8.73438  c
-10.9902 -8.51562 -10.6543 -8.20312 -10.3887 -7.79688  c
-10.1230 -7.39062 -9.91732 -6.89583 -9.77148 -6.31250  c
-9.62565 -5.72917 -9.55273 -4.93750 -9.55273 -3.93750  c
-9.55273 -2.76042 -9.67253 -1.81250 -9.91211 -1.09375  c
-10.1517 -.375000 -10.5111 .182292 -10.9902 .578125  c
-11.4694 .973958 -12.0788 1.17188 -12.8184 1.17188  c
-13.7767 1.17188 -14.5319 .822917 -15.0840 .125000  c
-15.7507 -.708333 -16.0840 -2.06250 -16.0840 -3.93750  c
h
-14.8184 -3.93750 m
-14.8184 -2.29167 -14.6257 -1.19792 -14.2402 -.656250  c
-13.8548 -.114583 -13.3809 .156250 -12.8184 .156250  c
-12.2454 .156250 -11.7663 -.117188 -11.3809 -.664062  c
-10.9954 -1.21094 -10.8027 -2.30208 -10.8027 -3.93750  c
-10.8027 -5.59375 -10.9954 -6.69271 -11.3809 -7.23438  c
-11.7663 -7.77604 -12.2507 -8.04688 -12.8340 -8.04688  c
-13.3965 -8.04688 -13.8444 -7.80729 -14.1777 -7.32812  c
-14.6048 -6.71354 -14.8184 -5.58333 -14.8184 -3.93750  c
h
f
1 J
2 j
0.00000 0.00000 0.00000 RG
newpath
-25.1924 6.80761 m
-56.9289 -24.9289 l
-61.6430 -29.6430 -64.0000 -28.6667 -64.0000 -22.0000  c
-64.0000 54.0000 l
-64.0000 60.6667 -61.6430 61.6430 -56.9289 56.9289  c
-25.1924 25.1924 l
S
newpath
-30.1924 33.8526 m
-25.1924 25.1924 l
-33.8526 30.1924 l
S
2 J
0 j
1 J
2 j
newpath
-6.80761 6.80761 m
24.9289 -24.9289 l
29.6430 -29.6430 32.0000 -28.6667 32.0000 -22.0000  c
32.0000 54.0000 l
32.0000 60.6667 29.6430 61.6430 24.9289 56.9289  c
-6.80761 25.1924 l
S
newpath
1.85264 30.1924 m
-6.80761 25.1924 l
-1.80761 33.8526 l
S
2 J
0 j
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix

%%Trailer
%%EOF
