%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 105 575 686
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Domingo, 12 de Maio de 2019 00h59min58s BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
157 164 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
157.000 0.00000 l
157.000 164.000 l
0.00000 164.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
157.000 0.00000 l
157.000 164.000 l
0.00000 164.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
h
f
Q
[ 1.00000 0.00000 0.00000 1.00000 434.000 145.000 ] concat
.258824 .627451 .658824 RG
newpath
-358.922 -73.0000 m
-358.922 -83.0156 l
-355.141 -83.0156 l
-354.474 -83.0156 -353.964 -82.9844 -353.609 -82.9219  c
-353.120 -82.8385 -352.708 -82.6823 -352.375 -82.4531  c
-352.042 -82.2240 -351.773 -81.9036 -351.570 -81.4922  c
-351.367 -81.0807 -351.266 -80.6250 -351.266 -80.1250  c
-351.266 -79.2708 -351.536 -78.5495 -352.078 -77.9609  c
-352.620 -77.3724 -353.599 -77.0781 -355.016 -77.0781  c
-357.594 -77.0781 l
-357.594 -73.0000 l
-358.922 -73.0000 l
h
-357.594 -78.2500 m
-355.000 -78.2500 l
-354.146 -78.2500 -353.539 -78.4115 -353.180 -78.7344  c
-352.820 -79.0573 -352.641 -79.5052 -352.641 -80.0781  c
-352.641 -80.5052 -352.745 -80.8672 -352.953 -81.1641  c
-353.161 -81.4609 -353.443 -81.6562 -353.797 -81.7500  c
-354.016 -81.8125 -354.427 -81.8438 -355.031 -81.8438  c
-357.594 -81.8438 l
-357.594 -78.2500 l
h
-345.006 -75.6562 m
-343.787 -75.5000 l
-343.923 -74.6667 -344.264 -74.0130 -344.811 -73.5391  c
-345.357 -73.0651 -346.027 -72.8281 -346.818 -72.8281  c
-347.808 -72.8281 -348.605 -73.1536 -349.209 -73.8047  c
-349.813 -74.4557 -350.115 -75.3906 -350.115 -76.6094  c
-350.115 -77.3906 -349.985 -78.0755 -349.725 -78.6641  c
-349.464 -79.2526 -349.068 -79.6927 -348.537 -79.9844  c
-348.006 -80.2760 -347.428 -80.4219 -346.803 -80.4219  c
-346.021 -80.4219 -345.378 -80.2240 -344.873 -79.8281  c
-344.368 -79.4323 -344.048 -78.8646 -343.912 -78.1250  c
-345.100 -77.9375 l
-345.214 -78.4271 -345.417 -78.7943 -345.709 -79.0391  c
-346.001 -79.2839 -346.350 -79.4062 -346.756 -79.4062  c
-347.381 -79.4062 -347.886 -79.1849 -348.271 -78.7422  c
-348.657 -78.2995 -348.850 -77.5990 -348.850 -76.6406  c
-348.850 -75.6615 -348.662 -74.9505 -348.287 -74.5078  c
-347.912 -74.0651 -347.428 -73.8438 -346.834 -73.8438  c
-346.344 -73.8438 -345.938 -73.9922 -345.615 -74.2891  c
-345.292 -74.5859 -345.089 -75.0417 -345.006 -75.6562  c
h
-340.428 -75.4688 m
-340.438 -75.6354 -340.443 -75.7604 -340.443 -75.8438  c
-340.443 -76.3229 -340.376 -76.7396 -340.240 -77.0938  c
-340.136 -77.3542 -339.975 -77.6198 -339.756 -77.8906  c
-339.589 -78.0885 -339.292 -78.3750 -338.865 -78.7500  c
-338.438 -79.1250 -338.162 -79.4245 -338.037 -79.6484  c
-337.912 -79.8724 -337.850 -80.1146 -337.850 -80.3750  c
-337.850 -80.8542 -338.035 -81.2760 -338.404 -81.6406  c
-338.774 -82.0052 -339.230 -82.1875 -339.771 -82.1875  c
-340.303 -82.1875 -340.743 -82.0234 -341.092 -81.6953  c
-341.441 -81.3672 -341.673 -80.8542 -341.787 -80.1562  c
-343.053 -80.2969 l
-342.938 -81.2344 -342.600 -81.9505 -342.037 -82.4453  c
-341.475 -82.9401 -340.730 -83.1875 -339.803 -83.1875  c
-338.824 -83.1875 -338.042 -82.9219 -337.459 -82.3906  c
-336.876 -81.8594 -336.584 -81.2135 -336.584 -80.4531  c
-336.584 -80.0156 -336.686 -79.6120 -336.889 -79.2422  c
-337.092 -78.8724 -337.490 -78.4271 -338.084 -77.9062  c
-338.490 -77.5521 -338.756 -77.2891 -338.881 -77.1172  c
-339.006 -76.9453 -339.097 -76.7500 -339.154 -76.5312  c
-339.212 -76.3125 -339.245 -75.9583 -339.256 -75.4688  c
-340.428 -75.4688 l
h
-340.506 -73.0000 m
-340.506 -74.4062 l
-339.115 -74.4062 l
-339.115 -73.0000 l
-340.506 -73.0000 l
h
f
.258824 .258824 .658824 RG
newpath
-359.719 -57.0000 m
-359.719 -58.0000 l
-355.109 -63.2969 l
-355.630 -63.2760 -356.094 -63.2656 -356.500 -63.2656  c
-359.453 -63.2656 l
-359.453 -64.2656 l
-353.516 -64.2656 l
-353.516 -63.4531 l
-357.453 -58.8438 l
-358.203 -58.0000 l
-357.651 -58.0417 -357.135 -58.0625 -356.656 -58.0625  c
-353.297 -58.0625 l
-353.297 -57.0000 l
-359.719 -57.0000 l
h
-345.609 -62.8906 m
-352.219 -62.8906 l
-352.219 -64.0469 l
-345.609 -64.0469 l
-345.609 -62.8906 l
h
-345.609 -59.8438 m
-352.219 -59.8438 l
-352.219 -61.0000 l
-345.609 -61.0000 l
-345.609 -59.8438 l
h
-344.543 -57.0000 m
-344.543 -58.0000 l
-339.934 -63.2969 l
-340.454 -63.2760 -340.918 -63.2656 -341.324 -63.2656  c
-344.277 -63.2656 l
-344.277 -64.2656 l
-338.340 -64.2656 l
-338.340 -63.4531 l
-342.277 -58.8438 l
-343.027 -58.0000 l
-342.475 -58.0417 -341.960 -58.0625 -341.480 -58.0625  c
-338.121 -58.0625 l
-338.121 -57.0000 l
-344.543 -57.0000 l
h
-334.324 -58.6250 m
-334.324 -61.3750 l
-337.043 -61.3750 l
-337.043 -62.5156 l
-334.324 -62.5156 l
-334.324 -65.2500 l
-333.152 -65.2500 l
-333.152 -62.5156 l
-330.434 -62.5156 l
-330.434 -61.3750 l
-333.152 -61.3750 l
-333.152 -58.6250 l
-334.324 -58.6250 l
h
-324.430 -57.0000 m
-325.664 -57.0000 l
-325.664 -64.8438 l
-325.956 -64.5625 -326.344 -64.2786 -326.828 -63.9922  c
-327.312 -63.7057 -327.742 -63.4948 -328.117 -63.3594  c
-328.117 -64.5469 l
-327.430 -64.8698 -326.828 -65.2604 -326.312 -65.7188  c
-325.797 -66.1771 -325.435 -66.6250 -325.227 -67.0625  c
-324.430 -67.0625 l
-324.430 -57.0000 l
h
-320.612 -57.0000 m
-320.612 -58.4062 l
-319.222 -58.4062 l
-319.222 -57.0000 l
-319.222 -56.4896 -319.313 -56.0755 -319.495 -55.7578  c
-319.677 -55.4401 -319.966 -55.1927 -320.362 -55.0156  c
-320.706 -55.5469 l
-320.446 -55.6615 -320.253 -55.8281 -320.128 -56.0469  c
-320.003 -56.2656 -319.935 -56.5833 -319.925 -57.0000  c
-320.612 -57.0000 l
h
-313.146 -57.0000 m
-313.146 -67.0156 l
-311.927 -67.0156 l
-311.927 -61.3125 l
-309.005 -64.2656 l
-307.411 -64.2656 l
-310.192 -61.5625 l
-307.130 -57.0000 l
-308.661 -57.0000 l
-311.052 -60.7188 l
-311.927 -59.8750 l
-311.927 -57.0000 l
-313.146 -57.0000 l
h
-301.864 -57.0000 m
-303.099 -57.0000 l
-303.099 -64.8438 l
-303.390 -64.5625 -303.778 -64.2786 -304.263 -63.9922  c
-304.747 -63.7057 -305.177 -63.4948 -305.552 -63.3594  c
-305.552 -64.5469 l
-304.864 -64.8698 -304.263 -65.2604 -303.747 -65.7188  c
-303.231 -66.1771 -302.869 -66.6250 -302.661 -67.0625  c
-301.864 -67.0625 l
-301.864 -57.0000 l
h
-298.031 -62.8594 m
-298.031 -64.2656 l
-296.625 -64.2656 l
-296.625 -62.8594 l
-298.031 -62.8594 l
h
-298.031 -57.0000 m
-298.031 -58.4062 l
-296.625 -58.4062 l
-296.625 -57.0000 l
-298.031 -57.0000 l
h
-288.017 -62.8906 m
-294.626 -62.8906 l
-294.626 -64.0469 l
-288.017 -64.0469 l
-288.017 -62.8906 l
h
-288.017 -59.8438 m
-294.626 -59.8438 l
-294.626 -61.0000 l
-288.017 -61.0000 l
-288.017 -59.8438 l
h
-286.653 -61.9375 m
-286.653 -63.1250 -286.531 -64.0807 -286.286 -64.8047  c
-286.041 -65.5286 -285.679 -66.0859 -285.200 -66.4766  c
-284.721 -66.8672 -284.117 -67.0625 -283.388 -67.0625  c
-282.846 -67.0625 -282.372 -66.9531 -281.966 -66.7344  c
-281.560 -66.5156 -281.224 -66.2031 -280.958 -65.7969  c
-280.692 -65.3906 -280.487 -64.8958 -280.341 -64.3125  c
-280.195 -63.7292 -280.122 -62.9375 -280.122 -61.9375  c
-280.122 -60.7604 -280.242 -59.8125 -280.481 -59.0938  c
-280.721 -58.3750 -281.080 -57.8177 -281.560 -57.4219  c
-282.039 -57.0260 -282.648 -56.8281 -283.388 -56.8281  c
-284.346 -56.8281 -285.101 -57.1771 -285.653 -57.8750  c
-286.320 -58.7083 -286.653 -60.0625 -286.653 -61.9375  c
h
-285.388 -61.9375 m
-285.388 -60.2917 -285.195 -59.1979 -284.810 -58.6562  c
-284.424 -58.1146 -283.950 -57.8438 -283.388 -57.8438  c
-282.815 -57.8438 -282.336 -58.1172 -281.950 -58.6641  c
-281.565 -59.2109 -281.372 -60.3021 -281.372 -61.9375  c
-281.372 -63.5938 -281.565 -64.6927 -281.950 -65.2344  c
-282.336 -65.7760 -282.820 -66.0469 -283.403 -66.0469  c
-283.966 -66.0469 -284.414 -65.8073 -284.747 -65.3281  c
-285.174 -64.7135 -285.388 -63.5833 -285.388 -61.9375  c
h
f
.647059 .686275 .803922 RG
newpath
-356.000 -112.000 m
-356.000 -105.373 -361.373 -100.000 -368.000 -100.000  c
-374.627 -100.000 -380.000 -105.373 -380.000 -112.000  c
-380.000 -118.627 -374.627 -124.000 -368.000 -124.000  c
-361.373 -124.000 -356.000 -118.627 -356.000 -112.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-356.000 -112.000 m
-356.000 -105.373 -361.373 -100.000 -368.000 -100.000  c
-374.627 -100.000 -380.000 -105.373 -380.000 -112.000  c
-380.000 -118.627 -374.627 -124.000 -368.000 -124.000  c
-361.373 -124.000 -356.000 -118.627 -356.000 -112.000  c
h
S
newpath
-360.000 -112.000 m
-360.000 -107.582 -363.582 -104.000 -368.000 -104.000  c
-372.418 -104.000 -376.000 -107.582 -376.000 -112.000  c
-376.000 -116.418 -372.418 -120.000 -368.000 -120.000  c
-363.582 -120.000 -360.000 -116.418 -360.000 -112.000  c
h
S
.647059 .686275 .803922 RG
newpath
-356.000 -16.0000 m
-356.000 -9.37258 -361.373 -4.00000 -368.000 -4.00000  c
-374.627 -4.00000 -380.000 -9.37258 -380.000 -16.0000  c
-380.000 -22.6274 -374.627 -28.0000 -368.000 -28.0000  c
-361.373 -28.0000 -356.000 -22.6274 -356.000 -16.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-356.000 -16.0000 m
-356.000 -9.37258 -361.373 -4.00000 -368.000 -4.00000  c
-374.627 -4.00000 -380.000 -9.37258 -380.000 -16.0000  c
-380.000 -22.6274 -374.627 -28.0000 -368.000 -28.0000  c
-361.373 -28.0000 -356.000 -22.6274 -356.000 -16.0000  c
h
S
newpath
-372.330 -18.5000 m
-373.543 -16.3986 -373.073 -13.7295 -371.214 -12.1698  c
-369.355 -10.6101 -366.645 -10.6101 -364.786 -12.1698  c
-362.927 -13.7295 -362.457 -16.3986 -363.670 -18.5000  c
S
.549020 .219608 .388235 RG
newpath
-375.375 -132.219 m
-374.125 -132.328 l
-374.062 -131.828 -373.922 -131.417 -373.703 -131.094  c
-373.484 -130.771 -373.148 -130.510 -372.695 -130.312  c
-372.242 -130.115 -371.729 -130.016 -371.156 -130.016  c
-370.656 -130.016 -370.211 -130.091 -369.820 -130.242  c
-369.430 -130.393 -369.141 -130.599 -368.953 -130.859  c
-368.766 -131.120 -368.672 -131.406 -368.672 -131.719  c
-368.672 -132.031 -368.763 -132.305 -368.945 -132.539  c
-369.128 -132.773 -369.427 -132.974 -369.844 -133.141  c
-370.115 -133.245 -370.711 -133.406 -371.633 -133.625  c
-372.555 -133.844 -373.198 -134.052 -373.562 -134.250  c
-374.042 -134.500 -374.398 -134.810 -374.633 -135.180  c
-374.867 -135.549 -374.984 -135.969 -374.984 -136.438  c
-374.984 -136.938 -374.841 -137.409 -374.555 -137.852  c
-374.268 -138.294 -373.849 -138.628 -373.297 -138.852  c
-372.745 -139.076 -372.130 -139.188 -371.453 -139.188  c
-370.714 -139.188 -370.060 -139.068 -369.492 -138.828  c
-368.924 -138.589 -368.490 -138.237 -368.188 -137.773  c
-367.885 -137.310 -367.719 -136.786 -367.688 -136.203  c
-368.969 -136.109 l
-369.031 -136.734 -369.260 -137.211 -369.656 -137.539  c
-370.052 -137.867 -370.635 -138.031 -371.406 -138.031  c
-372.208 -138.031 -372.792 -137.883 -373.156 -137.586  c
-373.521 -137.289 -373.703 -136.932 -373.703 -136.516  c
-373.703 -136.161 -373.573 -135.865 -373.312 -135.625  c
-373.062 -135.396 -372.398 -135.159 -371.320 -134.914  c
-370.242 -134.669 -369.505 -134.458 -369.109 -134.281  c
-368.526 -134.010 -368.094 -133.669 -367.812 -133.258  c
-367.531 -132.846 -367.391 -132.370 -367.391 -131.828  c
-367.391 -131.297 -367.544 -130.794 -367.852 -130.320  c
-368.159 -129.846 -368.599 -129.479 -369.172 -129.219  c
-369.745 -128.958 -370.385 -128.828 -371.094 -128.828  c
-372.000 -128.828 -372.760 -128.961 -373.375 -129.227  c
-373.990 -129.492 -374.471 -129.891 -374.820 -130.422  c
-375.169 -130.953 -375.354 -131.552 -375.375 -132.219  c
h
-366.084 -133.938 m
-366.084 -135.125 -365.962 -136.081 -365.717 -136.805  c
-365.472 -137.529 -365.110 -138.086 -364.631 -138.477  c
-364.152 -138.867 -363.548 -139.062 -362.818 -139.062  c
-362.277 -139.062 -361.803 -138.953 -361.396 -138.734  c
-360.990 -138.516 -360.654 -138.203 -360.389 -137.797  c
-360.123 -137.391 -359.917 -136.896 -359.771 -136.312  c
-359.626 -135.729 -359.553 -134.938 -359.553 -133.938  c
-359.553 -132.760 -359.673 -131.812 -359.912 -131.094  c
-360.152 -130.375 -360.511 -129.818 -360.990 -129.422  c
-361.469 -129.026 -362.079 -128.828 -362.818 -128.828  c
-363.777 -128.828 -364.532 -129.177 -365.084 -129.875  c
-365.751 -130.708 -366.084 -132.062 -366.084 -133.938  c
h
-364.818 -133.938 m
-364.818 -132.292 -364.626 -131.198 -364.240 -130.656  c
-363.855 -130.115 -363.381 -129.844 -362.818 -129.844  c
-362.245 -129.844 -361.766 -130.117 -361.381 -130.664  c
-360.995 -131.211 -360.803 -132.302 -360.803 -133.938  c
-360.803 -135.594 -360.995 -136.693 -361.381 -137.234  c
-361.766 -137.776 -362.251 -138.047 -362.834 -138.047  c
-363.396 -138.047 -363.844 -137.807 -364.178 -137.328  c
-364.605 -136.714 -364.818 -135.583 -364.818 -133.938  c
h
f
.258824 .258824 .658824 RG
newpath
-431.891 -57.0000 m
-429.250 -60.7812 l
-431.703 -64.2656 l
-430.156 -64.2656 l
-429.047 -62.5625 l
-428.839 -62.2396 -428.672 -61.9688 -428.547 -61.7500  c
-428.339 -62.0521 -428.151 -62.3177 -427.984 -62.5469  c
-426.766 -64.2656 l
-425.297 -64.2656 l
-427.797 -60.8438 l
-425.109 -57.0000 l
-426.609 -57.0000 l
-428.109 -59.2500 l
-428.500 -59.8594 l
-430.406 -57.0000 l
-431.891 -57.0000 l
h
-420.469 -57.0000 m
-420.469 -59.4062 l
-424.828 -59.4062 l
-424.828 -60.5312 l
-420.250 -67.0156 l
-419.250 -67.0156 l
-419.250 -60.5312 l
-417.891 -60.5312 l
-417.891 -59.4062 l
-419.250 -59.4062 l
-419.250 -57.0000 l
-420.469 -57.0000 l
h
-420.469 -60.5312 m
-420.469 -65.0469 l
-423.609 -60.5312 l
-420.469 -60.5312 l
h
-415.948 -62.8594 m
-415.948 -64.2656 l
-414.542 -64.2656 l
-414.542 -62.8594 l
-415.948 -62.8594 l
h
-415.948 -57.0000 m
-415.948 -58.4062 l
-414.542 -58.4062 l
-414.542 -57.0000 l
-415.948 -57.0000 l
h
-405.934 -62.8906 m
-412.543 -62.8906 l
-412.543 -64.0469 l
-405.934 -64.0469 l
-405.934 -62.8906 l
h
-405.934 -59.8438 m
-412.543 -59.8438 l
-412.543 -61.0000 l
-405.934 -61.0000 l
-405.934 -59.8438 l
h
-404.570 -61.9375 m
-404.570 -63.1250 -404.448 -64.0807 -404.203 -64.8047  c
-403.958 -65.5286 -403.596 -66.0859 -403.117 -66.4766  c
-402.638 -66.8672 -402.034 -67.0625 -401.305 -67.0625  c
-400.763 -67.0625 -400.289 -66.9531 -399.883 -66.7344  c
-399.477 -66.5156 -399.141 -66.2031 -398.875 -65.7969  c
-398.609 -65.3906 -398.404 -64.8958 -398.258 -64.3125  c
-398.112 -63.7292 -398.039 -62.9375 -398.039 -61.9375  c
-398.039 -60.7604 -398.159 -59.8125 -398.398 -59.0938  c
-398.638 -58.3750 -398.997 -57.8177 -399.477 -57.4219  c
-399.956 -57.0260 -400.565 -56.8281 -401.305 -56.8281  c
-402.263 -56.8281 -403.018 -57.1771 -403.570 -57.8750  c
-404.237 -58.7083 -404.570 -60.0625 -404.570 -61.9375  c
h
-403.305 -61.9375 m
-403.305 -60.2917 -403.112 -59.1979 -402.727 -58.6562  c
-402.341 -58.1146 -401.867 -57.8438 -401.305 -57.8438  c
-400.732 -57.8438 -400.253 -58.1172 -399.867 -58.6641  c
-399.482 -59.2109 -399.289 -60.3021 -399.289 -61.9375  c
-399.289 -63.5938 -399.482 -64.6927 -399.867 -65.2344  c
-400.253 -65.7760 -400.737 -66.0469 -401.320 -66.0469  c
-401.883 -66.0469 -402.331 -65.8073 -402.664 -65.3281  c
-403.091 -64.7135 -403.305 -63.5833 -403.305 -61.9375  c
h
f
.549020 .219608 .388235 RG
newpath
-375.375 11.7812 m
-374.125 11.6719 l
-374.062 12.1719 -373.922 12.5833 -373.703 12.9062  c
-373.484 13.2292 -373.148 13.4896 -372.695 13.6875  c
-372.242 13.8854 -371.729 13.9844 -371.156 13.9844  c
-370.656 13.9844 -370.211 13.9089 -369.820 13.7578  c
-369.430 13.6068 -369.141 13.4010 -368.953 13.1406  c
-368.766 12.8802 -368.672 12.5938 -368.672 12.2812  c
-368.672 11.9688 -368.763 11.6953 -368.945 11.4609  c
-369.128 11.2266 -369.427 11.0260 -369.844 10.8594  c
-370.115 10.7552 -370.711 10.5938 -371.633 10.3750  c
-372.555 10.1562 -373.198 9.94792 -373.562 9.75000  c
-374.042 9.50000 -374.398 9.19010 -374.633 8.82031  c
-374.867 8.45052 -374.984 8.03125 -374.984 7.56250  c
-374.984 7.06250 -374.841 6.59115 -374.555 6.14844  c
-374.268 5.70573 -373.849 5.37240 -373.297 5.14844  c
-372.745 4.92448 -372.130 4.81250 -371.453 4.81250  c
-370.714 4.81250 -370.060 4.93229 -369.492 5.17188  c
-368.924 5.41146 -368.490 5.76302 -368.188 6.22656  c
-367.885 6.69010 -367.719 7.21354 -367.688 7.79688  c
-368.969 7.89062 l
-369.031 7.26562 -369.260 6.78906 -369.656 6.46094  c
-370.052 6.13281 -370.635 5.96875 -371.406 5.96875  c
-372.208 5.96875 -372.792 6.11719 -373.156 6.41406  c
-373.521 6.71094 -373.703 7.06771 -373.703 7.48438  c
-373.703 7.83854 -373.573 8.13542 -373.312 8.37500  c
-373.062 8.60417 -372.398 8.84115 -371.320 9.08594  c
-370.242 9.33073 -369.505 9.54167 -369.109 9.71875  c
-368.526 9.98958 -368.094 10.3307 -367.812 10.7422  c
-367.531 11.1536 -367.391 11.6302 -367.391 12.1719  c
-367.391 12.7031 -367.544 13.2057 -367.852 13.6797  c
-368.159 14.1536 -368.599 14.5208 -369.172 14.7812  c
-369.745 15.0417 -370.385 15.1719 -371.094 15.1719  c
-372.000 15.1719 -372.760 15.0391 -373.375 14.7734  c
-373.990 14.5078 -374.471 14.1094 -374.820 13.5781  c
-375.169 13.0469 -375.354 12.4479 -375.375 11.7812  c
h
-361.443 15.0000 m
-362.678 15.0000 l
-362.678 7.15625 l
-362.969 7.43750 -363.357 7.72135 -363.842 8.00781  c
-364.326 8.29427 -364.756 8.50521 -365.131 8.64062  c
-365.131 7.45312 l
-364.443 7.13021 -363.842 6.73958 -363.326 6.28125  c
-362.811 5.82292 -362.449 5.37500 -362.240 4.93750  c
-361.443 4.93750 l
-361.443 15.0000 l
h
f
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
-373.814 -27.6276 m
-387.528 -55.0557 l
-390.509 -61.0186 -390.509 -66.9814 -387.528 -72.9443  c
-373.814 -100.372 l
S
10.0000 M
[ ] 0.00000 d
newpath
-375.819 -90.5755 m
-373.814 -100.372 l
-380.448 -92.8904 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-368.000 -99.0000 m
-368.000 -29.0000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-370.588 -38.6593 m
-368.000 -29.0000 l
-365.412 -38.6593 l
S
2 J
0 j
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix

%%Trailer
%%EOF
