%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 150 575 641
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Domingo, 12 de Maio de 2019 00h59min43s BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
177 156 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
177.000 0.00000 l
177.000 156.000 l
0.00000 156.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
177.000 0.00000 l
177.000 156.000 l
0.00000 156.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
h
f
Q
[ 1.00000 0.00000 0.00000 1.00000 378.000 177.000 ] concat
.258824 .627451 .658824 RG
newpath
-302.922 -153.000 m
-302.922 -163.016 l
-299.469 -163.016 l
-298.688 -163.016 -298.094 -162.969 -297.688 -162.875  c
-297.115 -162.750 -296.625 -162.510 -296.219 -162.156  c
-295.688 -161.708 -295.292 -161.138 -295.031 -160.445  c
-294.771 -159.753 -294.641 -158.958 -294.641 -158.062  c
-294.641 -157.302 -294.729 -156.628 -294.906 -156.039  c
-295.083 -155.451 -295.310 -154.964 -295.586 -154.578  c
-295.862 -154.193 -296.167 -153.891 -296.500 -153.672  c
-296.833 -153.453 -297.232 -153.286 -297.695 -153.172  c
-298.159 -153.057 -298.693 -153.000 -299.297 -153.000  c
-302.922 -153.000 l
h
-301.594 -154.188 m
-299.453 -154.188 l
-298.797 -154.188 -298.279 -154.247 -297.898 -154.367  c
-297.518 -154.487 -297.219 -154.661 -297.000 -154.891  c
-296.688 -155.203 -296.443 -155.625 -296.266 -156.156  c
-296.089 -156.688 -296.000 -157.333 -296.000 -158.094  c
-296.000 -159.135 -296.172 -159.938 -296.516 -160.500  c
-296.859 -161.062 -297.276 -161.443 -297.766 -161.641  c
-298.130 -161.776 -298.703 -161.844 -299.484 -161.844  c
-301.594 -161.844 l
-301.594 -154.188 l
h
-292.671 -153.000 m
-292.671 -159.297 l
-293.765 -159.297 l
-293.765 -160.266 l
-292.671 -160.266 l
-292.671 -161.031 l
-292.671 -161.521 -292.629 -161.885 -292.546 -162.125  c
-292.421 -162.438 -292.210 -162.693 -291.913 -162.891  c
-291.616 -163.089 -291.197 -163.188 -290.655 -163.188  c
-290.312 -163.188 -289.931 -163.146 -289.515 -163.062  c
-289.702 -162.000 l
-289.952 -162.042 -290.192 -162.062 -290.421 -162.062  c
-290.796 -162.062 -291.062 -161.984 -291.218 -161.828  c
-291.374 -161.672 -291.452 -161.375 -291.452 -160.938  c
-291.452 -160.266 l
-290.030 -160.266 l
-290.030 -159.297 l
-291.452 -159.297 l
-291.452 -153.000 l
-292.671 -153.000 l
h
-287.734 -153.000 m
-289.953 -160.266 l
-288.688 -160.266 l
-287.531 -156.062 l
-287.094 -154.516 l
-287.083 -154.589 -286.958 -155.089 -286.719 -156.016  c
-285.562 -160.266 l
-284.312 -160.266 l
-283.219 -156.047 l
-282.859 -154.656 l
-282.438 -156.062 l
-281.188 -160.266 l
-280.000 -160.266 l
-282.266 -153.000 l
-283.547 -153.000 l
-284.703 -157.344 l
-284.984 -158.578 l
-286.453 -153.000 l
-287.734 -153.000 l
h
-279.452 -155.172 m
-278.249 -155.359 l
-278.176 -154.870 -277.983 -154.495 -277.671 -154.234  c
-277.358 -153.974 -276.921 -153.844 -276.358 -153.844  c
-275.796 -153.844 -275.377 -153.958 -275.101 -154.188  c
-274.825 -154.417 -274.687 -154.688 -274.687 -155.000  c
-274.687 -155.281 -274.812 -155.500 -275.062 -155.656  c
-275.228 -155.771 -275.645 -155.911 -276.312 -156.078  c
-277.218 -156.307 -277.845 -156.505 -278.194 -156.672  c
-278.543 -156.839 -278.806 -157.068 -278.983 -157.359  c
-279.160 -157.651 -279.249 -157.974 -279.249 -158.328  c
-279.249 -158.651 -279.176 -158.951 -279.030 -159.227  c
-278.884 -159.503 -278.681 -159.734 -278.421 -159.922  c
-278.233 -160.057 -277.976 -160.174 -277.647 -160.273  c
-277.319 -160.372 -276.963 -160.422 -276.577 -160.422  c
-276.015 -160.422 -275.517 -160.341 -275.085 -160.180  c
-274.653 -160.018 -274.332 -159.797 -274.124 -159.516  c
-273.916 -159.234 -273.775 -158.859 -273.702 -158.391  c
-274.905 -158.219 l
-274.957 -158.594 -275.116 -158.885 -275.382 -159.094  c
-275.647 -159.302 -276.020 -159.406 -276.499 -159.406  c
-277.062 -159.406 -277.463 -159.315 -277.702 -159.133  c
-277.942 -158.951 -278.062 -158.729 -278.062 -158.469  c
-278.062 -158.312 -278.015 -158.172 -277.921 -158.047  c
-277.817 -157.911 -277.655 -157.802 -277.437 -157.719  c
-277.322 -157.677 -276.963 -157.573 -276.358 -157.406  c
-275.483 -157.167 -274.874 -156.974 -274.530 -156.828  c
-274.187 -156.682 -273.918 -156.469 -273.726 -156.188  c
-273.533 -155.906 -273.437 -155.557 -273.437 -155.141  c
-273.437 -154.724 -273.554 -154.336 -273.788 -153.977  c
-274.022 -153.617 -274.366 -153.336 -274.819 -153.133  c
-275.272 -152.930 -275.785 -152.828 -276.358 -152.828  c
-277.296 -152.828 -278.012 -153.026 -278.507 -153.422  c
-279.002 -153.818 -279.317 -154.401 -279.452 -155.172  c
h
-269.655 -155.469 m
-269.666 -155.635 -269.671 -155.760 -269.671 -155.844  c
-269.671 -156.323 -269.603 -156.740 -269.468 -157.094  c
-269.364 -157.354 -269.202 -157.620 -268.983 -157.891  c
-268.817 -158.089 -268.520 -158.375 -268.093 -158.750  c
-267.666 -159.125 -267.390 -159.424 -267.265 -159.648  c
-267.140 -159.872 -267.077 -160.115 -267.077 -160.375  c
-267.077 -160.854 -267.262 -161.276 -267.632 -161.641  c
-268.002 -162.005 -268.457 -162.188 -268.999 -162.188  c
-269.530 -162.188 -269.970 -162.023 -270.319 -161.695  c
-270.668 -161.367 -270.900 -160.854 -271.015 -160.156  c
-272.280 -160.297 l
-272.166 -161.234 -271.827 -161.951 -271.265 -162.445  c
-270.702 -162.940 -269.957 -163.188 -269.030 -163.188  c
-268.051 -163.188 -267.270 -162.922 -266.687 -162.391  c
-266.103 -161.859 -265.812 -161.214 -265.812 -160.453  c
-265.812 -160.016 -265.913 -159.612 -266.116 -159.242  c
-266.319 -158.872 -266.718 -158.427 -267.312 -157.906  c
-267.718 -157.552 -267.983 -157.289 -268.108 -157.117  c
-268.233 -156.945 -268.325 -156.750 -268.382 -156.531  c
-268.439 -156.312 -268.473 -155.958 -268.483 -155.469  c
-269.655 -155.469 l
h
-269.733 -153.000 m
-269.733 -154.406 l
-268.343 -154.406 l
-268.343 -153.000 l
-269.733 -153.000 l
h
f
newpath
-374.922 -89.0000 m
-374.922 -99.0156 l
-371.469 -99.0156 l
-370.688 -99.0156 -370.094 -98.9688 -369.688 -98.8750  c
-369.115 -98.7500 -368.625 -98.5104 -368.219 -98.1562  c
-367.688 -97.7083 -367.292 -97.1380 -367.031 -96.4453  c
-366.771 -95.7526 -366.641 -94.9583 -366.641 -94.0625  c
-366.641 -93.3021 -366.729 -92.6276 -366.906 -92.0391  c
-367.083 -91.4505 -367.310 -90.9635 -367.586 -90.5781  c
-367.862 -90.1927 -368.167 -89.8906 -368.500 -89.6719  c
-368.833 -89.4531 -369.232 -89.2865 -369.695 -89.1719  c
-370.159 -89.0573 -370.693 -89.0000 -371.297 -89.0000  c
-374.922 -89.0000 l
h
-373.594 -90.1875 m
-371.453 -90.1875 l
-370.797 -90.1875 -370.279 -90.2474 -369.898 -90.3672  c
-369.518 -90.4870 -369.219 -90.6615 -369.000 -90.8906  c
-368.688 -91.2031 -368.443 -91.6250 -368.266 -92.1562  c
-368.089 -92.6875 -368.000 -93.3333 -368.000 -94.0938  c
-368.000 -95.1354 -368.172 -95.9375 -368.516 -96.5000  c
-368.859 -97.0625 -369.276 -97.4427 -369.766 -97.6406  c
-370.130 -97.7760 -370.703 -97.8438 -371.484 -97.8438  c
-373.594 -97.8438 l
-373.594 -90.1875 l
h
-364.671 -89.0000 m
-364.671 -95.2969 l
-365.765 -95.2969 l
-365.765 -96.2656 l
-364.671 -96.2656 l
-364.671 -97.0312 l
-364.671 -97.5208 -364.629 -97.8854 -364.546 -98.1250  c
-364.421 -98.4375 -364.210 -98.6927 -363.913 -98.8906  c
-363.616 -99.0885 -363.197 -99.1875 -362.655 -99.1875  c
-362.312 -99.1875 -361.931 -99.1458 -361.515 -99.0625  c
-361.702 -98.0000 l
-361.952 -98.0417 -362.192 -98.0625 -362.421 -98.0625  c
-362.796 -98.0625 -363.062 -97.9844 -363.218 -97.8281  c
-363.374 -97.6719 -363.452 -97.3750 -363.452 -96.9375  c
-363.452 -96.2656 l
-362.030 -96.2656 l
-362.030 -95.2969 l
-363.452 -95.2969 l
-363.452 -89.0000 l
-364.671 -89.0000 l
h
-361.562 -91.1719 m
-360.359 -91.3594 l
-360.286 -90.8698 -360.094 -90.4948 -359.781 -90.2344  c
-359.469 -89.9740 -359.031 -89.8438 -358.469 -89.8438  c
-357.906 -89.8438 -357.487 -89.9583 -357.211 -90.1875  c
-356.935 -90.4167 -356.797 -90.6875 -356.797 -91.0000  c
-356.797 -91.2812 -356.922 -91.5000 -357.172 -91.6562  c
-357.339 -91.7708 -357.755 -91.9115 -358.422 -92.0781  c
-359.328 -92.3073 -359.956 -92.5052 -360.305 -92.6719  c
-360.654 -92.8385 -360.917 -93.0677 -361.094 -93.3594  c
-361.271 -93.6510 -361.359 -93.9740 -361.359 -94.3281  c
-361.359 -94.6510 -361.286 -94.9505 -361.141 -95.2266  c
-360.995 -95.5026 -360.792 -95.7344 -360.531 -95.9219  c
-360.344 -96.0573 -360.086 -96.1745 -359.758 -96.2734  c
-359.430 -96.3724 -359.073 -96.4219 -358.688 -96.4219  c
-358.125 -96.4219 -357.628 -96.3411 -357.195 -96.1797  c
-356.763 -96.0182 -356.443 -95.7969 -356.234 -95.5156  c
-356.026 -95.2344 -355.885 -94.8594 -355.812 -94.3906  c
-357.016 -94.2188 l
-357.068 -94.5938 -357.227 -94.8854 -357.492 -95.0938  c
-357.758 -95.3021 -358.130 -95.4062 -358.609 -95.4062  c
-359.172 -95.4062 -359.573 -95.3151 -359.812 -95.1328  c
-360.052 -94.9505 -360.172 -94.7292 -360.172 -94.4688  c
-360.172 -94.3125 -360.125 -94.1719 -360.031 -94.0469  c
-359.927 -93.9115 -359.766 -93.8021 -359.547 -93.7188  c
-359.432 -93.6771 -359.073 -93.5729 -358.469 -93.4062  c
-357.594 -93.1667 -356.984 -92.9740 -356.641 -92.8281  c
-356.297 -92.6823 -356.029 -92.4688 -355.836 -92.1875  c
-355.643 -91.9062 -355.547 -91.5573 -355.547 -91.1406  c
-355.547 -90.7240 -355.664 -90.3359 -355.898 -89.9766  c
-356.133 -89.6172 -356.477 -89.3359 -356.930 -89.1328  c
-357.383 -88.9297 -357.896 -88.8281 -358.469 -88.8281  c
-359.406 -88.8281 -360.122 -89.0260 -360.617 -89.4219  c
-361.112 -89.8177 -361.427 -90.4010 -361.562 -91.1719  c
h
-354.297 -88.3906 m
-353.109 -88.2188 l
-353.057 -87.8542 -352.917 -87.5833 -352.688 -87.4062  c
-352.385 -87.1875 -351.969 -87.0781 -351.438 -87.0781  c
-350.865 -87.0781 -350.424 -87.1901 -350.117 -87.4141  c
-349.810 -87.6380 -349.599 -87.9583 -349.484 -88.3750  c
-349.422 -88.6250 -349.396 -89.1510 -349.406 -89.9531  c
-349.938 -89.3177 -350.604 -89.0000 -351.406 -89.0000  c
-352.406 -89.0000 -353.180 -89.3594 -353.727 -90.0781  c
-354.273 -90.7969 -354.547 -91.6615 -354.547 -92.6719  c
-354.547 -93.3594 -354.422 -93.9974 -354.172 -94.5859  c
-353.922 -95.1745 -353.560 -95.6276 -353.086 -95.9453  c
-352.612 -96.2630 -352.052 -96.4219 -351.406 -96.4219  c
-350.552 -96.4219 -349.844 -96.0781 -349.281 -95.3906  c
-349.281 -96.2656 l
-348.156 -96.2656 l
-348.156 -89.9844 l
-348.156 -88.8490 -348.271 -88.0469 -348.500 -87.5781  c
-348.729 -87.1094 -349.094 -86.7370 -349.594 -86.4609  c
-350.094 -86.1849 -350.708 -86.0469 -351.438 -86.0469  c
-352.302 -86.0469 -353.000 -86.2422 -353.531 -86.6328  c
-354.062 -87.0234 -354.318 -87.6094 -354.297 -88.3906  c
h
-353.281 -92.7656 m
-353.281 -91.8073 -353.094 -91.1094 -352.719 -90.6719  c
-352.344 -90.2344 -351.870 -90.0156 -351.297 -90.0156  c
-350.734 -90.0156 -350.260 -90.2344 -349.875 -90.6719  c
-349.490 -91.1094 -349.297 -91.7917 -349.297 -92.7188  c
-349.297 -93.6042 -349.495 -94.2734 -349.891 -94.7266  c
-350.286 -95.1797 -350.760 -95.4062 -351.312 -95.4062  c
-351.865 -95.4062 -352.331 -95.1849 -352.711 -94.7422  c
-353.091 -94.2995 -353.281 -93.6406 -353.281 -92.7656  c
h
-343.979 -91.4688 m
-343.990 -91.6354 -343.995 -91.7604 -343.995 -91.8438  c
-343.995 -92.3229 -343.927 -92.7396 -343.792 -93.0938  c
-343.688 -93.3542 -343.526 -93.6198 -343.308 -93.8906  c
-343.141 -94.0885 -342.844 -94.3750 -342.417 -94.7500  c
-341.990 -95.1250 -341.714 -95.4245 -341.589 -95.6484  c
-341.464 -95.8724 -341.401 -96.1146 -341.401 -96.3750  c
-341.401 -96.8542 -341.586 -97.2760 -341.956 -97.6406  c
-342.326 -98.0052 -342.782 -98.1875 -343.323 -98.1875  c
-343.854 -98.1875 -344.295 -98.0234 -344.644 -97.6953  c
-344.993 -97.3672 -345.224 -96.8542 -345.339 -96.1562  c
-346.604 -96.2969 l
-346.490 -97.2344 -346.151 -97.9505 -345.589 -98.4453  c
-345.026 -98.9401 -344.282 -99.1875 -343.354 -99.1875  c
-342.375 -99.1875 -341.594 -98.9219 -341.011 -98.3906  c
-340.427 -97.8594 -340.136 -97.2135 -340.136 -96.4531  c
-340.136 -96.0156 -340.237 -95.6120 -340.440 -95.2422  c
-340.644 -94.8724 -341.042 -94.4271 -341.636 -93.9062  c
-342.042 -93.5521 -342.308 -93.2891 -342.433 -93.1172  c
-342.558 -92.9453 -342.649 -92.7500 -342.706 -92.5312  c
-342.763 -92.3125 -342.797 -91.9583 -342.808 -91.4688  c
-343.979 -91.4688 l
h
-344.058 -89.0000 m
-344.058 -90.4062 l
-342.667 -90.4062 l
-342.667 -89.0000 l
-344.058 -89.0000 l
h
f
newpath
-238.922 -89.0000 m
-238.922 -99.0156 l
-235.469 -99.0156 l
-234.688 -99.0156 -234.094 -98.9688 -233.688 -98.8750  c
-233.115 -98.7500 -232.625 -98.5104 -232.219 -98.1562  c
-231.688 -97.7083 -231.292 -97.1380 -231.031 -96.4453  c
-230.771 -95.7526 -230.641 -94.9583 -230.641 -94.0625  c
-230.641 -93.3021 -230.729 -92.6276 -230.906 -92.0391  c
-231.083 -91.4505 -231.310 -90.9635 -231.586 -90.5781  c
-231.862 -90.1927 -232.167 -89.8906 -232.500 -89.6719  c
-232.833 -89.4531 -233.232 -89.2865 -233.695 -89.1719  c
-234.159 -89.0573 -234.693 -89.0000 -235.297 -89.0000  c
-238.922 -89.0000 l
h
-237.594 -90.1875 m
-235.453 -90.1875 l
-234.797 -90.1875 -234.279 -90.2474 -233.898 -90.3672  c
-233.518 -90.4870 -233.219 -90.6615 -233.000 -90.8906  c
-232.688 -91.2031 -232.443 -91.6250 -232.266 -92.1562  c
-232.089 -92.6875 -232.000 -93.3333 -232.000 -94.0938  c
-232.000 -95.1354 -232.172 -95.9375 -232.516 -96.5000  c
-232.859 -97.0625 -233.276 -97.4427 -233.766 -97.6406  c
-234.130 -97.7760 -234.703 -97.8438 -235.484 -97.8438  c
-237.594 -97.8438 l
-237.594 -90.1875 l
h
-228.671 -89.0000 m
-228.671 -95.2969 l
-229.765 -95.2969 l
-229.765 -96.2656 l
-228.671 -96.2656 l
-228.671 -97.0312 l
-228.671 -97.5208 -228.629 -97.8854 -228.546 -98.1250  c
-228.421 -98.4375 -228.210 -98.6927 -227.913 -98.8906  c
-227.616 -99.0885 -227.197 -99.1875 -226.655 -99.1875  c
-226.312 -99.1875 -225.931 -99.1458 -225.515 -99.0625  c
-225.702 -98.0000 l
-225.952 -98.0417 -226.192 -98.0625 -226.421 -98.0625  c
-226.796 -98.0625 -227.062 -97.9844 -227.218 -97.8281  c
-227.374 -97.6719 -227.452 -97.3750 -227.452 -96.9375  c
-227.452 -96.2656 l
-226.030 -96.2656 l
-226.030 -95.2969 l
-227.452 -95.2969 l
-227.452 -89.0000 l
-228.671 -89.0000 l
h
-225.562 -91.1719 m
-224.359 -91.3594 l
-224.286 -90.8698 -224.094 -90.4948 -223.781 -90.2344  c
-223.469 -89.9740 -223.031 -89.8438 -222.469 -89.8438  c
-221.906 -89.8438 -221.487 -89.9583 -221.211 -90.1875  c
-220.935 -90.4167 -220.797 -90.6875 -220.797 -91.0000  c
-220.797 -91.2812 -220.922 -91.5000 -221.172 -91.6562  c
-221.339 -91.7708 -221.755 -91.9115 -222.422 -92.0781  c
-223.328 -92.3073 -223.956 -92.5052 -224.305 -92.6719  c
-224.654 -92.8385 -224.917 -93.0677 -225.094 -93.3594  c
-225.271 -93.6510 -225.359 -93.9740 -225.359 -94.3281  c
-225.359 -94.6510 -225.286 -94.9505 -225.141 -95.2266  c
-224.995 -95.5026 -224.792 -95.7344 -224.531 -95.9219  c
-224.344 -96.0573 -224.086 -96.1745 -223.758 -96.2734  c
-223.430 -96.3724 -223.073 -96.4219 -222.688 -96.4219  c
-222.125 -96.4219 -221.628 -96.3411 -221.195 -96.1797  c
-220.763 -96.0182 -220.443 -95.7969 -220.234 -95.5156  c
-220.026 -95.2344 -219.885 -94.8594 -219.812 -94.3906  c
-221.016 -94.2188 l
-221.068 -94.5938 -221.227 -94.8854 -221.492 -95.0938  c
-221.758 -95.3021 -222.130 -95.4062 -222.609 -95.4062  c
-223.172 -95.4062 -223.573 -95.3151 -223.812 -95.1328  c
-224.052 -94.9505 -224.172 -94.7292 -224.172 -94.4688  c
-224.172 -94.3125 -224.125 -94.1719 -224.031 -94.0469  c
-223.927 -93.9115 -223.766 -93.8021 -223.547 -93.7188  c
-223.432 -93.6771 -223.073 -93.5729 -222.469 -93.4062  c
-221.594 -93.1667 -220.984 -92.9740 -220.641 -92.8281  c
-220.297 -92.6823 -220.029 -92.4688 -219.836 -92.1875  c
-219.643 -91.9062 -219.547 -91.5573 -219.547 -91.1406  c
-219.547 -90.7240 -219.664 -90.3359 -219.898 -89.9766  c
-220.133 -89.6172 -220.477 -89.3359 -220.930 -89.1328  c
-221.383 -88.9297 -221.896 -88.8281 -222.469 -88.8281  c
-223.406 -88.8281 -224.122 -89.0260 -224.617 -89.4219  c
-225.112 -89.8177 -225.427 -90.4010 -225.562 -91.1719  c
h
-218.297 -88.3906 m
-217.109 -88.2188 l
-217.057 -87.8542 -216.917 -87.5833 -216.688 -87.4062  c
-216.385 -87.1875 -215.969 -87.0781 -215.438 -87.0781  c
-214.865 -87.0781 -214.424 -87.1901 -214.117 -87.4141  c
-213.810 -87.6380 -213.599 -87.9583 -213.484 -88.3750  c
-213.422 -88.6250 -213.396 -89.1510 -213.406 -89.9531  c
-213.938 -89.3177 -214.604 -89.0000 -215.406 -89.0000  c
-216.406 -89.0000 -217.180 -89.3594 -217.727 -90.0781  c
-218.273 -90.7969 -218.547 -91.6615 -218.547 -92.6719  c
-218.547 -93.3594 -218.422 -93.9974 -218.172 -94.5859  c
-217.922 -95.1745 -217.560 -95.6276 -217.086 -95.9453  c
-216.612 -96.2630 -216.052 -96.4219 -215.406 -96.4219  c
-214.552 -96.4219 -213.844 -96.0781 -213.281 -95.3906  c
-213.281 -96.2656 l
-212.156 -96.2656 l
-212.156 -89.9844 l
-212.156 -88.8490 -212.271 -88.0469 -212.500 -87.5781  c
-212.729 -87.1094 -213.094 -86.7370 -213.594 -86.4609  c
-214.094 -86.1849 -214.708 -86.0469 -215.438 -86.0469  c
-216.302 -86.0469 -217.000 -86.2422 -217.531 -86.6328  c
-218.062 -87.0234 -218.318 -87.6094 -218.297 -88.3906  c
h
-217.281 -92.7656 m
-217.281 -91.8073 -217.094 -91.1094 -216.719 -90.6719  c
-216.344 -90.2344 -215.870 -90.0156 -215.297 -90.0156  c
-214.734 -90.0156 -214.260 -90.2344 -213.875 -90.6719  c
-213.490 -91.1094 -213.297 -91.7917 -213.297 -92.7188  c
-213.297 -93.6042 -213.495 -94.2734 -213.891 -94.7266  c
-214.286 -95.1797 -214.760 -95.4062 -215.312 -95.4062  c
-215.865 -95.4062 -216.331 -95.1849 -216.711 -94.7422  c
-217.091 -94.2995 -217.281 -93.6406 -217.281 -92.7656  c
h
-207.979 -91.4688 m
-207.990 -91.6354 -207.995 -91.7604 -207.995 -91.8438  c
-207.995 -92.3229 -207.927 -92.7396 -207.792 -93.0938  c
-207.688 -93.3542 -207.526 -93.6198 -207.308 -93.8906  c
-207.141 -94.0885 -206.844 -94.3750 -206.417 -94.7500  c
-205.990 -95.1250 -205.714 -95.4245 -205.589 -95.6484  c
-205.464 -95.8724 -205.401 -96.1146 -205.401 -96.3750  c
-205.401 -96.8542 -205.586 -97.2760 -205.956 -97.6406  c
-206.326 -98.0052 -206.782 -98.1875 -207.323 -98.1875  c
-207.854 -98.1875 -208.295 -98.0234 -208.644 -97.6953  c
-208.993 -97.3672 -209.224 -96.8542 -209.339 -96.1562  c
-210.604 -96.2969 l
-210.490 -97.2344 -210.151 -97.9505 -209.589 -98.4453  c
-209.026 -98.9401 -208.282 -99.1875 -207.354 -99.1875  c
-206.375 -99.1875 -205.594 -98.9219 -205.011 -98.3906  c
-204.427 -97.8594 -204.136 -97.2135 -204.136 -96.4531  c
-204.136 -96.0156 -204.237 -95.6120 -204.440 -95.2422  c
-204.644 -94.8724 -205.042 -94.4271 -205.636 -93.9062  c
-206.042 -93.5521 -206.308 -93.2891 -206.433 -93.1172  c
-206.558 -92.9453 -206.649 -92.7500 -206.706 -92.5312  c
-206.763 -92.3125 -206.797 -91.9583 -206.808 -91.4688  c
-207.979 -91.4688 l
h
-208.058 -89.0000 m
-208.058 -90.4062 l
-206.667 -90.4062 l
-206.667 -89.0000 l
-208.058 -89.0000 l
h
f
.647059 .686275 .803922 RG
newpath
-324.000 -48.0000 m
-324.000 -41.3726 -329.373 -36.0000 -336.000 -36.0000  c
-342.627 -36.0000 -348.000 -41.3726 -348.000 -48.0000  c
-348.000 -54.6274 -342.627 -60.0000 -336.000 -60.0000  c
-329.373 -60.0000 -324.000 -54.6274 -324.000 -48.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-324.000 -48.0000 m
-324.000 -41.3726 -329.373 -36.0000 -336.000 -36.0000  c
-342.627 -36.0000 -348.000 -41.3726 -348.000 -48.0000  c
-348.000 -54.6274 -342.627 -60.0000 -336.000 -60.0000  c
-329.373 -60.0000 -324.000 -54.6274 -324.000 -48.0000  c
h
S
.647059 .686275 .803922 RG
newpath
-228.000 -48.0000 m
-228.000 -41.3726 -233.373 -36.0000 -240.000 -36.0000  c
-246.627 -36.0000 -252.000 -41.3726 -252.000 -48.0000  c
-252.000 -54.6274 -246.627 -60.0000 -240.000 -60.0000  c
-233.373 -60.0000 -228.000 -54.6274 -228.000 -48.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-228.000 -48.0000 m
-228.000 -41.3726 -233.373 -36.0000 -240.000 -36.0000  c
-246.627 -36.0000 -252.000 -41.3726 -252.000 -48.0000  c
-252.000 -54.6274 -246.627 -60.0000 -240.000 -60.0000  c
-233.373 -60.0000 -228.000 -54.6274 -228.000 -48.0000  c
h
S
newpath
-244.330 -50.5000 m
-245.543 -48.3986 -245.073 -45.7295 -243.214 -44.1698  c
-241.355 -42.6101 -238.645 -42.6101 -236.786 -44.1698  c
-234.927 -45.7295 -234.457 -48.3986 -235.670 -50.5000  c
S
.647059 .686275 .803922 RG
newpath
-228.000 -144.000 m
-228.000 -137.373 -233.373 -132.000 -240.000 -132.000  c
-246.627 -132.000 -252.000 -137.373 -252.000 -144.000  c
-252.000 -150.627 -246.627 -156.000 -240.000 -156.000  c
-233.373 -156.000 -228.000 -150.627 -228.000 -144.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-228.000 -144.000 m
-228.000 -137.373 -233.373 -132.000 -240.000 -132.000  c
-246.627 -132.000 -252.000 -137.373 -252.000 -144.000  c
-252.000 -150.627 -246.627 -156.000 -240.000 -156.000  c
-233.373 -156.000 -228.000 -150.627 -228.000 -144.000  c
h
S
.647059 .686275 .803922 RG
newpath
-324.000 -144.000 m
-324.000 -137.373 -329.373 -132.000 -336.000 -132.000  c
-342.627 -132.000 -348.000 -137.373 -348.000 -144.000  c
-348.000 -150.627 -342.627 -156.000 -336.000 -156.000  c
-329.373 -156.000 -324.000 -150.627 -324.000 -144.000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-324.000 -144.000 m
-324.000 -137.373 -329.373 -132.000 -336.000 -132.000  c
-342.627 -132.000 -348.000 -137.373 -348.000 -144.000  c
-348.000 -150.627 -342.627 -156.000 -336.000 -156.000  c
-329.373 -156.000 -324.000 -150.627 -324.000 -144.000  c
h
S
newpath
-328.000 -144.000 m
-328.000 -139.582 -331.582 -136.000 -336.000 -136.000  c
-340.418 -136.000 -344.000 -139.582 -344.000 -144.000  c
-344.000 -148.418 -340.418 -152.000 -336.000 -152.000  c
-331.582 -152.000 -328.000 -148.418 -328.000 -144.000  c
h
S
.549020 .219608 .388235 RG
newpath
-247.375 -164.219 m
-246.125 -164.328 l
-246.062 -163.828 -245.922 -163.417 -245.703 -163.094  c
-245.484 -162.771 -245.148 -162.510 -244.695 -162.312  c
-244.242 -162.115 -243.729 -162.016 -243.156 -162.016  c
-242.656 -162.016 -242.211 -162.091 -241.820 -162.242  c
-241.430 -162.393 -241.141 -162.599 -240.953 -162.859  c
-240.766 -163.120 -240.672 -163.406 -240.672 -163.719  c
-240.672 -164.031 -240.763 -164.305 -240.945 -164.539  c
-241.128 -164.773 -241.427 -164.974 -241.844 -165.141  c
-242.115 -165.245 -242.711 -165.406 -243.633 -165.625  c
-244.555 -165.844 -245.198 -166.052 -245.562 -166.250  c
-246.042 -166.500 -246.398 -166.810 -246.633 -167.180  c
-246.867 -167.549 -246.984 -167.969 -246.984 -168.438  c
-246.984 -168.938 -246.841 -169.409 -246.555 -169.852  c
-246.268 -170.294 -245.849 -170.628 -245.297 -170.852  c
-244.745 -171.076 -244.130 -171.188 -243.453 -171.188  c
-242.714 -171.188 -242.060 -171.068 -241.492 -170.828  c
-240.924 -170.589 -240.490 -170.237 -240.188 -169.773  c
-239.885 -169.310 -239.719 -168.786 -239.688 -168.203  c
-240.969 -168.109 l
-241.031 -168.734 -241.260 -169.211 -241.656 -169.539  c
-242.052 -169.867 -242.635 -170.031 -243.406 -170.031  c
-244.208 -170.031 -244.792 -169.883 -245.156 -169.586  c
-245.521 -169.289 -245.703 -168.932 -245.703 -168.516  c
-245.703 -168.161 -245.573 -167.865 -245.312 -167.625  c
-245.062 -167.396 -244.398 -167.159 -243.320 -166.914  c
-242.242 -166.669 -241.505 -166.458 -241.109 -166.281  c
-240.526 -166.010 -240.094 -165.669 -239.812 -165.258  c
-239.531 -164.846 -239.391 -164.370 -239.391 -163.828  c
-239.391 -163.297 -239.544 -162.794 -239.852 -162.320  c
-240.159 -161.846 -240.599 -161.479 -241.172 -161.219  c
-241.745 -160.958 -242.385 -160.828 -243.094 -160.828  c
-244.000 -160.828 -244.760 -160.961 -245.375 -161.227  c
-245.990 -161.492 -246.471 -161.891 -246.820 -162.422  c
-247.169 -162.953 -247.354 -163.552 -247.375 -164.219  c
h
-233.443 -161.000 m
-234.678 -161.000 l
-234.678 -168.844 l
-234.969 -168.562 -235.357 -168.279 -235.842 -167.992  c
-236.326 -167.706 -236.756 -167.495 -237.131 -167.359  c
-237.131 -168.547 l
-236.443 -168.870 -235.842 -169.260 -235.326 -169.719  c
-234.811 -170.177 -234.449 -170.625 -234.240 -171.062  c
-233.443 -171.062 l
-233.443 -161.000 l
h
f
newpath
-343.375 -28.2188 m
-342.125 -28.3281 l
-342.062 -27.8281 -341.922 -27.4167 -341.703 -27.0938  c
-341.484 -26.7708 -341.148 -26.5104 -340.695 -26.3125  c
-340.242 -26.1146 -339.729 -26.0156 -339.156 -26.0156  c
-338.656 -26.0156 -338.211 -26.0911 -337.820 -26.2422  c
-337.430 -26.3932 -337.141 -26.5990 -336.953 -26.8594  c
-336.766 -27.1198 -336.672 -27.4062 -336.672 -27.7188  c
-336.672 -28.0312 -336.763 -28.3047 -336.945 -28.5391  c
-337.128 -28.7734 -337.427 -28.9740 -337.844 -29.1406  c
-338.115 -29.2448 -338.711 -29.4062 -339.633 -29.6250  c
-340.555 -29.8438 -341.198 -30.0521 -341.562 -30.2500  c
-342.042 -30.5000 -342.398 -30.8099 -342.633 -31.1797  c
-342.867 -31.5495 -342.984 -31.9688 -342.984 -32.4375  c
-342.984 -32.9375 -342.841 -33.4089 -342.555 -33.8516  c
-342.268 -34.2943 -341.849 -34.6276 -341.297 -34.8516  c
-340.745 -35.0755 -340.130 -35.1875 -339.453 -35.1875  c
-338.714 -35.1875 -338.060 -35.0677 -337.492 -34.8281  c
-336.924 -34.5885 -336.490 -34.2370 -336.188 -33.7734  c
-335.885 -33.3099 -335.719 -32.7865 -335.688 -32.2031  c
-336.969 -32.1094 l
-337.031 -32.7344 -337.260 -33.2109 -337.656 -33.5391  c
-338.052 -33.8672 -338.635 -34.0312 -339.406 -34.0312  c
-340.208 -34.0312 -340.792 -33.8828 -341.156 -33.5859  c
-341.521 -33.2891 -341.703 -32.9323 -341.703 -32.5156  c
-341.703 -32.1615 -341.573 -31.8646 -341.312 -31.6250  c
-341.062 -31.3958 -340.398 -31.1589 -339.320 -30.9141  c
-338.242 -30.6693 -337.505 -30.4583 -337.109 -30.2812  c
-336.526 -30.0104 -336.094 -29.6693 -335.812 -29.2578  c
-335.531 -28.8464 -335.391 -28.3698 -335.391 -27.8281  c
-335.391 -27.2969 -335.544 -26.7943 -335.852 -26.3203  c
-336.159 -25.8464 -336.599 -25.4792 -337.172 -25.2188  c
-337.745 -24.9583 -338.385 -24.8281 -339.094 -24.8281  c
-340.000 -24.8281 -340.760 -24.9609 -341.375 -25.2266  c
-341.990 -25.4922 -342.471 -25.8906 -342.820 -26.4219  c
-343.169 -26.9531 -343.354 -27.5521 -343.375 -28.2188  c
h
-334.068 -27.6406 m
-332.850 -27.8125 l
-332.704 -27.1146 -332.462 -26.6120 -332.123 -26.3047  c
-331.785 -25.9974 -331.370 -25.8438 -330.881 -25.8438  c
-330.298 -25.8438 -329.808 -26.0443 -329.412 -26.4453  c
-329.016 -26.8464 -328.818 -27.3438 -328.818 -27.9375  c
-328.818 -28.5000 -329.003 -28.9635 -329.373 -29.3281  c
-329.743 -29.6927 -330.209 -29.8750 -330.771 -29.8750  c
-331.011 -29.8750 -331.303 -29.8333 -331.646 -29.7500  c
-331.506 -30.8281 l
-331.423 -30.8177 -331.360 -30.8125 -331.318 -30.8125  c
-330.787 -30.8125 -330.313 -30.9479 -329.896 -31.2188  c
-329.480 -31.4896 -329.271 -31.9115 -329.271 -32.4844  c
-329.271 -32.9323 -329.423 -33.3047 -329.725 -33.6016  c
-330.027 -33.8984 -330.423 -34.0469 -330.912 -34.0469  c
-331.391 -34.0469 -331.790 -33.8984 -332.107 -33.6016  c
-332.425 -33.3047 -332.631 -32.8542 -332.725 -32.2500  c
-333.943 -32.4688 l
-333.798 -33.2917 -333.459 -33.9297 -332.928 -34.3828  c
-332.396 -34.8359 -331.735 -35.0625 -330.943 -35.0625  c
-330.391 -35.0625 -329.886 -34.9453 -329.428 -34.7109  c
-328.969 -34.4766 -328.618 -34.1562 -328.373 -33.7500  c
-328.128 -33.3438 -328.006 -32.9115 -328.006 -32.4531  c
-328.006 -32.0260 -328.120 -31.6354 -328.350 -31.2812  c
-328.579 -30.9271 -328.923 -30.6406 -329.381 -30.4219  c
-328.787 -30.2865 -328.326 -30.0052 -327.998 -29.5781  c
-327.670 -29.1510 -327.506 -28.6094 -327.506 -27.9531  c
-327.506 -27.0781 -327.826 -26.3385 -328.467 -25.7344  c
-329.107 -25.1302 -329.912 -24.8281 -330.881 -24.8281  c
-331.766 -24.8281 -332.498 -25.0885 -333.076 -25.6094  c
-333.654 -26.1302 -333.985 -26.8073 -334.068 -27.6406  c
h
f
newpath
-247.375 -28.2188 m
-246.125 -28.3281 l
-246.062 -27.8281 -245.922 -27.4167 -245.703 -27.0938  c
-245.484 -26.7708 -245.148 -26.5104 -244.695 -26.3125  c
-244.242 -26.1146 -243.729 -26.0156 -243.156 -26.0156  c
-242.656 -26.0156 -242.211 -26.0911 -241.820 -26.2422  c
-241.430 -26.3932 -241.141 -26.5990 -240.953 -26.8594  c
-240.766 -27.1198 -240.672 -27.4062 -240.672 -27.7188  c
-240.672 -28.0312 -240.763 -28.3047 -240.945 -28.5391  c
-241.128 -28.7734 -241.427 -28.9740 -241.844 -29.1406  c
-242.115 -29.2448 -242.711 -29.4062 -243.633 -29.6250  c
-244.555 -29.8438 -245.198 -30.0521 -245.562 -30.2500  c
-246.042 -30.5000 -246.398 -30.8099 -246.633 -31.1797  c
-246.867 -31.5495 -246.984 -31.9688 -246.984 -32.4375  c
-246.984 -32.9375 -246.841 -33.4089 -246.555 -33.8516  c
-246.268 -34.2943 -245.849 -34.6276 -245.297 -34.8516  c
-244.745 -35.0755 -244.130 -35.1875 -243.453 -35.1875  c
-242.714 -35.1875 -242.060 -35.0677 -241.492 -34.8281  c
-240.924 -34.5885 -240.490 -34.2370 -240.188 -33.7734  c
-239.885 -33.3099 -239.719 -32.7865 -239.688 -32.2031  c
-240.969 -32.1094 l
-241.031 -32.7344 -241.260 -33.2109 -241.656 -33.5391  c
-242.052 -33.8672 -242.635 -34.0312 -243.406 -34.0312  c
-244.208 -34.0312 -244.792 -33.8828 -245.156 -33.5859  c
-245.521 -33.2891 -245.703 -32.9323 -245.703 -32.5156  c
-245.703 -32.1615 -245.573 -31.8646 -245.312 -31.6250  c
-245.062 -31.3958 -244.398 -31.1589 -243.320 -30.9141  c
-242.242 -30.6693 -241.505 -30.4583 -241.109 -30.2812  c
-240.526 -30.0104 -240.094 -29.6693 -239.812 -29.2578  c
-239.531 -28.8464 -239.391 -28.3698 -239.391 -27.8281  c
-239.391 -27.2969 -239.544 -26.7943 -239.852 -26.3203  c
-240.159 -25.8464 -240.599 -25.4792 -241.172 -25.2188  c
-241.745 -24.9583 -242.385 -24.8281 -243.094 -24.8281  c
-244.000 -24.8281 -244.760 -24.9609 -245.375 -25.2266  c
-245.990 -25.4922 -246.471 -25.8906 -246.820 -26.4219  c
-247.169 -26.9531 -247.354 -27.5521 -247.375 -28.2188  c
h
-231.615 -26.1875 m
-231.615 -25.0000 l
-238.240 -25.0000 l
-238.251 -25.2917 -238.204 -25.5781 -238.100 -25.8594  c
-237.923 -26.3073 -237.649 -26.7500 -237.279 -27.1875  c
-236.910 -27.6250 -236.376 -28.1302 -235.678 -28.7031  c
-234.584 -29.5990 -233.847 -30.3073 -233.467 -30.8281  c
-233.087 -31.3490 -232.896 -31.8438 -232.896 -32.3125  c
-232.896 -32.8021 -233.071 -33.2135 -233.420 -33.5469  c
-233.769 -33.8802 -234.219 -34.0469 -234.771 -34.0469  c
-235.365 -34.0469 -235.842 -33.8698 -236.201 -33.5156  c
-236.561 -33.1615 -236.740 -32.6667 -236.740 -32.0312  c
-238.006 -32.1719 l
-237.923 -33.1094 -237.597 -33.8255 -237.029 -34.3203  c
-236.462 -34.8151 -235.704 -35.0625 -234.756 -35.0625  c
-233.787 -35.0625 -233.024 -34.7969 -232.467 -34.2656  c
-231.910 -33.7344 -231.631 -33.0729 -231.631 -32.2812  c
-231.631 -31.8750 -231.712 -31.4792 -231.873 -31.0938  c
-232.035 -30.7083 -232.305 -30.3021 -232.686 -29.8750  c
-233.066 -29.4479 -233.699 -28.8594 -234.584 -28.1094  c
-235.324 -27.4948 -235.798 -27.0755 -236.006 -26.8516  c
-236.214 -26.6276 -236.386 -26.4062 -236.521 -26.1875  c
-231.615 -26.1875 l
h
f
.258824 .627451 .658824 RG
newpath
-302.922 -33.0000 m
-302.922 -43.0156 l
-299.469 -43.0156 l
-298.688 -43.0156 -298.094 -42.9688 -297.688 -42.8750  c
-297.115 -42.7500 -296.625 -42.5104 -296.219 -42.1562  c
-295.688 -41.7083 -295.292 -41.1380 -295.031 -40.4453  c
-294.771 -39.7526 -294.641 -38.9583 -294.641 -38.0625  c
-294.641 -37.3021 -294.729 -36.6276 -294.906 -36.0391  c
-295.083 -35.4505 -295.310 -34.9635 -295.586 -34.5781  c
-295.862 -34.1927 -296.167 -33.8906 -296.500 -33.6719  c
-296.833 -33.4531 -297.232 -33.2865 -297.695 -33.1719  c
-298.159 -33.0573 -298.693 -33.0000 -299.297 -33.0000  c
-302.922 -33.0000 l
h
-301.594 -34.1875 m
-299.453 -34.1875 l
-298.797 -34.1875 -298.279 -34.2474 -297.898 -34.3672  c
-297.518 -34.4870 -297.219 -34.6615 -297.000 -34.8906  c
-296.688 -35.2031 -296.443 -35.6250 -296.266 -36.1562  c
-296.089 -36.6875 -296.000 -37.3333 -296.000 -38.0938  c
-296.000 -39.1354 -296.172 -39.9375 -296.516 -40.5000  c
-296.859 -41.0625 -297.276 -41.4427 -297.766 -41.6406  c
-298.130 -41.7760 -298.703 -41.8438 -299.484 -41.8438  c
-301.594 -41.8438 l
-301.594 -34.1875 l
h
-292.671 -33.0000 m
-292.671 -39.2969 l
-293.765 -39.2969 l
-293.765 -40.2656 l
-292.671 -40.2656 l
-292.671 -41.0312 l
-292.671 -41.5208 -292.629 -41.8854 -292.546 -42.1250  c
-292.421 -42.4375 -292.210 -42.6927 -291.913 -42.8906  c
-291.616 -43.0885 -291.197 -43.1875 -290.655 -43.1875  c
-290.312 -43.1875 -289.931 -43.1458 -289.515 -43.0625  c
-289.702 -42.0000 l
-289.952 -42.0417 -290.192 -42.0625 -290.421 -42.0625  c
-290.796 -42.0625 -291.062 -41.9844 -291.218 -41.8281  c
-291.374 -41.6719 -291.452 -41.3750 -291.452 -40.9375  c
-291.452 -40.2656 l
-290.030 -40.2656 l
-290.030 -39.2969 l
-291.452 -39.2969 l
-291.452 -33.0000 l
-292.671 -33.0000 l
h
-287.734 -33.0000 m
-289.953 -40.2656 l
-288.688 -40.2656 l
-287.531 -36.0625 l
-287.094 -34.5156 l
-287.083 -34.5885 -286.958 -35.0885 -286.719 -36.0156  c
-285.562 -40.2656 l
-284.312 -40.2656 l
-283.219 -36.0469 l
-282.859 -34.6562 l
-282.438 -36.0625 l
-281.188 -40.2656 l
-280.000 -40.2656 l
-282.266 -33.0000 l
-283.547 -33.0000 l
-284.703 -37.3438 l
-284.984 -38.5781 l
-286.453 -33.0000 l
-287.734 -33.0000 l
h
-279.452 -35.1719 m
-278.249 -35.3594 l
-278.176 -34.8698 -277.983 -34.4948 -277.671 -34.2344  c
-277.358 -33.9740 -276.921 -33.8438 -276.358 -33.8438  c
-275.796 -33.8438 -275.377 -33.9583 -275.101 -34.1875  c
-274.825 -34.4167 -274.687 -34.6875 -274.687 -35.0000  c
-274.687 -35.2812 -274.812 -35.5000 -275.062 -35.6562  c
-275.228 -35.7708 -275.645 -35.9115 -276.312 -36.0781  c
-277.218 -36.3073 -277.845 -36.5052 -278.194 -36.6719  c
-278.543 -36.8385 -278.806 -37.0677 -278.983 -37.3594  c
-279.160 -37.6510 -279.249 -37.9740 -279.249 -38.3281  c
-279.249 -38.6510 -279.176 -38.9505 -279.030 -39.2266  c
-278.884 -39.5026 -278.681 -39.7344 -278.421 -39.9219  c
-278.233 -40.0573 -277.976 -40.1745 -277.647 -40.2734  c
-277.319 -40.3724 -276.963 -40.4219 -276.577 -40.4219  c
-276.015 -40.4219 -275.517 -40.3411 -275.085 -40.1797  c
-274.653 -40.0182 -274.332 -39.7969 -274.124 -39.5156  c
-273.916 -39.2344 -273.775 -38.8594 -273.702 -38.3906  c
-274.905 -38.2188 l
-274.957 -38.5938 -275.116 -38.8854 -275.382 -39.0938  c
-275.647 -39.3021 -276.020 -39.4062 -276.499 -39.4062  c
-277.062 -39.4062 -277.463 -39.3151 -277.702 -39.1328  c
-277.942 -38.9505 -278.062 -38.7292 -278.062 -38.4688  c
-278.062 -38.3125 -278.015 -38.1719 -277.921 -38.0469  c
-277.817 -37.9115 -277.655 -37.8021 -277.437 -37.7188  c
-277.322 -37.6771 -276.963 -37.5729 -276.358 -37.4062  c
-275.483 -37.1667 -274.874 -36.9740 -274.530 -36.8281  c
-274.187 -36.6823 -273.918 -36.4688 -273.726 -36.1875  c
-273.533 -35.9062 -273.437 -35.5573 -273.437 -35.1406  c
-273.437 -34.7240 -273.554 -34.3359 -273.788 -33.9766  c
-274.022 -33.6172 -274.366 -33.3359 -274.819 -33.1328  c
-275.272 -32.9297 -275.785 -32.8281 -276.358 -32.8281  c
-277.296 -32.8281 -278.012 -33.0260 -278.507 -33.4219  c
-279.002 -33.8177 -279.317 -34.4010 -279.452 -35.1719  c
h
-269.655 -35.4688 m
-269.666 -35.6354 -269.671 -35.7604 -269.671 -35.8438  c
-269.671 -36.3229 -269.603 -36.7396 -269.468 -37.0938  c
-269.364 -37.3542 -269.202 -37.6198 -268.983 -37.8906  c
-268.817 -38.0885 -268.520 -38.3750 -268.093 -38.7500  c
-267.666 -39.1250 -267.390 -39.4245 -267.265 -39.6484  c
-267.140 -39.8724 -267.077 -40.1146 -267.077 -40.3750  c
-267.077 -40.8542 -267.262 -41.2760 -267.632 -41.6406  c
-268.002 -42.0052 -268.457 -42.1875 -268.999 -42.1875  c
-269.530 -42.1875 -269.970 -42.0234 -270.319 -41.6953  c
-270.668 -41.3672 -270.900 -40.8542 -271.015 -40.1562  c
-272.280 -40.2969 l
-272.166 -41.2344 -271.827 -41.9505 -271.265 -42.4453  c
-270.702 -42.9401 -269.957 -43.1875 -269.030 -43.1875  c
-268.051 -43.1875 -267.270 -42.9219 -266.687 -42.3906  c
-266.103 -41.8594 -265.812 -41.2135 -265.812 -40.4531  c
-265.812 -40.0156 -265.913 -39.6120 -266.116 -39.2422  c
-266.319 -38.8724 -266.718 -38.4271 -267.312 -37.9062  c
-267.718 -37.5521 -267.983 -37.2891 -268.108 -37.1172  c
-268.233 -36.9453 -268.325 -36.7500 -268.382 -36.5312  c
-268.439 -36.3125 -268.473 -35.9583 -268.483 -35.4688  c
-269.655 -35.4688 l
h
-269.733 -33.0000 m
-269.733 -34.4062 l
-268.343 -34.4062 l
-268.343 -33.0000 l
-269.733 -33.0000 l
h
f
.549020 .219608 .388235 RG
newpath
-345.375 -162.219 m
-344.125 -162.328 l
-344.062 -161.828 -343.922 -161.417 -343.703 -161.094  c
-343.484 -160.771 -343.148 -160.510 -342.695 -160.312  c
-342.242 -160.115 -341.729 -160.016 -341.156 -160.016  c
-340.656 -160.016 -340.211 -160.091 -339.820 -160.242  c
-339.430 -160.393 -339.141 -160.599 -338.953 -160.859  c
-338.766 -161.120 -338.672 -161.406 -338.672 -161.719  c
-338.672 -162.031 -338.763 -162.305 -338.945 -162.539  c
-339.128 -162.773 -339.427 -162.974 -339.844 -163.141  c
-340.115 -163.245 -340.711 -163.406 -341.633 -163.625  c
-342.555 -163.844 -343.198 -164.052 -343.562 -164.250  c
-344.042 -164.500 -344.398 -164.810 -344.633 -165.180  c
-344.867 -165.549 -344.984 -165.969 -344.984 -166.438  c
-344.984 -166.938 -344.841 -167.409 -344.555 -167.852  c
-344.268 -168.294 -343.849 -168.628 -343.297 -168.852  c
-342.745 -169.076 -342.130 -169.188 -341.453 -169.188  c
-340.714 -169.188 -340.060 -169.068 -339.492 -168.828  c
-338.924 -168.589 -338.490 -168.237 -338.188 -167.773  c
-337.885 -167.310 -337.719 -166.786 -337.688 -166.203  c
-338.969 -166.109 l
-339.031 -166.734 -339.260 -167.211 -339.656 -167.539  c
-340.052 -167.867 -340.635 -168.031 -341.406 -168.031  c
-342.208 -168.031 -342.792 -167.883 -343.156 -167.586  c
-343.521 -167.289 -343.703 -166.932 -343.703 -166.516  c
-343.703 -166.161 -343.573 -165.865 -343.312 -165.625  c
-343.062 -165.396 -342.398 -165.159 -341.320 -164.914  c
-340.242 -164.669 -339.505 -164.458 -339.109 -164.281  c
-338.526 -164.010 -338.094 -163.669 -337.812 -163.258  c
-337.531 -162.846 -337.391 -162.370 -337.391 -161.828  c
-337.391 -161.297 -337.544 -160.794 -337.852 -160.320  c
-338.159 -159.846 -338.599 -159.479 -339.172 -159.219  c
-339.745 -158.958 -340.385 -158.828 -341.094 -158.828  c
-342.000 -158.828 -342.760 -158.961 -343.375 -159.227  c
-343.990 -159.492 -344.471 -159.891 -344.820 -160.422  c
-345.169 -160.953 -345.354 -161.552 -345.375 -162.219  c
h
-336.084 -163.938 m
-336.084 -165.125 -335.962 -166.081 -335.717 -166.805  c
-335.472 -167.529 -335.110 -168.086 -334.631 -168.477  c
-334.152 -168.867 -333.548 -169.062 -332.818 -169.062  c
-332.277 -169.062 -331.803 -168.953 -331.396 -168.734  c
-330.990 -168.516 -330.654 -168.203 -330.389 -167.797  c
-330.123 -167.391 -329.917 -166.896 -329.771 -166.312  c
-329.626 -165.729 -329.553 -164.938 -329.553 -163.938  c
-329.553 -162.760 -329.673 -161.812 -329.912 -161.094  c
-330.152 -160.375 -330.511 -159.818 -330.990 -159.422  c
-331.469 -159.026 -332.079 -158.828 -332.818 -158.828  c
-333.777 -158.828 -334.532 -159.177 -335.084 -159.875  c
-335.751 -160.708 -336.084 -162.062 -336.084 -163.938  c
h
-334.818 -163.938 m
-334.818 -162.292 -334.626 -161.198 -334.240 -160.656  c
-333.855 -160.115 -333.381 -159.844 -332.818 -159.844  c
-332.245 -159.844 -331.766 -160.117 -331.381 -160.664  c
-330.995 -161.211 -330.803 -162.302 -330.803 -163.938  c
-330.803 -165.594 -330.995 -166.693 -331.381 -167.234  c
-331.766 -167.776 -332.251 -168.047 -332.834 -168.047  c
-333.396 -168.047 -333.844 -167.807 -334.178 -167.328  c
-334.605 -166.714 -334.818 -165.583 -334.818 -163.938  c
h
f
.258824 .627451 .658824 RG
newpath
-286.922 -97.0000 m
-286.922 -107.016 l
-283.141 -107.016 l
-282.474 -107.016 -281.964 -106.984 -281.609 -106.922  c
-281.120 -106.839 -280.708 -106.682 -280.375 -106.453  c
-280.042 -106.224 -279.773 -105.904 -279.570 -105.492  c
-279.367 -105.081 -279.266 -104.625 -279.266 -104.125  c
-279.266 -103.271 -279.536 -102.549 -280.078 -101.961  c
-280.620 -101.372 -281.599 -101.078 -283.016 -101.078  c
-285.594 -101.078 l
-285.594 -97.0000 l
-286.922 -97.0000 l
h
-285.594 -102.250 m
-283.000 -102.250 l
-282.146 -102.250 -281.539 -102.411 -281.180 -102.734  c
-280.820 -103.057 -280.641 -103.505 -280.641 -104.078  c
-280.641 -104.505 -280.745 -104.867 -280.953 -105.164  c
-281.161 -105.461 -281.443 -105.656 -281.797 -105.750  c
-282.016 -105.812 -282.427 -105.844 -283.031 -105.844  c
-285.594 -105.844 l
-285.594 -102.250 l
h
-273.006 -99.6562 m
-271.787 -99.5000 l
-271.923 -98.6667 -272.264 -98.0130 -272.811 -97.5391  c
-273.357 -97.0651 -274.027 -96.8281 -274.818 -96.8281  c
-275.808 -96.8281 -276.605 -97.1536 -277.209 -97.8047  c
-277.813 -98.4557 -278.115 -99.3906 -278.115 -100.609  c
-278.115 -101.391 -277.985 -102.076 -277.725 -102.664  c
-277.464 -103.253 -277.068 -103.693 -276.537 -103.984  c
-276.006 -104.276 -275.428 -104.422 -274.803 -104.422  c
-274.021 -104.422 -273.378 -104.224 -272.873 -103.828  c
-272.368 -103.432 -272.048 -102.865 -271.912 -102.125  c
-273.100 -101.938 l
-273.214 -102.427 -273.417 -102.794 -273.709 -103.039  c
-274.001 -103.284 -274.350 -103.406 -274.756 -103.406  c
-275.381 -103.406 -275.886 -103.185 -276.271 -102.742  c
-276.657 -102.299 -276.850 -101.599 -276.850 -100.641  c
-276.850 -99.6615 -276.662 -98.9505 -276.287 -98.5078  c
-275.912 -98.0651 -275.428 -97.8438 -274.834 -97.8438  c
-274.344 -97.8438 -273.938 -97.9922 -273.615 -98.2891  c
-273.292 -98.5859 -273.089 -99.0417 -273.006 -99.6562  c
h
-270.084 -99.4844 m
-270.459 -104.797 l
-270.459 -107.016 l
-268.928 -107.016 l
-268.928 -104.797 l
-269.287 -99.4844 l
-270.084 -99.4844 l
h
-270.396 -97.0000 m
-270.396 -98.4062 l
-268.990 -98.4062 l
-268.990 -97.0000 l
-270.396 -97.0000 l
h
f
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
-249.192 -57.1924 m
-326.808 -134.808 l
S
10.0000 M
[ ] 0.00000 d
newpath
-318.147 -129.808 m
-326.808 -134.808 l
-321.808 -126.147 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-323.000 -48.0000 m
-253.000 -48.0000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-262.659 -45.4118 m
-253.000 -48.0000 l
-262.659 -50.5882 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-240.000 -131.000 m
-240.000 -61.0000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-242.588 -70.6593 m
-240.000 -61.0000 l
-237.412 -70.6593 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-323.000 -144.000 m
-253.000 -144.000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-262.659 -141.412 m
-253.000 -144.000 l
-262.659 -146.588 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-336.000 -131.000 m
-336.000 -61.0000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-338.588 -70.6593 m
-336.000 -61.0000 l
-333.412 -70.6593 l
S
2 J
0 j
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix

%%Trailer
%%EOF
