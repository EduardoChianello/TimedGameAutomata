%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 218 575 573
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Domingo, 12 de Maio de 2019 00h58min01s BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
220 140 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
220.000 0.00000 l
220.000 140.000 l
0.00000 140.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
220.000 0.00000 l
220.000 140.000 l
0.00000 140.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
h
f
Q
[ 1.00000 0.00000 0.00000 1.00000 -190.000 25.0000 ] concat
.258824 .627451 .658824 RG
newpath
233.078 95.0000 m
233.078 84.9844 l
236.859 84.9844 l
237.526 84.9844 238.036 85.0156 238.391 85.0781  c
238.880 85.1615 239.292 85.3177 239.625 85.5469  c
239.958 85.7760 240.227 86.0964 240.430 86.5078  c
240.633 86.9193 240.734 87.3750 240.734 87.8750  c
240.734 88.7292 240.464 89.4505 239.922 90.0391  c
239.380 90.6276 238.401 90.9219 236.984 90.9219  c
234.406 90.9219 l
234.406 95.0000 l
233.078 95.0000 l
h
234.406 89.7500 m
237.000 89.7500 l
237.854 89.7500 238.461 89.5885 238.820 89.2656  c
239.180 88.9427 239.359 88.4948 239.359 87.9219  c
239.359 87.4948 239.255 87.1328 239.047 86.8359  c
238.839 86.5391 238.557 86.3438 238.203 86.2500  c
237.984 86.1875 237.573 86.1562 236.969 86.1562  c
234.406 86.1562 l
234.406 89.7500 l
h
242.557 95.0000 m
242.557 88.7031 l
241.463 88.7031 l
241.463 87.7344 l
242.557 87.7344 l
242.557 86.9688 l
242.557 86.4792 242.598 86.1146 242.682 85.8750  c
242.807 85.5625 243.018 85.3073 243.314 85.1094  c
243.611 84.9115 244.031 84.8125 244.572 84.8125  c
244.916 84.8125 245.296 84.8542 245.713 84.9375  c
245.525 86.0000 l
245.275 85.9583 245.036 85.9375 244.807 85.9375  c
244.432 85.9375 244.166 86.0156 244.010 86.1719  c
243.854 86.3281 243.775 86.6250 243.775 87.0625  c
243.775 87.7344 l
245.197 87.7344 l
245.197 88.7031 l
243.775 88.7031 l
243.775 95.0000 l
242.557 95.0000 l
h
245.665 92.8281 m
246.868 92.6406 l
246.941 93.1302 247.134 93.5052 247.446 93.7656  c
247.759 94.0260 248.196 94.1562 248.759 94.1562  c
249.321 94.1562 249.741 94.0417 250.017 93.8125  c
250.293 93.5833 250.431 93.3125 250.431 93.0000  c
250.431 92.7188 250.306 92.5000 250.056 92.3438  c
249.889 92.2292 249.472 92.0885 248.806 91.9219  c
247.899 91.6927 247.272 91.4948 246.923 91.3281  c
246.574 91.1615 246.311 90.9323 246.134 90.6406  c
245.957 90.3490 245.868 90.0260 245.868 89.6719  c
245.868 89.3490 245.941 89.0495 246.087 88.7734  c
246.233 88.4974 246.436 88.2656 246.696 88.0781  c
246.884 87.9427 247.142 87.8255 247.470 87.7266  c
247.798 87.6276 248.155 87.5781 248.540 87.5781  c
249.103 87.5781 249.600 87.6589 250.032 87.8203  c
250.465 87.9818 250.785 88.2031 250.993 88.4844  c
251.201 88.7656 251.342 89.1406 251.415 89.6094  c
250.212 89.7812 l
250.160 89.4062 250.001 89.1146 249.735 88.9062  c
249.470 88.6979 249.097 88.5938 248.618 88.5938  c
248.056 88.5938 247.655 88.6849 247.415 88.8672  c
247.175 89.0495 247.056 89.2708 247.056 89.5312  c
247.056 89.6875 247.103 89.8281 247.196 89.9531  c
247.300 90.0885 247.462 90.1979 247.681 90.2812  c
247.795 90.3229 248.155 90.4271 248.759 90.5938  c
249.634 90.8333 250.243 91.0260 250.587 91.1719  c
250.931 91.3177 251.199 91.5312 251.392 91.8125  c
251.584 92.0938 251.681 92.4427 251.681 92.8594  c
251.681 93.2760 251.563 93.6641 251.329 94.0234  c
251.095 94.3828 250.751 94.6641 250.298 94.8672  c
249.845 95.0703 249.332 95.1719 248.759 95.1719  c
247.821 95.1719 247.105 94.9740 246.610 94.5781  c
246.116 94.1823 245.800 93.5990 245.665 92.8281  c
h
252.931 95.6094 m
254.118 95.7812 l
254.170 96.1458 254.311 96.4167 254.540 96.5938  c
254.842 96.8125 255.259 96.9219 255.790 96.9219  c
256.363 96.9219 256.803 96.8099 257.110 96.5859  c
257.418 96.3620 257.629 96.0417 257.743 95.6250  c
257.806 95.3750 257.832 94.8490 257.821 94.0469  c
257.290 94.6823 256.623 95.0000 255.821 95.0000  c
254.821 95.0000 254.048 94.6406 253.501 93.9219  c
252.954 93.2031 252.681 92.3385 252.681 91.3281  c
252.681 90.6406 252.806 90.0026 253.056 89.4141  c
253.306 88.8255 253.668 88.3724 254.142 88.0547  c
254.616 87.7370 255.175 87.5781 255.821 87.5781  c
256.675 87.5781 257.384 87.9219 257.946 88.6094  c
257.946 87.7344 l
259.071 87.7344 l
259.071 94.0156 l
259.071 95.1510 258.957 95.9531 258.728 96.4219  c
258.498 96.8906 258.134 97.2630 257.634 97.5391  c
257.134 97.8151 256.519 97.9531 255.790 97.9531  c
254.925 97.9531 254.228 97.7578 253.696 97.3672  c
253.165 96.9766 252.910 96.3906 252.931 95.6094  c
h
253.946 91.2344 m
253.946 92.1927 254.134 92.8906 254.509 93.3281  c
254.884 93.7656 255.358 93.9844 255.931 93.9844  c
256.493 93.9844 256.967 93.7656 257.353 93.3281  c
257.738 92.8906 257.931 92.2083 257.931 91.2812  c
257.931 90.3958 257.733 89.7266 257.337 89.2734  c
256.941 88.8203 256.467 88.5938 255.915 88.5938  c
255.363 88.5938 254.897 88.8151 254.517 89.2578  c
254.136 89.7005 253.946 90.3594 253.946 91.2344  c
h
261.592 92.5156 m
261.217 87.2031 l
261.217 84.9844 l
262.748 84.9844 l
262.748 87.2031 l
262.389 92.5156 l
261.592 92.5156 l
h
261.279 95.0000 m
261.279 93.5938 l
262.686 93.5938 l
262.686 95.0000 l
261.279 95.0000 l
h
f
.258824 .258824 .658824 RG
newpath
232.109 7.00000 m
234.750 3.21875 l
232.297 -.265625 l
233.844 -.265625 l
234.953 1.43750 l
235.161 1.76042 235.328 2.03125 235.453 2.25000  c
235.661 1.94792 235.849 1.68229 236.016 1.45312  c
237.234 -.265625 l
238.703 -.265625 l
236.203 3.15625 l
238.891 7.00000 l
237.391 7.00000 l
235.891 4.75000 l
235.500 4.14062 l
233.594 7.00000 l
232.109 7.00000 l
h
244.219 7.00000 m
242.984 7.00000 l
242.984 -.843750 l
242.693 -.562500 242.305 -.278646 241.820 .00781250  c
241.336 .294271 240.906 .505208 240.531 .640625  c
240.531 -.546875 l
241.219 -.869792 241.820 -1.26042 242.336 -1.71875  c
242.852 -2.17708 243.214 -2.62500 243.422 -3.06250  c
244.219 -3.06250 l
244.219 7.00000 l
h
248.052 1.14062 m
248.052 -.265625 l
249.458 -.265625 l
249.458 1.14062 l
248.052 1.14062 l
h
248.052 7.00000 m
248.052 5.59375 l
249.458 5.59375 l
249.458 7.00000 l
248.052 7.00000 l
h
258.066 1.10938 m
251.457 1.10938 l
251.457 -.0468750 l
258.066 -.0468750 l
258.066 1.10938 l
h
258.066 4.15625 m
251.457 4.15625 l
251.457 3.00000 l
258.066 3.00000 l
258.066 4.15625 l
h
259.430 2.06250 m
259.430 .875000 259.552 -.0807292 259.797 -.804688  c
260.042 -1.52865 260.404 -2.08594 260.883 -2.47656  c
261.362 -2.86719 261.966 -3.06250 262.695 -3.06250  c
263.237 -3.06250 263.711 -2.95312 264.117 -2.73438  c
264.523 -2.51562 264.859 -2.20312 265.125 -1.79688  c
265.391 -1.39062 265.596 -.895833 265.742 -.312500  c
265.888 .270833 265.961 1.06250 265.961 2.06250  c
265.961 3.23958 265.841 4.18750 265.602 4.90625  c
265.362 5.62500 265.003 6.18229 264.523 6.57812  c
264.044 6.97396 263.435 7.17188 262.695 7.17188  c
261.737 7.17188 260.982 6.82292 260.430 6.12500  c
259.763 5.29167 259.430 3.93750 259.430 2.06250  c
h
260.695 2.06250 m
260.695 3.70833 260.888 4.80208 261.273 5.34375  c
261.659 5.88542 262.133 6.15625 262.695 6.15625  c
263.268 6.15625 263.747 5.88281 264.133 5.33594  c
264.518 4.78906 264.711 3.69792 264.711 2.06250  c
264.711 .406250 264.518 -.692708 264.133 -1.23438  c
263.747 -1.77604 263.263 -2.04688 262.680 -2.04688  c
262.117 -2.04688 261.669 -1.80729 261.336 -1.32812  c
260.909 -.713542 260.695 .416667 260.695 2.06250  c
h
f
.258824 .627451 .658824 RG
newpath
233.078 -9.00000 m
233.078 -19.0156 l
236.859 -19.0156 l
237.526 -19.0156 238.036 -18.9844 238.391 -18.9219  c
238.880 -18.8385 239.292 -18.6823 239.625 -18.4531  c
239.958 -18.2240 240.227 -17.9036 240.430 -17.4922  c
240.633 -17.0807 240.734 -16.6250 240.734 -16.1250  c
240.734 -15.2708 240.464 -14.5495 239.922 -13.9609  c
239.380 -13.3724 238.401 -13.0781 236.984 -13.0781  c
234.406 -13.0781 l
234.406 -9.00000 l
233.078 -9.00000 l
h
234.406 -14.2500 m
237.000 -14.2500 l
237.854 -14.2500 238.461 -14.4115 238.820 -14.7344  c
239.180 -15.0573 239.359 -15.5052 239.359 -16.0781  c
239.359 -16.5052 239.255 -16.8672 239.047 -17.1641  c
238.839 -17.4609 238.557 -17.6562 238.203 -17.7500  c
237.984 -17.8125 237.573 -17.8438 236.969 -17.8438  c
234.406 -17.8438 l
234.406 -14.2500 l
h
241.775 -11.1719 m
242.979 -11.3594 l
243.051 -10.8698 243.244 -10.4948 243.557 -10.2344  c
243.869 -9.97396 244.307 -9.84375 244.869 -9.84375  c
245.432 -9.84375 245.851 -9.95833 246.127 -10.1875  c
246.403 -10.4167 246.541 -10.6875 246.541 -11.0000  c
246.541 -11.2812 246.416 -11.5000 246.166 -11.6562  c
245.999 -11.7708 245.583 -11.9115 244.916 -12.0781  c
244.010 -12.3073 243.382 -12.5052 243.033 -12.6719  c
242.684 -12.8385 242.421 -13.0677 242.244 -13.3594  c
242.067 -13.6510 241.979 -13.9740 241.979 -14.3281  c
241.979 -14.6510 242.051 -14.9505 242.197 -15.2266  c
242.343 -15.5026 242.546 -15.7344 242.807 -15.9219  c
242.994 -16.0573 243.252 -16.1745 243.580 -16.2734  c
243.908 -16.3724 244.265 -16.4219 244.650 -16.4219  c
245.213 -16.4219 245.710 -16.3411 246.143 -16.1797  c
246.575 -16.0182 246.895 -15.7969 247.104 -15.5156  c
247.312 -15.2344 247.452 -14.8594 247.525 -14.3906  c
246.322 -14.2188 l
246.270 -14.5938 246.111 -14.8854 245.846 -15.0938  c
245.580 -15.3021 245.208 -15.4062 244.729 -15.4062  c
244.166 -15.4062 243.765 -15.3151 243.525 -15.1328  c
243.286 -14.9505 243.166 -14.7292 243.166 -14.4688  c
243.166 -14.3125 243.213 -14.1719 243.307 -14.0469  c
243.411 -13.9115 243.572 -13.8021 243.791 -13.7188  c
243.906 -13.6771 244.265 -13.5729 244.869 -13.4062  c
245.744 -13.1667 246.354 -12.9740 246.697 -12.8281  c
247.041 -12.6823 247.309 -12.4688 247.502 -12.1875  c
247.695 -11.9062 247.791 -11.5573 247.791 -11.1406  c
247.791 -10.7240 247.674 -10.3359 247.439 -9.97656  c
247.205 -9.61719 246.861 -9.33594 246.408 -9.13281  c
245.955 -8.92969 245.442 -8.82812 244.869 -8.82812  c
243.932 -8.82812 243.215 -9.02604 242.721 -9.42188  c
242.226 -9.81771 241.911 -10.4010 241.775 -11.1719  c
h
249.041 -8.39062 m
250.229 -8.21875 l
250.281 -7.85417 250.421 -7.58333 250.650 -7.40625  c
250.952 -7.18750 251.369 -7.07812 251.900 -7.07812  c
252.473 -7.07812 252.913 -7.19010 253.221 -7.41406  c
253.528 -7.63802 253.739 -7.95833 253.854 -8.37500  c
253.916 -8.62500 253.942 -9.15104 253.932 -9.95312  c
253.400 -9.31771 252.734 -9.00000 251.932 -9.00000  c
250.932 -9.00000 250.158 -9.35938 249.611 -10.0781  c
249.064 -10.7969 248.791 -11.6615 248.791 -12.6719  c
248.791 -13.3594 248.916 -13.9974 249.166 -14.5859  c
249.416 -15.1745 249.778 -15.6276 250.252 -15.9453  c
250.726 -16.2630 251.286 -16.4219 251.932 -16.4219  c
252.786 -16.4219 253.494 -16.0781 254.057 -15.3906  c
254.057 -16.2656 l
255.182 -16.2656 l
255.182 -9.98438 l
255.182 -8.84896 255.067 -8.04688 254.838 -7.57812  c
254.609 -7.10938 254.244 -6.73698 253.744 -6.46094  c
253.244 -6.18490 252.630 -6.04688 251.900 -6.04688  c
251.036 -6.04688 250.338 -6.24219 249.807 -6.63281  c
249.275 -7.02344 249.020 -7.60938 249.041 -8.39062  c
h
250.057 -12.7656 m
250.057 -11.8073 250.244 -11.1094 250.619 -10.6719  c
250.994 -10.2344 251.468 -10.0156 252.041 -10.0156  c
252.604 -10.0156 253.077 -10.2344 253.463 -10.6719  c
253.848 -11.1094 254.041 -11.7917 254.041 -12.7188  c
254.041 -13.6042 253.843 -14.2734 253.447 -14.7266  c
253.051 -15.1797 252.577 -15.4062 252.025 -15.4062  c
251.473 -15.4062 251.007 -15.1849 250.627 -14.7422  c
250.247 -14.2995 250.057 -13.6406 250.057 -12.7656  c
h
259.358 -11.4688 m
259.348 -11.6354 259.343 -11.7604 259.343 -11.8438  c
259.343 -12.3229 259.410 -12.7396 259.546 -13.0938  c
259.650 -13.3542 259.812 -13.6198 260.030 -13.8906  c
260.197 -14.0885 260.494 -14.3750 260.921 -14.7500  c
261.348 -15.1250 261.624 -15.4245 261.749 -15.6484  c
261.874 -15.8724 261.937 -16.1146 261.937 -16.3750  c
261.937 -16.8542 261.752 -17.2760 261.382 -17.6406  c
261.012 -18.0052 260.556 -18.1875 260.015 -18.1875  c
259.483 -18.1875 259.043 -18.0234 258.694 -17.6953  c
258.345 -17.3672 258.114 -16.8542 257.999 -16.1562  c
256.733 -16.2969 l
256.848 -17.2344 257.187 -17.9505 257.749 -18.4453  c
258.312 -18.9401 259.056 -19.1875 259.983 -19.1875  c
260.963 -19.1875 261.744 -18.9219 262.327 -18.3906  c
262.910 -17.8594 263.202 -17.2135 263.202 -16.4531  c
263.202 -16.0156 263.101 -15.6120 262.897 -15.2422  c
262.694 -14.8724 262.296 -14.4271 261.702 -13.9062  c
261.296 -13.5521 261.030 -13.2891 260.905 -13.1172  c
260.780 -12.9453 260.689 -12.7500 260.632 -12.5312  c
260.575 -12.3125 260.541 -11.9583 260.530 -11.4688  c
259.358 -11.4688 l
h
259.280 -9.00000 m
259.280 -10.4062 l
260.671 -10.4062 l
260.671 -9.00000 l
259.280 -9.00000 l
h
f
.647059 .686275 .803922 RG
newpath
348.000 16.0000 m
348.000 22.6274 342.627 28.0000 336.000 28.0000  c
329.373 28.0000 324.000 22.6274 324.000 16.0000  c
324.000 9.37258 329.373 4.00000 336.000 4.00000  c
342.627 4.00000 348.000 9.37258 348.000 16.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
348.000 16.0000 m
348.000 22.6274 342.627 28.0000 336.000 28.0000  c
329.373 28.0000 324.000 22.6274 324.000 16.0000  c
324.000 9.37258 329.373 4.00000 336.000 4.00000  c
342.627 4.00000 348.000 9.37258 348.000 16.0000  c
h
S
.647059 .686275 .803922 RG
newpath
220.000 16.0000 m
220.000 22.6274 214.627 28.0000 208.000 28.0000  c
201.373 28.0000 196.000 22.6274 196.000 16.0000  c
196.000 9.37258 201.373 4.00000 208.000 4.00000  c
214.627 4.00000 220.000 9.37258 220.000 16.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
220.000 16.0000 m
220.000 22.6274 214.627 28.0000 208.000 28.0000  c
201.373 28.0000 196.000 22.6274 196.000 16.0000  c
196.000 9.37258 201.373 4.00000 208.000 4.00000  c
214.627 4.00000 220.000 9.37258 220.000 16.0000  c
h
S
newpath
216.000 16.0000 m
216.000 20.4183 212.418 24.0000 208.000 24.0000  c
203.582 24.0000 200.000 20.4183 200.000 16.0000  c
200.000 11.5817 203.582 8.00000 208.000 8.00000  c
212.418 8.00000 216.000 11.5817 216.000 16.0000  c
h
S
.549020 .219608 .388235 RG
newpath
193.312 -1.00000 m
193.312 -11.0156 l
194.625 -11.0156 l
194.625 -1.00000 l
193.312 -1.00000 l
h
f
newpath
327.031 1.00000 m
327.031 -9.01562 l
330.781 -9.01562 l
331.552 -9.01562 332.169 -8.91406 332.633 -8.71094  c
333.096 -8.50781 333.458 -8.19792 333.719 -7.78125  c
333.979 -7.36458 334.109 -6.92188 334.109 -6.45312  c
334.109 -6.02604 333.992 -5.62500 333.758 -5.25000  c
333.523 -4.87500 333.172 -4.56771 332.703 -4.32812  c
333.307 -4.15104 333.773 -3.84896 334.102 -3.42188  c
334.430 -2.99479 334.594 -2.48958 334.594 -1.90625  c
334.594 -1.43750 334.495 -1.00000 334.297 -.593750  c
334.099 -.187500 333.854 .125000 333.562 .343750  c
333.271 .562500 332.904 .726562 332.461 .835938  c
332.018 .945312 331.479 1.00000 330.844 1.00000  c
327.031 1.00000 l
h
328.359 -4.81250 m
330.516 -4.81250 l
331.109 -4.81250 331.531 -4.84896 331.781 -4.92188  c
332.125 -5.02604 332.380 -5.19531 332.547 -5.42969  c
332.714 -5.66406 332.797 -5.95312 332.797 -6.29688  c
332.797 -6.63021 332.719 -6.92448 332.562 -7.17969  c
332.406 -7.43490 332.180 -7.60938 331.883 -7.70312  c
331.586 -7.79688 331.078 -7.84375 330.359 -7.84375  c
328.359 -7.84375 l
328.359 -4.81250 l
h
328.359 -.187500 m
330.844 -.187500 l
331.271 -.187500 331.573 -.203125 331.750 -.234375  c
332.052 -.286458 332.307 -.377604 332.516 -.507812  c
332.724 -.638021 332.893 -.822917 333.023 -1.06250  c
333.154 -1.30208 333.219 -1.58333 333.219 -1.90625  c
333.219 -2.28125 333.122 -2.60677 332.930 -2.88281  c
332.737 -3.15885 332.471 -3.35156 332.133 -3.46094  c
331.794 -3.57031 331.307 -3.62500 330.672 -3.62500  c
328.359 -3.62500 l
328.359 -.187500 l
h
f
.258824 .258824 .658824 RG
newpath
233.219 111.000 m
233.219 104.703 l
232.125 104.703 l
232.125 103.734 l
233.219 103.734 l
233.219 102.969 l
233.219 102.479 233.260 102.115 233.344 101.875  c
233.469 101.562 233.680 101.307 233.977 101.109  c
234.273 100.911 234.693 100.812 235.234 100.812  c
235.578 100.812 235.958 100.854 236.375 100.938  c
236.188 102.000 l
235.938 101.958 235.698 101.938 235.469 101.938  c
235.094 101.938 234.828 102.016 234.672 102.172  c
234.516 102.328 234.438 102.625 234.438 103.062  c
234.438 103.734 l
235.859 103.734 l
235.859 104.703 l
234.438 104.703 l
234.438 111.000 l
233.219 111.000 l
h
236.780 111.000 m
236.780 100.984 l
238.015 100.984 l
238.015 111.000 l
236.780 111.000 l
h
244.656 110.109 m
244.208 110.495 243.773 110.768 243.352 110.930  c
242.930 111.091 242.474 111.172 241.984 111.172  c
241.193 111.172 240.581 110.977 240.148 110.586  c
239.716 110.195 239.500 109.693 239.500 109.078  c
239.500 108.724 239.581 108.401 239.742 108.109  c
239.904 107.818 240.117 107.583 240.383 107.406  c
240.648 107.229 240.943 107.094 241.266 107.000  c
241.505 106.938 241.870 106.875 242.359 106.812  c
243.359 106.698 244.094 106.557 244.562 106.391  c
244.562 106.224 244.562 106.120 244.562 106.078  c
244.562 105.568 244.448 105.214 244.219 105.016  c
243.906 104.734 243.438 104.594 242.812 104.594  c
242.240 104.594 241.815 104.695 241.539 104.898  c
241.263 105.102 241.057 105.458 240.922 105.969  c
239.719 105.812 l
239.823 105.292 240.003 104.875 240.258 104.562  c
240.513 104.250 240.878 104.008 241.352 103.836  c
241.826 103.664 242.375 103.578 243.000 103.578  c
243.615 103.578 244.115 103.651 244.500 103.797  c
244.885 103.943 245.169 104.125 245.352 104.344  c
245.534 104.562 245.661 104.844 245.734 105.188  c
245.776 105.396 245.797 105.771 245.797 106.312  c
245.797 107.953 l
245.797 109.099 245.823 109.823 245.875 110.125  c
245.927 110.427 246.031 110.719 246.188 111.000  c
244.906 111.000 l
244.781 110.740 244.698 110.443 244.656 110.109  c
h
244.562 107.359 m
244.115 107.536 243.443 107.693 242.547 107.828  c
242.047 107.901 241.690 107.982 241.477 108.070  c
241.263 108.159 241.099 108.292 240.984 108.469  c
240.870 108.646 240.812 108.839 240.812 109.047  c
240.812 109.380 240.938 109.656 241.188 109.875  c
241.438 110.094 241.802 110.203 242.281 110.203  c
242.760 110.203 243.182 110.099 243.547 109.891  c
243.911 109.682 244.182 109.396 244.359 109.031  c
244.495 108.760 244.562 108.354 244.562 107.812  c
244.562 107.359 l
h
247.489 111.609 m
248.677 111.781 l
248.729 112.146 248.869 112.417 249.099 112.594  c
249.401 112.812 249.817 112.922 250.349 112.922  c
250.922 112.922 251.362 112.810 251.669 112.586  c
251.976 112.362 252.187 112.042 252.302 111.625  c
252.364 111.375 252.390 110.849 252.380 110.047  c
251.849 110.682 251.182 111.000 250.380 111.000  c
249.380 111.000 248.606 110.641 248.060 109.922  c
247.513 109.203 247.239 108.339 247.239 107.328  c
247.239 106.641 247.364 106.003 247.614 105.414  c
247.864 104.826 248.226 104.372 248.700 104.055  c
249.174 103.737 249.734 103.578 250.380 103.578  c
251.234 103.578 251.942 103.922 252.505 104.609  c
252.505 103.734 l
253.630 103.734 l
253.630 110.016 l
253.630 111.151 253.515 111.953 253.286 112.422  c
253.057 112.891 252.692 113.263 252.192 113.539  c
251.692 113.815 251.078 113.953 250.349 113.953  c
249.484 113.953 248.786 113.758 248.255 113.367  c
247.724 112.977 247.468 112.391 247.489 111.609  c
h
248.505 107.234 m
248.505 108.193 248.692 108.891 249.067 109.328  c
249.442 109.766 249.916 109.984 250.489 109.984  c
251.052 109.984 251.526 109.766 251.911 109.328  c
252.297 108.891 252.489 108.208 252.489 107.281  c
252.489 106.396 252.291 105.727 251.896 105.273  c
251.500 104.820 251.026 104.594 250.474 104.594  c
249.922 104.594 249.455 104.815 249.075 105.258  c
248.695 105.701 248.505 106.359 248.505 107.234  c
h
255.525 113.781 m
255.525 100.984 l
258.244 100.984 l
258.244 102.000 l
256.760 102.000 l
256.760 112.766 l
258.244 112.766 l
258.244 113.781 l
255.525 113.781 l
h
259.540 111.000 m
259.540 100.984 l
263.321 100.984 l
263.988 100.984 264.498 101.016 264.853 101.078  c
265.342 101.161 265.754 101.318 266.087 101.547  c
266.420 101.776 266.688 102.096 266.892 102.508  c
267.095 102.919 267.196 103.375 267.196 103.875  c
267.196 104.729 266.925 105.451 266.384 106.039  c
265.842 106.628 264.863 106.922 263.446 106.922  c
260.868 106.922 l
260.868 111.000 l
259.540 111.000 l
h
260.868 105.750 m
263.462 105.750 l
264.316 105.750 264.923 105.589 265.282 105.266  c
265.642 104.943 265.821 104.495 265.821 103.922  c
265.821 103.495 265.717 103.133 265.509 102.836  c
265.300 102.539 265.019 102.344 264.665 102.250  c
264.446 102.188 264.035 102.156 263.431 102.156  c
260.868 102.156 l
260.868 105.750 l
h
269.112 111.000 m
269.112 100.984 l
270.425 100.984 l
270.425 111.000 l
269.112 111.000 l
h
272.768 111.000 m
272.768 100.984 l
276.221 100.984 l
277.002 100.984 277.596 101.031 278.002 101.125  c
278.575 101.250 279.064 101.490 279.471 101.844  c
280.002 102.292 280.398 102.862 280.658 103.555  c
280.919 104.247 281.049 105.042 281.049 105.938  c
281.049 106.698 280.960 107.372 280.783 107.961  c
280.606 108.549 280.380 109.036 280.104 109.422  c
279.827 109.807 279.523 110.109 279.189 110.328  c
278.856 110.547 278.458 110.714 277.994 110.828  c
277.531 110.943 276.997 111.000 276.393 111.000  c
272.768 111.000 l
h
274.096 109.812 m
276.236 109.812 l
276.893 109.812 277.411 109.753 277.791 109.633  c
278.171 109.513 278.471 109.339 278.689 109.109  c
279.002 108.797 279.247 108.375 279.424 107.844  c
279.601 107.312 279.689 106.667 279.689 105.906  c
279.689 104.865 279.518 104.062 279.174 103.500  c
278.830 102.938 278.413 102.557 277.924 102.359  c
277.559 102.224 276.986 102.156 276.205 102.156  c
274.096 102.156 l
274.096 109.812 l
h
281.581 113.781 m
281.581 112.891 l
289.737 112.891 l
289.737 113.781 l
281.581 113.781 l
h
290.617 111.000 m
290.617 100.984 l
294.367 100.984 l
295.138 100.984 295.755 101.086 296.219 101.289  c
296.682 101.492 297.044 101.802 297.305 102.219  c
297.565 102.635 297.695 103.078 297.695 103.547  c
297.695 103.974 297.578 104.375 297.344 104.750  c
297.109 105.125 296.758 105.432 296.289 105.672  c
296.893 105.849 297.359 106.151 297.688 106.578  c
298.016 107.005 298.180 107.510 298.180 108.094  c
298.180 108.562 298.081 109.000 297.883 109.406  c
297.685 109.812 297.440 110.125 297.148 110.344  c
296.857 110.562 296.490 110.727 296.047 110.836  c
295.604 110.945 295.065 111.000 294.430 111.000  c
290.617 111.000 l
h
291.945 105.188 m
294.102 105.188 l
294.695 105.188 295.117 105.151 295.367 105.078  c
295.711 104.974 295.966 104.805 296.133 104.570  c
296.299 104.336 296.383 104.047 296.383 103.703  c
296.383 103.370 296.305 103.076 296.148 102.820  c
295.992 102.565 295.766 102.391 295.469 102.297  c
295.172 102.203 294.664 102.156 293.945 102.156  c
291.945 102.156 l
291.945 105.188 l
h
291.945 109.812 m
294.430 109.812 l
294.857 109.812 295.159 109.797 295.336 109.766  c
295.638 109.714 295.893 109.622 296.102 109.492  c
296.310 109.362 296.479 109.177 296.609 108.938  c
296.740 108.698 296.805 108.417 296.805 108.094  c
296.805 107.719 296.708 107.393 296.516 107.117  c
296.323 106.841 296.057 106.648 295.719 106.539  c
295.380 106.430 294.893 106.375 294.258 106.375  c
291.945 106.375 l
291.945 109.812 l
h
304.143 111.000 m
302.908 111.000 l
302.908 103.156 l
302.617 103.438 302.229 103.721 301.744 104.008  c
301.260 104.294 300.830 104.505 300.455 104.641  c
300.455 103.453 l
301.143 103.130 301.744 102.740 302.260 102.281  c
302.775 101.823 303.137 101.375 303.346 100.938  c
304.143 100.938 l
304.143 111.000 l
h
309.694 113.781 m
306.976 113.781 l
306.976 112.766 l
308.460 112.766 l
308.460 102.000 l
306.976 102.000 l
306.976 100.984 l
309.694 100.984 l
309.694 113.781 l
h
311.865 105.141 m
311.865 103.734 l
313.271 103.734 l
313.271 105.141 l
311.865 105.141 l
h
311.865 111.000 m
311.865 109.594 l
313.271 109.594 l
313.271 111.000 l
311.865 111.000 l
h
321.880 105.109 m
315.271 105.109 l
315.271 103.953 l
321.880 103.953 l
321.880 105.109 l
h
321.880 108.156 m
315.271 108.156 l
315.271 107.000 l
321.880 107.000 l
321.880 108.156 l
h
327.884 111.000 m
326.649 111.000 l
326.649 103.156 l
326.358 103.438 325.970 103.721 325.485 104.008  c
325.001 104.294 324.571 104.505 324.196 104.641  c
324.196 103.453 l
324.884 103.130 325.485 102.740 326.001 102.281  c
326.517 101.823 326.879 101.375 327.087 100.938  c
327.884 100.938 l
327.884 111.000 l
h
f
.258824 .658824 .282353 RG
newpath
232.109 79.0000 m
234.750 75.2188 l
232.297 71.7344 l
233.844 71.7344 l
234.953 73.4375 l
235.161 73.7604 235.328 74.0312 235.453 74.2500  c
235.661 73.9479 235.849 73.6823 236.016 73.4531  c
237.234 71.7344 l
238.703 71.7344 l
236.203 75.1562 l
238.891 79.0000 l
237.391 79.0000 l
235.891 76.7500 l
235.500 76.1406 l
233.594 79.0000 l
232.109 79.0000 l
h
244.219 79.0000 m
242.984 79.0000 l
242.984 71.1562 l
242.693 71.4375 242.305 71.7214 241.820 72.0078  c
241.336 72.2943 240.906 72.5052 240.531 72.6406  c
240.531 71.4531 l
241.219 71.1302 241.820 70.7396 242.336 70.2812  c
242.852 69.8229 243.214 69.3750 243.422 68.9375  c
244.219 68.9375 l
244.219 79.0000 l
h
254.177 73.1094 m
247.567 73.1094 l
247.567 71.9531 l
254.177 71.9531 l
254.177 73.1094 l
h
254.177 76.1562 m
247.567 76.1562 l
247.567 75.0000 l
254.177 75.0000 l
254.177 76.1562 l
h
262.353 73.1094 m
255.743 73.1094 l
255.743 71.9531 l
262.353 71.9531 l
262.353 73.1094 l
h
262.353 76.1562 m
255.743 76.1562 l
255.743 75.0000 l
262.353 75.0000 l
262.353 76.1562 l
h
263.716 76.3750 m
265.013 76.2656 l
265.106 76.8906 265.328 77.3620 265.677 77.6797  c
266.026 77.9974 266.445 78.1562 266.935 78.1562  c
267.528 78.1562 268.031 77.9323 268.442 77.4844  c
268.854 77.0365 269.060 76.4479 269.060 75.7188  c
269.060 75.0104 268.862 74.4531 268.466 74.0469  c
268.070 73.6406 267.554 73.4375 266.919 73.4375  c
266.523 73.4375 266.166 73.5286 265.849 73.7109  c
265.531 73.8932 265.278 74.1250 265.091 74.4062  c
263.935 74.2656 l
264.903 69.1094 l
269.888 69.1094 l
269.888 70.2969 l
265.888 70.2969 l
265.356 72.9844 l
265.961 72.5677 266.591 72.3594 267.247 72.3594  c
268.122 72.3594 268.859 72.6615 269.458 73.2656  c
270.057 73.8698 270.356 74.6510 270.356 75.6094  c
270.356 76.5156 270.096 77.2969 269.575 77.9531  c
268.929 78.7656 268.049 79.1719 266.935 79.1719  c
266.028 79.1719 265.286 78.9167 264.708 78.4062  c
264.130 77.8958 263.799 77.2188 263.716 76.3750  c
h
271.502 74.0625 m
271.502 72.8750 271.624 71.9193 271.869 71.1953  c
272.114 70.4714 272.476 69.9141 272.955 69.5234  c
273.434 69.1328 274.038 68.9375 274.768 68.9375  c
275.309 68.9375 275.783 69.0469 276.189 69.2656  c
276.596 69.4844 276.932 69.7969 277.197 70.2031  c
277.463 70.6094 277.669 71.1042 277.814 71.6875  c
277.960 72.2708 278.033 73.0625 278.033 74.0625  c
278.033 75.2396 277.913 76.1875 277.674 76.9062  c
277.434 77.6250 277.075 78.1823 276.596 78.5781  c
276.117 78.9740 275.507 79.1719 274.768 79.1719  c
273.809 79.1719 273.054 78.8229 272.502 78.1250  c
271.835 77.2917 271.502 75.9375 271.502 74.0625  c
h
272.768 74.0625 m
272.768 75.7083 272.960 76.8021 273.346 77.3438  c
273.731 77.8854 274.205 78.1562 274.768 78.1562  c
275.340 78.1562 275.820 77.8828 276.205 77.3359  c
276.590 76.7891 276.783 75.6979 276.783 74.0625  c
276.783 72.4062 276.590 71.3073 276.205 70.7656  c
275.820 70.2240 275.335 69.9531 274.752 69.9531  c
274.189 69.9531 273.742 70.1927 273.408 70.6719  c
272.981 71.2865 272.768 72.4167 272.768 74.0625  c
h
289.256 77.8125 m
288.850 78.2708 288.407 78.6120 287.928 78.8359  c
287.449 79.0599 286.933 79.1719 286.381 79.1719  c
285.350 79.1719 284.532 78.8229 283.928 78.1250  c
283.449 77.5625 283.209 76.9323 283.209 76.2344  c
283.209 75.6198 283.407 75.0625 283.803 74.5625  c
284.199 74.0625 284.792 73.6250 285.584 73.2500  c
285.136 72.7292 284.837 72.3073 284.686 71.9844  c
284.535 71.6615 284.459 71.3490 284.459 71.0469  c
284.459 70.4427 284.696 69.9193 285.170 69.4766  c
285.644 69.0339 286.235 68.8125 286.943 68.8125  c
287.631 68.8125 288.191 69.0208 288.623 69.4375  c
289.055 69.8542 289.271 70.3594 289.271 70.9531  c
289.271 71.9010 288.641 72.7135 287.381 73.3906  c
289.178 75.6719 l
289.386 75.2760 289.548 74.8125 289.662 74.2812  c
290.943 74.5625 l
290.725 75.4375 290.428 76.1562 290.053 76.7188  c
290.511 77.3229 291.032 77.8333 291.615 78.2500  c
290.787 79.2344 l
290.287 78.9115 289.777 78.4375 289.256 77.8125  c
h
286.756 72.5938 m
287.287 72.2812 287.631 72.0052 287.787 71.7656  c
287.943 71.5260 288.021 71.2656 288.021 70.9844  c
288.021 70.6406 287.912 70.3594 287.693 70.1406  c
287.475 69.9219 287.204 69.8125 286.881 69.8125  c
286.548 69.8125 286.271 69.9219 286.053 70.1406  c
285.834 70.3594 285.725 70.6198 285.725 70.9219  c
285.725 71.0781 285.764 71.2422 285.842 71.4141  c
285.920 71.5859 286.042 71.7656 286.209 71.9531  c
286.756 72.5938 l
h
288.475 76.8438 m
286.225 74.0469 l
285.558 74.4427 285.107 74.8099 284.873 75.1484  c
284.639 75.4870 284.521 75.8229 284.521 76.1562  c
284.521 76.5625 284.686 76.9844 285.014 77.4219  c
285.342 77.8594 285.798 78.0781 286.381 78.0781  c
286.756 78.0781 287.141 77.9635 287.537 77.7344  c
287.933 77.5052 288.245 77.2083 288.475 76.8438  c
h
298.594 77.8125 m
298.188 78.2708 297.745 78.6120 297.266 78.8359  c
296.786 79.0599 296.271 79.1719 295.719 79.1719  c
294.688 79.1719 293.870 78.8229 293.266 78.1250  c
292.786 77.5625 292.547 76.9323 292.547 76.2344  c
292.547 75.6198 292.745 75.0625 293.141 74.5625  c
293.536 74.0625 294.130 73.6250 294.922 73.2500  c
294.474 72.7292 294.174 72.3073 294.023 71.9844  c
293.872 71.6615 293.797 71.3490 293.797 71.0469  c
293.797 70.4427 294.034 69.9193 294.508 69.4766  c
294.982 69.0339 295.573 68.8125 296.281 68.8125  c
296.969 68.8125 297.529 69.0208 297.961 69.4375  c
298.393 69.8542 298.609 70.3594 298.609 70.9531  c
298.609 71.9010 297.979 72.7135 296.719 73.3906  c
298.516 75.6719 l
298.724 75.2760 298.885 74.8125 299.000 74.2812  c
300.281 74.5625 l
300.062 75.4375 299.766 76.1562 299.391 76.7188  c
299.849 77.3229 300.370 77.8333 300.953 78.2500  c
300.125 79.2344 l
299.625 78.9115 299.115 78.4375 298.594 77.8125  c
h
296.094 72.5938 m
296.625 72.2812 296.969 72.0052 297.125 71.7656  c
297.281 71.5260 297.359 71.2656 297.359 70.9844  c
297.359 70.6406 297.250 70.3594 297.031 70.1406  c
296.812 69.9219 296.542 69.8125 296.219 69.8125  c
295.885 69.8125 295.609 69.9219 295.391 70.1406  c
295.172 70.3594 295.062 70.6198 295.062 70.9219  c
295.062 71.0781 295.102 71.2422 295.180 71.4141  c
295.258 71.5859 295.380 71.7656 295.547 71.9531  c
296.094 72.5938 l
h
297.812 76.8438 m
295.562 74.0469 l
294.896 74.4427 294.445 74.8099 294.211 75.1484  c
293.977 75.4870 293.859 75.8229 293.859 76.1562  c
293.859 76.5625 294.023 76.9844 294.352 77.4219  c
294.680 77.8594 295.135 78.0781 295.719 78.0781  c
296.094 78.0781 296.479 77.9635 296.875 77.7344  c
297.271 77.5052 297.583 77.2083 297.812 76.8438  c
h
306.384 79.0000 m
306.384 72.7031 l
305.290 72.7031 l
305.290 71.7344 l
306.384 71.7344 l
306.384 70.9688 l
306.384 70.4792 306.425 70.1146 306.509 69.8750  c
306.634 69.5625 306.845 69.3073 307.142 69.1094  c
307.438 68.9115 307.858 68.8125 308.399 68.8125  c
308.743 68.8125 309.123 68.8542 309.540 68.9375  c
309.353 70.0000 l
309.103 69.9583 308.863 69.9375 308.634 69.9375  c
308.259 69.9375 307.993 70.0156 307.837 70.1719  c
307.681 70.3281 307.603 70.6250 307.603 71.0625  c
307.603 71.7344 l
309.024 71.7344 l
309.024 72.7031 l
307.603 72.7031 l
307.603 79.0000 l
306.384 79.0000 l
h
309.945 79.0000 m
309.945 68.9844 l
311.180 68.9844 l
311.180 79.0000 l
309.945 79.0000 l
h
317.821 78.1094 m
317.373 78.4948 316.938 78.7682 316.517 78.9297  c
316.095 79.0911 315.639 79.1719 315.149 79.1719  c
314.358 79.1719 313.746 78.9766 313.313 78.5859  c
312.881 78.1953 312.665 77.6927 312.665 77.0781  c
312.665 76.7240 312.746 76.4010 312.907 76.1094  c
313.069 75.8177 313.282 75.5833 313.548 75.4062  c
313.813 75.2292 314.108 75.0938 314.431 75.0000  c
314.670 74.9375 315.035 74.8750 315.524 74.8125  c
316.524 74.6979 317.259 74.5573 317.728 74.3906  c
317.728 74.2240 317.728 74.1198 317.728 74.0781  c
317.728 73.5677 317.613 73.2135 317.384 73.0156  c
317.071 72.7344 316.603 72.5938 315.978 72.5938  c
315.405 72.5938 314.980 72.6953 314.704 72.8984  c
314.428 73.1016 314.222 73.4583 314.087 73.9688  c
312.884 73.8125 l
312.988 73.2917 313.168 72.8750 313.423 72.5625  c
313.678 72.2500 314.043 72.0078 314.517 71.8359  c
314.991 71.6641 315.540 71.5781 316.165 71.5781  c
316.780 71.5781 317.280 71.6510 317.665 71.7969  c
318.050 71.9427 318.334 72.1250 318.517 72.3438  c
318.699 72.5625 318.826 72.8438 318.899 73.1875  c
318.941 73.3958 318.962 73.7708 318.962 74.3125  c
318.962 75.9531 l
318.962 77.0990 318.988 77.8229 319.040 78.1250  c
319.092 78.4271 319.196 78.7188 319.353 79.0000  c
318.071 79.0000 l
317.946 78.7396 317.863 78.4427 317.821 78.1094  c
h
317.728 75.3594 m
317.280 75.5365 316.608 75.6927 315.712 75.8281  c
315.212 75.9010 314.855 75.9818 314.642 76.0703  c
314.428 76.1589 314.264 76.2917 314.149 76.4688  c
314.035 76.6458 313.978 76.8385 313.978 77.0469  c
313.978 77.3802 314.103 77.6562 314.353 77.8750  c
314.603 78.0938 314.967 78.2031 315.446 78.2031  c
315.925 78.2031 316.347 78.0990 316.712 77.8906  c
317.076 77.6823 317.347 77.3958 317.524 77.0312  c
317.660 76.7604 317.728 76.3542 317.728 75.8125  c
317.728 75.3594 l
h
320.654 79.6094 m
321.842 79.7812 l
321.894 80.1458 322.035 80.4167 322.264 80.5938  c
322.566 80.8125 322.982 80.9219 323.514 80.9219  c
324.087 80.9219 324.527 80.8099 324.834 80.5859  c
325.141 80.3620 325.352 80.0417 325.467 79.6250  c
325.529 79.3750 325.555 78.8490 325.545 78.0469  c
325.014 78.6823 324.347 79.0000 323.545 79.0000  c
322.545 79.0000 321.771 78.6406 321.225 77.9219  c
320.678 77.2031 320.404 76.3385 320.404 75.3281  c
320.404 74.6406 320.529 74.0026 320.779 73.4141  c
321.029 72.8255 321.391 72.3724 321.865 72.0547  c
322.339 71.7370 322.899 71.5781 323.545 71.5781  c
324.399 71.5781 325.107 71.9219 325.670 72.6094  c
325.670 71.7344 l
326.795 71.7344 l
326.795 78.0156 l
326.795 79.1510 326.680 79.9531 326.451 80.4219  c
326.222 80.8906 325.857 81.2630 325.357 81.5391  c
324.857 81.8151 324.243 81.9531 323.514 81.9531  c
322.649 81.9531 321.951 81.7578 321.420 81.3672  c
320.889 80.9766 320.633 80.3906 320.654 79.6094  c
h
321.670 75.2344 m
321.670 76.1927 321.857 76.8906 322.232 77.3281  c
322.607 77.7656 323.081 77.9844 323.654 77.9844  c
324.217 77.9844 324.691 77.7656 325.076 77.3281  c
325.462 76.8906 325.654 76.2083 325.654 75.2812  c
325.654 74.3958 325.456 73.7266 325.061 73.2734  c
324.665 72.8203 324.191 72.5938 323.639 72.5938  c
323.087 72.5938 322.620 72.8151 322.240 73.2578  c
321.860 73.7005 321.670 74.3594 321.670 75.2344  c
h
328.690 81.7812 m
328.690 68.9844 l
331.409 68.9844 l
331.409 70.0000 l
329.925 70.0000 l
329.925 80.7656 l
331.409 80.7656 l
331.409 81.7812 l
328.690 81.7812 l
h
332.705 79.0000 m
332.705 68.9844 l
336.486 68.9844 l
337.153 68.9844 337.663 69.0156 338.018 69.0781  c
338.507 69.1615 338.919 69.3177 339.252 69.5469  c
339.585 69.7760 339.854 70.0964 340.057 70.5078  c
340.260 70.9193 340.361 71.3750 340.361 71.8750  c
340.361 72.7292 340.090 73.4505 339.549 74.0391  c
339.007 74.6276 338.028 74.9219 336.611 74.9219  c
334.033 74.9219 l
334.033 79.0000 l
332.705 79.0000 l
h
334.033 73.7500 m
336.627 73.7500 l
337.481 73.7500 338.088 73.5885 338.447 73.2656  c
338.807 72.9427 338.986 72.4948 338.986 71.9219  c
338.986 71.4948 338.882 71.1328 338.674 70.8359  c
338.465 70.5391 338.184 70.3438 337.830 70.2500  c
337.611 70.1875 337.200 70.1562 336.596 70.1562  c
334.033 70.1562 l
334.033 73.7500 l
h
342.277 79.0000 m
342.277 68.9844 l
343.590 68.9844 l
343.590 79.0000 l
342.277 79.0000 l
h
345.933 79.0000 m
345.933 68.9844 l
349.386 68.9844 l
350.167 68.9844 350.761 69.0312 351.167 69.1250  c
351.740 69.2500 352.229 69.4896 352.636 69.8438  c
353.167 70.2917 353.563 70.8620 353.823 71.5547  c
354.084 72.2474 354.214 73.0417 354.214 73.9375  c
354.214 74.6979 354.125 75.3724 353.948 75.9609  c
353.771 76.5495 353.545 77.0365 353.269 77.4219  c
352.993 77.8073 352.688 78.1094 352.354 78.3281  c
352.021 78.5469 351.623 78.7135 351.159 78.8281  c
350.696 78.9427 350.162 79.0000 349.558 79.0000  c
345.933 79.0000 l
h
347.261 77.8125 m
349.401 77.8125 l
350.058 77.8125 350.576 77.7526 350.956 77.6328  c
351.336 77.5130 351.636 77.3385 351.854 77.1094  c
352.167 76.7969 352.412 76.3750 352.589 75.8438  c
352.766 75.3125 352.854 74.6667 352.854 73.9062  c
352.854 72.8646 352.683 72.0625 352.339 71.5000  c
351.995 70.9375 351.578 70.5573 351.089 70.3594  c
350.724 70.2240 350.151 70.1562 349.370 70.1562  c
347.261 70.1562 l
347.261 77.8125 l
h
354.746 81.7812 m
354.746 80.8906 l
362.902 80.8906 l
362.902 81.7812 l
354.746 81.7812 l
h
363.782 79.0000 m
363.782 68.9844 l
367.532 68.9844 l
368.303 68.9844 368.920 69.0859 369.384 69.2891  c
369.847 69.4922 370.209 69.8021 370.470 70.2188  c
370.730 70.6354 370.860 71.0781 370.860 71.5469  c
370.860 71.9740 370.743 72.3750 370.509 72.7500  c
370.274 73.1250 369.923 73.4323 369.454 73.6719  c
370.058 73.8490 370.524 74.1510 370.853 74.5781  c
371.181 75.0052 371.345 75.5104 371.345 76.0938  c
371.345 76.5625 371.246 77.0000 371.048 77.4062  c
370.850 77.8125 370.605 78.1250 370.313 78.3438  c
370.022 78.5625 369.655 78.7266 369.212 78.8359  c
368.769 78.9453 368.230 79.0000 367.595 79.0000  c
363.782 79.0000 l
h
365.110 73.1875 m
367.267 73.1875 l
367.860 73.1875 368.282 73.1510 368.532 73.0781  c
368.876 72.9740 369.131 72.8047 369.298 72.5703  c
369.465 72.3359 369.548 72.0469 369.548 71.7031  c
369.548 71.3698 369.470 71.0755 369.313 70.8203  c
369.157 70.5651 368.931 70.3906 368.634 70.2969  c
368.337 70.2031 367.829 70.1562 367.110 70.1562  c
365.110 70.1562 l
365.110 73.1875 l
h
365.110 77.8125 m
367.595 77.8125 l
368.022 77.8125 368.324 77.7969 368.501 77.7656  c
368.803 77.7135 369.058 77.6224 369.267 77.4922  c
369.475 77.3620 369.644 77.1771 369.774 76.9375  c
369.905 76.6979 369.970 76.4167 369.970 76.0938  c
369.970 75.7188 369.873 75.3932 369.681 75.1172  c
369.488 74.8411 369.222 74.6484 368.884 74.5391  c
368.545 74.4297 368.058 74.3750 367.423 74.3750  c
365.110 74.3750 l
365.110 77.8125 l
h
377.308 79.0000 m
376.073 79.0000 l
376.073 71.1562 l
375.782 71.4375 375.394 71.7214 374.909 72.0078  c
374.425 72.2943 373.995 72.5052 373.620 72.6406  c
373.620 71.4531 l
374.308 71.1302 374.909 70.7396 375.425 70.2812  c
375.940 69.8229 376.302 69.3750 376.511 68.9375  c
377.308 68.9375 l
377.308 79.0000 l
h
382.859 81.7812 m
380.141 81.7812 l
380.141 80.7656 l
381.625 80.7656 l
381.625 70.0000 l
380.141 70.0000 l
380.141 68.9844 l
382.859 68.9844 l
382.859 81.7812 l
h
391.155 73.1094 m
384.546 73.1094 l
384.546 71.9531 l
391.155 71.9531 l
391.155 73.1094 l
h
391.155 76.1562 m
384.546 76.1562 l
384.546 75.0000 l
391.155 75.0000 l
391.155 76.1562 l
h
399.331 73.1094 m
392.722 73.1094 l
392.722 71.9531 l
399.331 71.9531 l
399.331 73.1094 l
h
399.331 76.1562 m
392.722 76.1562 l
392.722 75.0000 l
399.331 75.0000 l
399.331 76.1562 l
h
400.694 74.0625 m
400.694 72.8750 400.817 71.9193 401.062 71.1953  c
401.306 70.4714 401.668 69.9141 402.147 69.5234  c
402.627 69.1328 403.231 68.9375 403.960 68.9375  c
404.502 68.9375 404.976 69.0469 405.382 69.2656  c
405.788 69.4844 406.124 69.7969 406.390 70.2031  c
406.655 70.6094 406.861 71.1042 407.007 71.6875  c
407.153 72.2708 407.226 73.0625 407.226 74.0625  c
407.226 75.2396 407.106 76.1875 406.866 76.9062  c
406.627 77.6250 406.267 78.1823 405.788 78.5781  c
405.309 78.9740 404.700 79.1719 403.960 79.1719  c
403.002 79.1719 402.246 78.8229 401.694 78.1250  c
401.028 77.2917 400.694 75.9375 400.694 74.0625  c
h
401.960 74.0625 m
401.960 75.7083 402.153 76.8021 402.538 77.3438  c
402.924 77.8854 403.397 78.1562 403.960 78.1562  c
404.533 78.1562 405.012 77.8828 405.397 77.3359  c
405.783 76.7891 405.976 75.6979 405.976 74.0625  c
405.976 72.4062 405.783 71.3073 405.397 70.7656  c
405.012 70.2240 404.528 69.9531 403.944 69.9531  c
403.382 69.9531 402.934 70.1927 402.601 70.6719  c
402.174 71.2865 401.960 72.4167 401.960 74.0625  c
h
f
.654902 .258824 .658824 RG
newpath
326.109 46.0000 m
328.750 42.2188 l
326.297 38.7344 l
327.844 38.7344 l
328.953 40.4375 l
329.161 40.7604 329.328 41.0312 329.453 41.2500  c
329.661 40.9479 329.849 40.6823 330.016 40.4531  c
331.234 38.7344 l
332.703 38.7344 l
330.203 42.1562 l
332.891 46.0000 l
331.391 46.0000 l
329.891 43.7500 l
329.500 43.1406 l
327.594 46.0000 l
326.109 46.0000 l
h
338.219 46.0000 m
336.984 46.0000 l
336.984 38.1562 l
336.693 38.4375 336.305 38.7214 335.820 39.0078  c
335.336 39.2943 334.906 39.5052 334.531 39.6406  c
334.531 38.4531 l
335.219 38.1302 335.820 37.7396 336.336 37.2812  c
336.852 36.8229 337.214 36.3750 337.422 35.9375  c
338.219 35.9375 l
338.219 46.0000 l
h
341.552 41.6250 m
341.552 40.4688 l
348.192 37.6719 l
348.192 38.8906 l
342.927 41.0469 l
348.192 43.2344 l
348.192 44.4531 l
341.552 41.6250 l
h
356.353 40.1094 m
349.743 40.1094 l
349.743 38.9531 l
356.353 38.9531 l
356.353 40.1094 l
h
356.353 43.1562 m
349.743 43.1562 l
349.743 42.0000 l
356.353 42.0000 l
356.353 43.1562 l
h
357.716 43.3750 m
359.013 43.2656 l
359.106 43.8906 359.328 44.3620 359.677 44.6797  c
360.026 44.9974 360.445 45.1562 360.935 45.1562  c
361.528 45.1562 362.031 44.9323 362.442 44.4844  c
362.854 44.0365 363.060 43.4479 363.060 42.7188  c
363.060 42.0104 362.862 41.4531 362.466 41.0469  c
362.070 40.6406 361.554 40.4375 360.919 40.4375  c
360.523 40.4375 360.166 40.5286 359.849 40.7109  c
359.531 40.8932 359.278 41.1250 359.091 41.4062  c
357.935 41.2656 l
358.903 36.1094 l
363.888 36.1094 l
363.888 37.2969 l
359.888 37.2969 l
359.356 39.9844 l
359.961 39.5677 360.591 39.3594 361.247 39.3594  c
362.122 39.3594 362.859 39.6615 363.458 40.2656  c
364.057 40.8698 364.356 41.6510 364.356 42.6094  c
364.356 43.5156 364.096 44.2969 363.575 44.9531  c
362.929 45.7656 362.049 46.1719 360.935 46.1719  c
360.028 46.1719 359.286 45.9167 358.708 45.4062  c
358.130 44.8958 357.799 44.2188 357.716 43.3750  c
h
365.502 41.0625 m
365.502 39.8750 365.624 38.9193 365.869 38.1953  c
366.114 37.4714 366.476 36.9141 366.955 36.5234  c
367.434 36.1328 368.038 35.9375 368.768 35.9375  c
369.309 35.9375 369.783 36.0469 370.189 36.2656  c
370.596 36.4844 370.932 36.7969 371.197 37.2031  c
371.463 37.6094 371.669 38.1042 371.814 38.6875  c
371.960 39.2708 372.033 40.0625 372.033 41.0625  c
372.033 42.2396 371.913 43.1875 371.674 43.9062  c
371.434 44.6250 371.075 45.1823 370.596 45.5781  c
370.117 45.9740 369.507 46.1719 368.768 46.1719  c
367.809 46.1719 367.054 45.8229 366.502 45.1250  c
365.835 44.2917 365.502 42.9375 365.502 41.0625  c
h
366.768 41.0625 m
366.768 42.7083 366.960 43.8021 367.346 44.3438  c
367.731 44.8854 368.205 45.1562 368.768 45.1562  c
369.340 45.1562 369.820 44.8828 370.205 44.3359  c
370.590 43.7891 370.783 42.6979 370.783 41.0625  c
370.783 39.4062 370.590 38.3073 370.205 37.7656  c
369.820 37.2240 369.335 36.9531 368.752 36.9531  c
368.189 36.9531 367.742 37.1927 367.408 37.6719  c
366.981 38.2865 366.768 39.4167 366.768 41.0625  c
h
f
1 J
2 j
0.00000 0.00000 0.00000 RG
newpath
221.000 16.0000 m
323.000 16.0000 l
S
newpath
313.341 18.5882 m
323.000 16.0000 l
313.341 13.4118 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
325.600 23.8000 m
280.000 58.0000 l
274.667 62.0000 269.333 62.0000 264.000 58.0000  c
218.400 23.8000 l
S
10.0000 M
[ ] 0.00000 d
newpath
227.680 27.5250 m
218.400 23.8000 l
224.574 31.6661 l
S
2 J
0 j
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix

%%Trailer
%%EOF
