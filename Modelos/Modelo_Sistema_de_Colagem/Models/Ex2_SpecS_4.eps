%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 206 575 585
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Domingo, 12 de Maio de 2019 00h59min09s BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
182 124 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
182.000 0.00000 l
182.000 124.000 l
0.00000 124.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
182.000 0.00000 l
182.000 124.000 l
0.00000 124.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
0.00000 0.00000 l
h
f
Q
[ 1.00000 0.00000 0.00000 1.00000 317.000 89.0000 ] concat
.258824 .258824 .658824 RG
newpath
-255.125 -54.2031 m
-255.266 -55.3594 l
-254.995 -55.2865 -254.760 -55.2500 -254.562 -55.2500  c
-254.292 -55.2500 -254.073 -55.2943 -253.906 -55.3828  c
-253.740 -55.4714 -253.604 -55.5990 -253.500 -55.7656  c
-253.427 -55.8906 -253.302 -56.1979 -253.125 -56.6875  c
-253.104 -56.7500 -253.068 -56.8490 -253.016 -56.9844  c
-255.781 -64.2656 l
-254.453 -64.2656 l
-252.938 -60.0625 l
-252.740 -59.5208 -252.562 -58.9583 -252.406 -58.3750  c
-252.271 -58.9375 -252.104 -59.4896 -251.906 -60.0312  c
-250.359 -64.2656 l
-249.125 -64.2656 l
-251.891 -56.8750 l
-252.182 -56.0833 -252.411 -55.5365 -252.578 -55.2344  c
-252.797 -54.8281 -253.047 -54.5286 -253.328 -54.3359  c
-253.609 -54.1432 -253.948 -54.0469 -254.344 -54.0469  c
-254.573 -54.0469 -254.833 -54.0990 -255.125 -54.2031  c
h
-243.781 -57.0000 m
-245.016 -57.0000 l
-245.016 -64.8438 l
-245.307 -64.5625 -245.695 -64.2786 -246.180 -63.9922  c
-246.664 -63.7057 -247.094 -63.4948 -247.469 -63.3594  c
-247.469 -64.5469 l
-246.781 -64.8698 -246.180 -65.2604 -245.664 -65.7188  c
-245.148 -66.1771 -244.786 -66.6250 -244.578 -67.0625  c
-243.781 -67.0625 l
-243.781 -57.0000 l
h
-239.948 -62.8594 m
-239.948 -64.2656 l
-238.542 -64.2656 l
-238.542 -62.8594 l
-239.948 -62.8594 l
h
-239.948 -57.0000 m
-239.948 -58.4062 l
-238.542 -58.4062 l
-238.542 -57.0000 l
-239.948 -57.0000 l
h
-229.934 -62.8906 m
-236.543 -62.8906 l
-236.543 -64.0469 l
-229.934 -64.0469 l
-229.934 -62.8906 l
h
-229.934 -59.8438 m
-236.543 -59.8438 l
-236.543 -61.0000 l
-229.934 -61.0000 l
-229.934 -59.8438 l
h
-228.570 -61.9375 m
-228.570 -63.1250 -228.448 -64.0807 -228.203 -64.8047  c
-227.958 -65.5286 -227.596 -66.0859 -227.117 -66.4766  c
-226.638 -66.8672 -226.034 -67.0625 -225.305 -67.0625  c
-224.763 -67.0625 -224.289 -66.9531 -223.883 -66.7344  c
-223.477 -66.5156 -223.141 -66.2031 -222.875 -65.7969  c
-222.609 -65.3906 -222.404 -64.8958 -222.258 -64.3125  c
-222.112 -63.7292 -222.039 -62.9375 -222.039 -61.9375  c
-222.039 -60.7604 -222.159 -59.8125 -222.398 -59.0938  c
-222.638 -58.3750 -222.997 -57.8177 -223.477 -57.4219  c
-223.956 -57.0260 -224.565 -56.8281 -225.305 -56.8281  c
-226.263 -56.8281 -227.018 -57.1771 -227.570 -57.8750  c
-228.237 -58.7083 -228.570 -60.0625 -228.570 -61.9375  c
h
-227.305 -61.9375 m
-227.305 -60.2917 -227.112 -59.1979 -226.727 -58.6562  c
-226.341 -58.1146 -225.867 -57.8438 -225.305 -57.8438  c
-224.732 -57.8438 -224.253 -58.1172 -223.867 -58.6641  c
-223.482 -59.2109 -223.289 -60.3021 -223.289 -61.9375  c
-223.289 -63.5938 -223.482 -64.6927 -223.867 -65.2344  c
-224.253 -65.7760 -224.737 -66.0469 -225.320 -66.0469  c
-225.883 -66.0469 -226.331 -65.8073 -226.664 -65.3281  c
-227.091 -64.7135 -227.305 -63.5833 -227.305 -61.9375  c
h
f
newpath
-254.781 31.0000 m
-254.781 24.7031 l
-255.875 24.7031 l
-255.875 23.7344 l
-254.781 23.7344 l
-254.781 22.9688 l
-254.781 22.4792 -254.740 22.1146 -254.656 21.8750  c
-254.531 21.5625 -254.320 21.3073 -254.023 21.1094  c
-253.727 20.9115 -253.307 20.8125 -252.766 20.8125  c
-252.422 20.8125 -252.042 20.8542 -251.625 20.9375  c
-251.812 22.0000 l
-252.062 21.9583 -252.302 21.9375 -252.531 21.9375  c
-252.906 21.9375 -253.172 22.0156 -253.328 22.1719  c
-253.484 22.3281 -253.562 22.6250 -253.562 23.0625  c
-253.562 23.7344 l
-252.141 23.7344 l
-252.141 24.7031 l
-253.562 24.7031 l
-253.562 31.0000 l
-254.781 31.0000 l
h
-251.220 31.0000 m
-251.220 20.9844 l
-249.985 20.9844 l
-249.985 31.0000 l
-251.220 31.0000 l
h
-243.344 30.1094 m
-243.792 30.4948 -244.227 30.7682 -244.648 30.9297  c
-245.070 31.0911 -245.526 31.1719 -246.016 31.1719  c
-246.807 31.1719 -247.419 30.9766 -247.852 30.5859  c
-248.284 30.1953 -248.500 29.6927 -248.500 29.0781  c
-248.500 28.7240 -248.419 28.4010 -248.258 28.1094  c
-248.096 27.8177 -247.883 27.5833 -247.617 27.4062  c
-247.352 27.2292 -247.057 27.0938 -246.734 27.0000  c
-246.495 26.9375 -246.130 26.8750 -245.641 26.8125  c
-244.641 26.6979 -243.906 26.5573 -243.438 26.3906  c
-243.438 26.2240 -243.438 26.1198 -243.438 26.0781  c
-243.438 25.5677 -243.552 25.2135 -243.781 25.0156  c
-244.094 24.7344 -244.562 24.5938 -245.188 24.5938  c
-245.760 24.5938 -246.185 24.6953 -246.461 24.8984  c
-246.737 25.1016 -246.943 25.4583 -247.078 25.9688  c
-248.281 25.8125 l
-248.177 25.2917 -247.997 24.8750 -247.742 24.5625  c
-247.487 24.2500 -247.122 24.0078 -246.648 23.8359  c
-246.174 23.6641 -245.625 23.5781 -245.000 23.5781  c
-244.385 23.5781 -243.885 23.6510 -243.500 23.7969  c
-243.115 23.9427 -242.831 24.1250 -242.648 24.3438  c
-242.466 24.5625 -242.339 24.8438 -242.266 25.1875  c
-242.224 25.3958 -242.203 25.7708 -242.203 26.3125  c
-242.203 27.9531 l
-242.203 29.0990 -242.177 29.8229 -242.125 30.1250  c
-242.073 30.4271 -241.969 30.7188 -241.812 31.0000  c
-243.094 31.0000 l
-243.219 30.7396 -243.302 30.4427 -243.344 30.1094  c
h
-243.438 27.3594 m
-243.885 27.5365 -244.557 27.6927 -245.453 27.8281  c
-245.953 27.9010 -246.310 27.9818 -246.523 28.0703  c
-246.737 28.1589 -246.901 28.2917 -247.016 28.4688  c
-247.130 28.6458 -247.188 28.8385 -247.188 29.0469  c
-247.188 29.3802 -247.062 29.6562 -246.812 29.8750  c
-246.562 30.0938 -246.198 30.2031 -245.719 30.2031  c
-245.240 30.2031 -244.818 30.0990 -244.453 29.8906  c
-244.089 29.6823 -243.818 29.3958 -243.641 29.0312  c
-243.505 28.7604 -243.438 28.3542 -243.438 27.8125  c
-243.438 27.3594 l
h
-240.511 31.6094 m
-239.323 31.7812 l
-239.271 32.1458 -239.131 32.4167 -238.901 32.5938  c
-238.599 32.8125 -238.183 32.9219 -237.651 32.9219  c
-237.078 32.9219 -236.638 32.8099 -236.331 32.5859  c
-236.024 32.3620 -235.813 32.0417 -235.698 31.6250  c
-235.636 31.3750 -235.610 30.8490 -235.620 30.0469  c
-236.151 30.6823 -236.818 31.0000 -237.620 31.0000  c
-238.620 31.0000 -239.394 30.6406 -239.940 29.9219  c
-240.487 29.2031 -240.761 28.3385 -240.761 27.3281  c
-240.761 26.6406 -240.636 26.0026 -240.386 25.4141  c
-240.136 24.8255 -239.774 24.3724 -239.300 24.0547  c
-238.826 23.7370 -238.266 23.5781 -237.620 23.5781  c
-236.766 23.5781 -236.058 23.9219 -235.495 24.6094  c
-235.495 23.7344 l
-234.370 23.7344 l
-234.370 30.0156 l
-234.370 31.1510 -234.485 31.9531 -234.714 32.4219  c
-234.943 32.8906 -235.308 33.2630 -235.808 33.5391  c
-236.308 33.8151 -236.922 33.9531 -237.651 33.9531  c
-238.516 33.9531 -239.214 33.7578 -239.745 33.3672  c
-240.276 32.9766 -240.532 32.3906 -240.511 31.6094  c
h
-239.495 27.2344 m
-239.495 28.1927 -239.308 28.8906 -238.933 29.3281  c
-238.558 29.7656 -238.084 29.9844 -237.511 29.9844  c
-236.948 29.9844 -236.474 29.7656 -236.089 29.3281  c
-235.703 28.8906 -235.511 28.2083 -235.511 27.2812  c
-235.511 26.3958 -235.709 25.7266 -236.104 25.2734  c
-236.500 24.8203 -236.974 24.5938 -237.526 24.5938  c
-238.078 24.5938 -238.545 24.8151 -238.925 25.2578  c
-239.305 25.7005 -239.495 26.3594 -239.495 27.2344  c
h
-232.475 33.7812 m
-232.475 20.9844 l
-229.756 20.9844 l
-229.756 22.0000 l
-231.240 22.0000 l
-231.240 32.7656 l
-229.756 32.7656 l
-229.756 33.7812 l
-232.475 33.7812 l
h
-228.460 31.0000 m
-228.460 20.9844 l
-224.679 20.9844 l
-224.012 20.9844 -223.502 21.0156 -223.147 21.0781  c
-222.658 21.1615 -222.246 21.3177 -221.913 21.5469  c
-221.580 21.7760 -221.312 22.0964 -221.108 22.5078  c
-220.905 22.9193 -220.804 23.3750 -220.804 23.8750  c
-220.804 24.7292 -221.075 25.4505 -221.616 26.0391  c
-222.158 26.6276 -223.137 26.9219 -224.554 26.9219  c
-227.132 26.9219 l
-227.132 31.0000 l
-228.460 31.0000 l
h
-227.132 25.7500 m
-224.538 25.7500 l
-223.684 25.7500 -223.077 25.5885 -222.718 25.2656  c
-222.358 24.9427 -222.179 24.4948 -222.179 23.9219  c
-222.179 23.4948 -222.283 23.1328 -222.491 22.8359  c
-222.700 22.5391 -222.981 22.3438 -223.335 22.2500  c
-223.554 22.1875 -223.965 22.1562 -224.569 22.1562  c
-227.132 22.1562 l
-227.132 25.7500 l
h
-218.888 31.0000 m
-218.888 20.9844 l
-217.575 20.9844 l
-217.575 31.0000 l
-218.888 31.0000 l
h
-215.232 31.0000 m
-215.232 20.9844 l
-211.779 20.9844 l
-210.998 20.9844 -210.404 21.0312 -209.998 21.1250  c
-209.425 21.2500 -208.936 21.4896 -208.529 21.8438  c
-207.998 22.2917 -207.602 22.8620 -207.342 23.5547  c
-207.081 24.2474 -206.951 25.0417 -206.951 25.9375  c
-206.951 26.6979 -207.040 27.3724 -207.217 27.9609  c
-207.394 28.5495 -207.620 29.0365 -207.896 29.4219  c
-208.173 29.8073 -208.477 30.1094 -208.811 30.3281  c
-209.144 30.5469 -209.542 30.7135 -210.006 30.8281  c
-210.469 30.9427 -211.003 31.0000 -211.607 31.0000  c
-215.232 31.0000 l
h
-213.904 29.8125 m
-211.764 29.8125 l
-211.107 29.8125 -210.589 29.7526 -210.209 29.6328  c
-209.829 29.5130 -209.529 29.3385 -209.311 29.1094  c
-208.998 28.7969 -208.753 28.3750 -208.576 27.8438  c
-208.399 27.3125 -208.311 26.6667 -208.311 25.9062  c
-208.311 24.8646 -208.482 24.0625 -208.826 23.5000  c
-209.170 22.9375 -209.587 22.5573 -210.076 22.3594  c
-210.441 22.2240 -211.014 22.1562 -211.795 22.1562  c
-213.904 22.1562 l
-213.904 29.8125 l
h
-206.419 33.7812 m
-206.419 32.8906 l
-198.263 32.8906 l
-198.263 33.7812 l
-206.419 33.7812 l
h
-197.383 31.0000 m
-197.383 20.9844 l
-193.633 20.9844 l
-192.862 20.9844 -192.245 21.0859 -191.781 21.2891  c
-191.318 21.4922 -190.956 21.8021 -190.695 22.2188  c
-190.435 22.6354 -190.305 23.0781 -190.305 23.5469  c
-190.305 23.9740 -190.422 24.3750 -190.656 24.7500  c
-190.891 25.1250 -191.242 25.4323 -191.711 25.6719  c
-191.107 25.8490 -190.641 26.1510 -190.312 26.5781  c
-189.984 27.0052 -189.820 27.5104 -189.820 28.0938  c
-189.820 28.5625 -189.919 29.0000 -190.117 29.4062  c
-190.315 29.8125 -190.560 30.1250 -190.852 30.3438  c
-191.143 30.5625 -191.510 30.7266 -191.953 30.8359  c
-192.396 30.9453 -192.935 31.0000 -193.570 31.0000  c
-197.383 31.0000 l
h
-196.055 25.1875 m
-193.898 25.1875 l
-193.305 25.1875 -192.883 25.1510 -192.633 25.0781  c
-192.289 24.9740 -192.034 24.8047 -191.867 24.5703  c
-191.701 24.3359 -191.617 24.0469 -191.617 23.7031  c
-191.617 23.3698 -191.695 23.0755 -191.852 22.8203  c
-192.008 22.5651 -192.234 22.3906 -192.531 22.2969  c
-192.828 22.2031 -193.336 22.1562 -194.055 22.1562  c
-196.055 22.1562 l
-196.055 25.1875 l
h
-196.055 29.8125 m
-193.570 29.8125 l
-193.143 29.8125 -192.841 29.7969 -192.664 29.7656  c
-192.362 29.7135 -192.107 29.6224 -191.898 29.4922  c
-191.690 29.3620 -191.521 29.1771 -191.391 28.9375  c
-191.260 28.6979 -191.195 28.4167 -191.195 28.0938  c
-191.195 27.7188 -191.292 27.3932 -191.484 27.1172  c
-191.677 26.8411 -191.943 26.6484 -192.281 26.5391  c
-192.620 26.4297 -193.107 26.3750 -193.742 26.3750  c
-196.055 26.3750 l
-196.055 29.8125 l
h
-183.857 31.0000 m
-185.092 31.0000 l
-185.092 23.1562 l
-185.383 23.4375 -185.771 23.7214 -186.256 24.0078  c
-186.740 24.2943 -187.170 24.5052 -187.545 24.6406  c
-187.545 23.4531 l
-186.857 23.1302 -186.256 22.7396 -185.740 22.2812  c
-185.225 21.8229 -184.863 21.3750 -184.654 20.9375  c
-183.857 20.9375 l
-183.857 31.0000 l
h
-178.306 33.7812 m
-181.024 33.7812 l
-181.024 32.7656 l
-179.540 32.7656 l
-179.540 22.0000 l
-181.024 22.0000 l
-181.024 20.9844 l
-178.306 20.9844 l
-178.306 33.7812 l
h
-176.135 25.1406 m
-176.135 23.7344 l
-174.729 23.7344 l
-174.729 25.1406 l
-176.135 25.1406 l
h
-176.135 31.0000 m
-176.135 29.5938 l
-174.729 29.5938 l
-174.729 31.0000 l
-176.135 31.0000 l
h
-166.120 25.1094 m
-172.729 25.1094 l
-172.729 23.9531 l
-166.120 23.9531 l
-166.120 25.1094 l
h
-166.120 28.1562 m
-172.729 28.1562 l
-172.729 27.0000 l
-166.120 27.0000 l
-166.120 28.1562 l
h
-158.288 29.8125 m
-158.288 31.0000 l
-164.913 31.0000 l
-164.924 30.7083 -164.877 30.4219 -164.772 30.1406  c
-164.595 29.6927 -164.322 29.2500 -163.952 28.8125  c
-163.582 28.3750 -163.049 27.8698 -162.351 27.2969  c
-161.257 26.4010 -160.520 25.6927 -160.140 25.1719  c
-159.759 24.6510 -159.569 24.1562 -159.569 23.6875  c
-159.569 23.1979 -159.744 22.7865 -160.093 22.4531  c
-160.442 22.1198 -160.892 21.9531 -161.444 21.9531  c
-162.038 21.9531 -162.515 22.1302 -162.874 22.4844  c
-163.233 22.8385 -163.413 23.3333 -163.413 23.9688  c
-164.679 23.8281 l
-164.595 22.8906 -164.270 22.1745 -163.702 21.6797  c
-163.134 21.1849 -162.377 20.9375 -161.429 20.9375  c
-160.460 20.9375 -159.697 21.2031 -159.140 21.7344  c
-158.582 22.2656 -158.304 22.9271 -158.304 23.7188  c
-158.304 24.1250 -158.384 24.5208 -158.546 24.9062  c
-158.707 25.2917 -158.978 25.6979 -159.358 26.1250  c
-159.739 26.5521 -160.371 27.1406 -161.257 27.8906  c
-161.996 28.5052 -162.470 28.9245 -162.679 29.1484  c
-162.887 29.3724 -163.059 29.5938 -163.194 29.8125  c
-158.288 29.8125 l
h
f
.258824 .627451 .658824 RG
newpath
-254.922 -73.0000 m
-254.922 -83.0156 l
-251.141 -83.0156 l
-250.474 -83.0156 -249.964 -82.9844 -249.609 -82.9219  c
-249.120 -82.8385 -248.708 -82.6823 -248.375 -82.4531  c
-248.042 -82.2240 -247.773 -81.9036 -247.570 -81.4922  c
-247.367 -81.0807 -247.266 -80.6250 -247.266 -80.1250  c
-247.266 -79.2708 -247.536 -78.5495 -248.078 -77.9609  c
-248.620 -77.3724 -249.599 -77.0781 -251.016 -77.0781  c
-253.594 -77.0781 l
-253.594 -73.0000 l
-254.922 -73.0000 l
h
-253.594 -78.2500 m
-251.000 -78.2500 l
-250.146 -78.2500 -249.539 -78.4115 -249.180 -78.7344  c
-248.820 -79.0573 -248.641 -79.5052 -248.641 -80.0781  c
-248.641 -80.5052 -248.745 -80.8672 -248.953 -81.1641  c
-249.161 -81.4609 -249.443 -81.6562 -249.797 -81.7500  c
-250.016 -81.8125 -250.427 -81.8438 -251.031 -81.8438  c
-253.594 -81.8438 l
-253.594 -78.2500 l
h
-245.443 -73.0000 m
-245.443 -79.2969 l
-246.537 -79.2969 l
-246.537 -80.2656 l
-245.443 -80.2656 l
-245.443 -81.0312 l
-245.443 -81.5208 -245.402 -81.8854 -245.318 -82.1250  c
-245.193 -82.4375 -244.982 -82.6927 -244.686 -82.8906  c
-244.389 -83.0885 -243.969 -83.1875 -243.428 -83.1875  c
-243.084 -83.1875 -242.704 -83.1458 -242.287 -83.0625  c
-242.475 -82.0000 l
-242.725 -82.0417 -242.964 -82.0625 -243.193 -82.0625  c
-243.568 -82.0625 -243.834 -81.9844 -243.990 -81.8281  c
-244.146 -81.6719 -244.225 -81.3750 -244.225 -80.9375  c
-244.225 -80.2656 l
-242.803 -80.2656 l
-242.803 -79.2969 l
-244.225 -79.2969 l
-244.225 -73.0000 l
-245.443 -73.0000 l
h
-242.335 -75.1719 m
-241.132 -75.3594 l
-241.059 -74.8698 -240.866 -74.4948 -240.554 -74.2344  c
-240.241 -73.9740 -239.804 -73.8438 -239.241 -73.8438  c
-238.679 -73.8438 -238.259 -73.9583 -237.983 -74.1875  c
-237.707 -74.4167 -237.569 -74.6875 -237.569 -75.0000  c
-237.569 -75.2812 -237.694 -75.5000 -237.944 -75.6562  c
-238.111 -75.7708 -238.528 -75.9115 -239.194 -76.0781  c
-240.101 -76.3073 -240.728 -76.5052 -241.077 -76.6719  c
-241.426 -76.8385 -241.689 -77.0677 -241.866 -77.3594  c
-242.043 -77.6510 -242.132 -77.9740 -242.132 -78.3281  c
-242.132 -78.6510 -242.059 -78.9505 -241.913 -79.2266  c
-241.767 -79.5026 -241.564 -79.7344 -241.304 -79.9219  c
-241.116 -80.0573 -240.858 -80.1745 -240.530 -80.2734  c
-240.202 -80.3724 -239.845 -80.4219 -239.460 -80.4219  c
-238.897 -80.4219 -238.400 -80.3411 -237.968 -80.1797  c
-237.535 -80.0182 -237.215 -79.7969 -237.007 -79.5156  c
-236.799 -79.2344 -236.658 -78.8594 -236.585 -78.3906  c
-237.788 -78.2188 l
-237.840 -78.5938 -237.999 -78.8854 -238.265 -79.0938  c
-238.530 -79.3021 -238.903 -79.4062 -239.382 -79.4062  c
-239.944 -79.4062 -240.345 -79.3151 -240.585 -79.1328  c
-240.825 -78.9505 -240.944 -78.7292 -240.944 -78.4688  c
-240.944 -78.3125 -240.897 -78.1719 -240.804 -78.0469  c
-240.700 -77.9115 -240.538 -77.8021 -240.319 -77.7188  c
-240.205 -77.6771 -239.845 -77.5729 -239.241 -77.4062  c
-238.366 -77.1667 -237.757 -76.9740 -237.413 -76.8281  c
-237.069 -76.6823 -236.801 -76.4688 -236.608 -76.1875  c
-236.416 -75.9062 -236.319 -75.5573 -236.319 -75.1406  c
-236.319 -74.7240 -236.437 -74.3359 -236.671 -73.9766  c
-236.905 -73.6172 -237.249 -73.3359 -237.702 -73.1328  c
-238.155 -72.9297 -238.668 -72.8281 -239.241 -72.8281  c
-240.179 -72.8281 -240.895 -73.0260 -241.390 -73.4219  c
-241.884 -73.8177 -242.200 -74.4010 -242.335 -75.1719  c
h
-235.069 -72.3906 m
-233.882 -72.2188 l
-233.830 -71.8542 -233.689 -71.5833 -233.460 -71.4062  c
-233.158 -71.1875 -232.741 -71.0781 -232.210 -71.0781  c
-231.637 -71.0781 -231.197 -71.1901 -230.890 -71.4141  c
-230.582 -71.6380 -230.371 -71.9583 -230.257 -72.3750  c
-230.194 -72.6250 -230.168 -73.1510 -230.179 -73.9531  c
-230.710 -73.3177 -231.377 -73.0000 -232.179 -73.0000  c
-233.179 -73.0000 -233.952 -73.3594 -234.499 -74.0781  c
-235.046 -74.7969 -235.319 -75.6615 -235.319 -76.6719  c
-235.319 -77.3594 -235.194 -77.9974 -234.944 -78.5859  c
-234.694 -79.1745 -234.332 -79.6276 -233.858 -79.9453  c
-233.384 -80.2630 -232.825 -80.4219 -232.179 -80.4219  c
-231.325 -80.4219 -230.616 -80.0781 -230.054 -79.3906  c
-230.054 -80.2656 l
-228.929 -80.2656 l
-228.929 -73.9844 l
-228.929 -72.8490 -229.043 -72.0469 -229.272 -71.5781  c
-229.502 -71.1094 -229.866 -70.7370 -230.366 -70.4609  c
-230.866 -70.1849 -231.481 -70.0469 -232.210 -70.0469  c
-233.075 -70.0469 -233.772 -70.2422 -234.304 -70.6328  c
-234.835 -71.0234 -235.090 -71.6094 -235.069 -72.3906  c
h
-234.054 -76.7656 m
-234.054 -75.8073 -233.866 -75.1094 -233.491 -74.6719  c
-233.116 -74.2344 -232.642 -74.0156 -232.069 -74.0156  c
-231.507 -74.0156 -231.033 -74.2344 -230.647 -74.6719  c
-230.262 -75.1094 -230.069 -75.7917 -230.069 -76.7188  c
-230.069 -77.6042 -230.267 -78.2734 -230.663 -78.7266  c
-231.059 -79.1797 -231.533 -79.4062 -232.085 -79.4062  c
-232.637 -79.4062 -233.103 -79.1849 -233.483 -78.7422  c
-233.864 -78.2995 -234.054 -77.6406 -234.054 -76.7656  c
h
-224.752 -75.4688 m
-224.762 -75.6354 -224.768 -75.7604 -224.768 -75.8438  c
-224.768 -76.3229 -224.700 -76.7396 -224.564 -77.0938  c
-224.460 -77.3542 -224.299 -77.6198 -224.080 -77.8906  c
-223.913 -78.0885 -223.617 -78.3750 -223.189 -78.7500  c
-222.762 -79.1250 -222.486 -79.4245 -222.361 -79.6484  c
-222.236 -79.8724 -222.174 -80.1146 -222.174 -80.3750  c
-222.174 -80.8542 -222.359 -81.2760 -222.729 -81.6406  c
-223.098 -82.0052 -223.554 -82.1875 -224.096 -82.1875  c
-224.627 -82.1875 -225.067 -82.0234 -225.416 -81.6953  c
-225.765 -81.3672 -225.997 -80.8542 -226.111 -80.1562  c
-227.377 -80.2969 l
-227.262 -81.2344 -226.924 -81.9505 -226.361 -82.4453  c
-225.799 -82.9401 -225.054 -83.1875 -224.127 -83.1875  c
-223.148 -83.1875 -222.367 -82.9219 -221.783 -82.3906  c
-221.200 -81.8594 -220.908 -81.2135 -220.908 -80.4531  c
-220.908 -80.0156 -221.010 -79.6120 -221.213 -79.2422  c
-221.416 -78.8724 -221.814 -78.4271 -222.408 -77.9062  c
-222.814 -77.5521 -223.080 -77.2891 -223.205 -77.1172  c
-223.330 -76.9453 -223.421 -76.7500 -223.479 -76.5312  c
-223.536 -76.3125 -223.570 -75.9583 -223.580 -75.4688  c
-224.752 -75.4688 l
h
-224.830 -73.0000 m
-224.830 -74.4062 l
-223.439 -74.4062 l
-223.439 -73.0000 l
-224.830 -73.0000 l
h
f
.647059 .686275 .803922 RG
newpath
-164.000 -48.0000 m
-164.000 -41.3726 -169.373 -36.0000 -176.000 -36.0000  c
-182.627 -36.0000 -188.000 -41.3726 -188.000 -48.0000  c
-188.000 -54.6274 -182.627 -60.0000 -176.000 -60.0000  c
-169.373 -60.0000 -164.000 -54.6274 -164.000 -48.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-164.000 -48.0000 m
-164.000 -41.3726 -169.373 -36.0000 -176.000 -36.0000  c
-182.627 -36.0000 -188.000 -41.3726 -188.000 -48.0000  c
-188.000 -54.6274 -182.627 -60.0000 -176.000 -60.0000  c
-169.373 -60.0000 -164.000 -54.6274 -164.000 -48.0000  c
h
S
.647059 .686275 .803922 RG
newpath
-292.000 -48.0000 m
-292.000 -41.3726 -297.373 -36.0000 -304.000 -36.0000  c
-310.627 -36.0000 -316.000 -41.3726 -316.000 -48.0000  c
-316.000 -54.6274 -310.627 -60.0000 -304.000 -60.0000  c
-297.373 -60.0000 -292.000 -54.6274 -292.000 -48.0000  c
h
f
0.00000 0.00000 0.00000 RG
newpath
-292.000 -48.0000 m
-292.000 -41.3726 -297.373 -36.0000 -304.000 -36.0000  c
-310.627 -36.0000 -316.000 -41.3726 -316.000 -48.0000  c
-316.000 -54.6274 -310.627 -60.0000 -304.000 -60.0000  c
-297.373 -60.0000 -292.000 -54.6274 -292.000 -48.0000  c
h
S
newpath
-296.000 -48.0000 m
-296.000 -43.5817 -299.582 -40.0000 -304.000 -40.0000  c
-308.418 -40.0000 -312.000 -43.5817 -312.000 -48.0000  c
-312.000 -52.4183 -308.418 -56.0000 -304.000 -56.0000  c
-299.582 -56.0000 -296.000 -52.4183 -296.000 -48.0000  c
h
S
.549020 .219608 .388235 RG
newpath
-183.375 -68.2188 m
-182.125 -68.3281 l
-182.062 -67.8281 -181.922 -67.4167 -181.703 -67.0938  c
-181.484 -66.7708 -181.148 -66.5104 -180.695 -66.3125  c
-180.242 -66.1146 -179.729 -66.0156 -179.156 -66.0156  c
-178.656 -66.0156 -178.211 -66.0911 -177.820 -66.2422  c
-177.430 -66.3932 -177.141 -66.5990 -176.953 -66.8594  c
-176.766 -67.1198 -176.672 -67.4062 -176.672 -67.7188  c
-176.672 -68.0312 -176.763 -68.3047 -176.945 -68.5391  c
-177.128 -68.7734 -177.427 -68.9740 -177.844 -69.1406  c
-178.115 -69.2448 -178.711 -69.4062 -179.633 -69.6250  c
-180.555 -69.8438 -181.198 -70.0521 -181.562 -70.2500  c
-182.042 -70.5000 -182.398 -70.8099 -182.633 -71.1797  c
-182.867 -71.5495 -182.984 -71.9688 -182.984 -72.4375  c
-182.984 -72.9375 -182.841 -73.4089 -182.555 -73.8516  c
-182.268 -74.2943 -181.849 -74.6276 -181.297 -74.8516  c
-180.745 -75.0755 -180.130 -75.1875 -179.453 -75.1875  c
-178.714 -75.1875 -178.060 -75.0677 -177.492 -74.8281  c
-176.924 -74.5885 -176.490 -74.2370 -176.188 -73.7734  c
-175.885 -73.3099 -175.719 -72.7865 -175.688 -72.2031  c
-176.969 -72.1094 l
-177.031 -72.7344 -177.260 -73.2109 -177.656 -73.5391  c
-178.052 -73.8672 -178.635 -74.0312 -179.406 -74.0312  c
-180.208 -74.0312 -180.792 -73.8828 -181.156 -73.5859  c
-181.521 -73.2891 -181.703 -72.9323 -181.703 -72.5156  c
-181.703 -72.1615 -181.573 -71.8646 -181.312 -71.6250  c
-181.062 -71.3958 -180.398 -71.1589 -179.320 -70.9141  c
-178.242 -70.6693 -177.505 -70.4583 -177.109 -70.2812  c
-176.526 -70.0104 -176.094 -69.6693 -175.812 -69.2578  c
-175.531 -68.8464 -175.391 -68.3698 -175.391 -67.8281  c
-175.391 -67.2969 -175.544 -66.7943 -175.852 -66.3203  c
-176.159 -65.8464 -176.599 -65.4792 -177.172 -65.2188  c
-177.745 -64.9583 -178.385 -64.8281 -179.094 -64.8281  c
-180.000 -64.8281 -180.760 -64.9609 -181.375 -65.2266  c
-181.990 -65.4922 -182.471 -65.8906 -182.820 -66.4219  c
-183.169 -66.9531 -183.354 -67.5521 -183.375 -68.2188  c
h
-169.443 -65.0000 m
-170.678 -65.0000 l
-170.678 -72.8438 l
-170.969 -72.5625 -171.357 -72.2786 -171.842 -71.9922  c
-172.326 -71.7057 -172.756 -71.4948 -173.131 -71.3594  c
-173.131 -72.5469 l
-172.443 -72.8698 -171.842 -73.2604 -171.326 -73.7188  c
-170.811 -74.1771 -170.449 -74.6250 -170.240 -75.0625  c
-169.443 -75.0625 l
-169.443 -65.0000 l
h
f
.258824 .658824 .282353 RG
newpath
-255.125 17.7969 m
-255.266 16.6406 l
-254.995 16.7135 -254.760 16.7500 -254.562 16.7500  c
-254.292 16.7500 -254.073 16.7057 -253.906 16.6172  c
-253.740 16.5286 -253.604 16.4010 -253.500 16.2344  c
-253.427 16.1094 -253.302 15.8021 -253.125 15.3125  c
-253.104 15.2500 -253.068 15.1510 -253.016 15.0156  c
-255.781 7.73438 l
-254.453 7.73438 l
-252.938 11.9375 l
-252.740 12.4792 -252.562 13.0417 -252.406 13.6250  c
-252.271 13.0625 -252.104 12.5104 -251.906 11.9688  c
-250.359 7.73438 l
-249.125 7.73438 l
-251.891 15.1250 l
-252.182 15.9167 -252.411 16.4635 -252.578 16.7656  c
-252.797 17.1719 -253.047 17.4714 -253.328 17.6641  c
-253.609 17.8568 -253.948 17.9531 -254.344 17.9531  c
-254.573 17.9531 -254.833 17.9010 -255.125 17.7969  c
h
-243.781 15.0000 m
-245.016 15.0000 l
-245.016 7.15625 l
-245.307 7.43750 -245.695 7.72135 -246.180 8.00781  c
-246.664 8.29427 -247.094 8.50521 -247.469 8.64062  c
-247.469 7.45312 l
-246.781 7.13021 -246.180 6.73958 -245.664 6.28125  c
-245.148 5.82292 -244.786 5.37500 -244.578 4.93750  c
-243.781 4.93750 l
-243.781 15.0000 l
h
-233.823 9.10938 m
-240.433 9.10938 l
-240.433 7.95312 l
-233.823 7.95312 l
-233.823 9.10938 l
h
-233.823 12.1562 m
-240.433 12.1562 l
-240.433 11.0000 l
-233.823 11.0000 l
-233.823 12.1562 l
h
-225.647 9.10938 m
-232.257 9.10938 l
-232.257 7.95312 l
-225.647 7.95312 l
-225.647 9.10938 l
h
-225.647 12.1562 m
-232.257 12.1562 l
-232.257 11.0000 l
-225.647 11.0000 l
-225.647 12.1562 l
h
-220.331 15.0000 m
-220.331 12.5938 l
-224.690 12.5938 l
-224.690 11.4688 l
-220.112 4.98438 l
-219.112 4.98438 l
-219.112 11.4688 l
-217.753 11.4688 l
-217.753 12.5938 l
-219.112 12.5938 l
-219.112 15.0000 l
-220.331 15.0000 l
h
-220.331 11.4688 m
-220.331 6.95312 l
-223.472 11.4688 l
-220.331 11.4688 l
h
-216.498 12.3750 m
-215.201 12.2656 l
-215.107 12.8906 -214.886 13.3620 -214.537 13.6797  c
-214.188 13.9974 -213.769 14.1562 -213.279 14.1562  c
-212.686 14.1562 -212.183 13.9323 -211.771 13.4844  c
-211.360 13.0365 -211.154 12.4479 -211.154 11.7188  c
-211.154 11.0104 -211.352 10.4531 -211.748 10.0469  c
-212.144 9.64062 -212.660 9.43750 -213.295 9.43750  c
-213.691 9.43750 -214.048 9.52865 -214.365 9.71094  c
-214.683 9.89323 -214.936 10.1250 -215.123 10.4062  c
-216.279 10.2656 l
-215.311 5.10938 l
-210.326 5.10938 l
-210.326 6.29688 l
-214.326 6.29688 l
-214.857 8.98438 l
-214.253 8.56771 -213.623 8.35938 -212.967 8.35938  c
-212.092 8.35938 -211.355 8.66146 -210.756 9.26562  c
-210.157 9.86979 -209.857 10.6510 -209.857 11.6094  c
-209.857 12.5156 -210.118 13.2969 -210.639 13.9531  c
-211.285 14.7656 -212.165 15.1719 -213.279 15.1719  c
-214.186 15.1719 -214.928 14.9167 -215.506 14.4062  c
-216.084 13.8958 -216.415 13.2188 -216.498 12.3750  c
h
f
.654902 .258824 .658824 RG
newpath
-183.125 -22.2031 m
-183.266 -23.3594 l
-182.995 -23.2865 -182.760 -23.2500 -182.562 -23.2500  c
-182.292 -23.2500 -182.073 -23.2943 -181.906 -23.3828  c
-181.740 -23.4714 -181.604 -23.5990 -181.500 -23.7656  c
-181.427 -23.8906 -181.302 -24.1979 -181.125 -24.6875  c
-181.104 -24.7500 -181.068 -24.8490 -181.016 -24.9844  c
-183.781 -32.2656 l
-182.453 -32.2656 l
-180.938 -28.0625 l
-180.740 -27.5208 -180.562 -26.9583 -180.406 -26.3750  c
-180.271 -26.9375 -180.104 -27.4896 -179.906 -28.0312  c
-178.359 -32.2656 l
-177.125 -32.2656 l
-179.891 -24.8750 l
-180.182 -24.0833 -180.411 -23.5365 -180.578 -23.2344  c
-180.797 -22.8281 -181.047 -22.5286 -181.328 -22.3359  c
-181.609 -22.1432 -181.948 -22.0469 -182.344 -22.0469  c
-182.573 -22.0469 -182.833 -22.0990 -183.125 -22.2031  c
h
-171.781 -25.0000 m
-173.016 -25.0000 l
-173.016 -32.8438 l
-173.307 -32.5625 -173.695 -32.2786 -174.180 -31.9922  c
-174.664 -31.7057 -175.094 -31.4948 -175.469 -31.3594  c
-175.469 -32.5469 l
-174.781 -32.8698 -174.180 -33.2604 -173.664 -33.7188  c
-173.148 -34.1771 -172.786 -34.6250 -172.578 -35.0625  c
-171.781 -35.0625 l
-171.781 -25.0000 l
h
-168.448 -29.3750 m
-168.448 -30.5312 l
-161.808 -33.3281 l
-161.808 -32.1094 l
-167.073 -29.9531 l
-161.808 -27.7656 l
-161.808 -26.5469 l
-168.448 -29.3750 l
h
-153.647 -30.8906 m
-160.257 -30.8906 l
-160.257 -32.0469 l
-153.647 -32.0469 l
-153.647 -30.8906 l
h
-153.647 -27.8438 m
-160.257 -27.8438 l
-160.257 -29.0000 l
-153.647 -29.0000 l
-153.647 -27.8438 l
h
-148.331 -25.0000 m
-148.331 -27.4062 l
-152.690 -27.4062 l
-152.690 -28.5312 l
-148.112 -35.0156 l
-147.112 -35.0156 l
-147.112 -28.5312 l
-145.753 -28.5312 l
-145.753 -27.4062 l
-147.112 -27.4062 l
-147.112 -25.0000 l
-148.331 -25.0000 l
h
-148.331 -28.5312 m
-148.331 -33.0469 l
-151.472 -28.5312 l
-148.331 -28.5312 l
h
-144.498 -27.6250 m
-143.201 -27.7344 l
-143.107 -27.1094 -142.886 -26.6380 -142.537 -26.3203  c
-142.188 -26.0026 -141.769 -25.8438 -141.279 -25.8438  c
-140.686 -25.8438 -140.183 -26.0677 -139.771 -26.5156  c
-139.360 -26.9635 -139.154 -27.5521 -139.154 -28.2812  c
-139.154 -28.9896 -139.352 -29.5469 -139.748 -29.9531  c
-140.144 -30.3594 -140.660 -30.5625 -141.295 -30.5625  c
-141.691 -30.5625 -142.048 -30.4714 -142.365 -30.2891  c
-142.683 -30.1068 -142.936 -29.8750 -143.123 -29.5938  c
-144.279 -29.7344 l
-143.311 -34.8906 l
-138.326 -34.8906 l
-138.326 -33.7031 l
-142.326 -33.7031 l
-142.857 -31.0156 l
-142.253 -31.4323 -141.623 -31.6406 -140.967 -31.6406  c
-140.092 -31.6406 -139.355 -31.3385 -138.756 -30.7344  c
-138.157 -30.1302 -137.857 -29.3490 -137.857 -28.3906  c
-137.857 -27.4844 -138.118 -26.7031 -138.639 -26.0469  c
-139.285 -25.2344 -140.165 -24.8281 -141.279 -24.8281  c
-142.186 -24.8281 -142.928 -25.0833 -143.506 -25.5938  c
-144.084 -26.1042 -144.415 -26.7812 -144.498 -27.6250  c
h
f
.549020 .219608 .388235 RG
newpath
-313.375 -66.2188 m
-312.125 -66.3281 l
-312.062 -65.8281 -311.922 -65.4167 -311.703 -65.0938  c
-311.484 -64.7708 -311.148 -64.5104 -310.695 -64.3125  c
-310.242 -64.1146 -309.729 -64.0156 -309.156 -64.0156  c
-308.656 -64.0156 -308.211 -64.0911 -307.820 -64.2422  c
-307.430 -64.3932 -307.141 -64.5990 -306.953 -64.8594  c
-306.766 -65.1198 -306.672 -65.4062 -306.672 -65.7188  c
-306.672 -66.0312 -306.763 -66.3047 -306.945 -66.5391  c
-307.128 -66.7734 -307.427 -66.9740 -307.844 -67.1406  c
-308.115 -67.2448 -308.711 -67.4062 -309.633 -67.6250  c
-310.555 -67.8438 -311.198 -68.0521 -311.562 -68.2500  c
-312.042 -68.5000 -312.398 -68.8099 -312.633 -69.1797  c
-312.867 -69.5495 -312.984 -69.9688 -312.984 -70.4375  c
-312.984 -70.9375 -312.841 -71.4089 -312.555 -71.8516  c
-312.268 -72.2943 -311.849 -72.6276 -311.297 -72.8516  c
-310.745 -73.0755 -310.130 -73.1875 -309.453 -73.1875  c
-308.714 -73.1875 -308.060 -73.0677 -307.492 -72.8281  c
-306.924 -72.5885 -306.490 -72.2370 -306.188 -71.7734  c
-305.885 -71.3099 -305.719 -70.7865 -305.688 -70.2031  c
-306.969 -70.1094 l
-307.031 -70.7344 -307.260 -71.2109 -307.656 -71.5391  c
-308.052 -71.8672 -308.635 -72.0312 -309.406 -72.0312  c
-310.208 -72.0312 -310.792 -71.8828 -311.156 -71.5859  c
-311.521 -71.2891 -311.703 -70.9323 -311.703 -70.5156  c
-311.703 -70.1615 -311.573 -69.8646 -311.312 -69.6250  c
-311.062 -69.3958 -310.398 -69.1589 -309.320 -68.9141  c
-308.242 -68.6693 -307.505 -68.4583 -307.109 -68.2812  c
-306.526 -68.0104 -306.094 -67.6693 -305.812 -67.2578  c
-305.531 -66.8464 -305.391 -66.3698 -305.391 -65.8281  c
-305.391 -65.2969 -305.544 -64.7943 -305.852 -64.3203  c
-306.159 -63.8464 -306.599 -63.4792 -307.172 -63.2188  c
-307.745 -62.9583 -308.385 -62.8281 -309.094 -62.8281  c
-310.000 -62.8281 -310.760 -62.9609 -311.375 -63.2266  c
-311.990 -63.4922 -312.471 -63.8906 -312.820 -64.4219  c
-313.169 -64.9531 -313.354 -65.5521 -313.375 -66.2188  c
h
-304.084 -67.9375 m
-304.084 -69.1250 -303.962 -70.0807 -303.717 -70.8047  c
-303.472 -71.5286 -303.110 -72.0859 -302.631 -72.4766  c
-302.152 -72.8672 -301.548 -73.0625 -300.818 -73.0625  c
-300.277 -73.0625 -299.803 -72.9531 -299.396 -72.7344  c
-298.990 -72.5156 -298.654 -72.2031 -298.389 -71.7969  c
-298.123 -71.3906 -297.917 -70.8958 -297.771 -70.3125  c
-297.626 -69.7292 -297.553 -68.9375 -297.553 -67.9375  c
-297.553 -66.7604 -297.673 -65.8125 -297.912 -65.0938  c
-298.152 -64.3750 -298.511 -63.8177 -298.990 -63.4219  c
-299.469 -63.0260 -300.079 -62.8281 -300.818 -62.8281  c
-301.777 -62.8281 -302.532 -63.1771 -303.084 -63.8750  c
-303.751 -64.7083 -304.084 -66.0625 -304.084 -67.9375  c
h
-302.818 -67.9375 m
-302.818 -66.2917 -302.626 -65.1979 -302.240 -64.6562  c
-301.855 -64.1146 -301.381 -63.8438 -300.818 -63.8438  c
-300.245 -63.8438 -299.766 -64.1172 -299.381 -64.6641  c
-298.995 -65.2109 -298.803 -66.3021 -298.803 -67.9375  c
-298.803 -69.5938 -298.995 -70.6927 -299.381 -71.2344  c
-299.766 -71.7760 -300.251 -72.0469 -300.834 -72.0469  c
-301.396 -72.0469 -301.844 -71.8073 -302.178 -71.3281  c
-302.605 -70.7135 -302.818 -69.5833 -302.818 -67.9375  c
h
f
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
-291.000 -48.0000 m
-189.000 -48.0000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-198.659 -45.4118 m
-189.000 -48.0000 l
-198.659 -50.5882 l
S
2 J
0 j
1 J
2 j
[ 5.00000 5.00000 ] 0.00000 d
newpath
-186.400 -40.2000 m
-232.000 -6.00000 l
-237.333 -2.00000 -242.667 -2.00000 -248.000 -6.00000  c
-293.600 -40.2000 l
S
10.0000 M
[ ] 0.00000 d
newpath
-284.320 -36.4750 m
-293.600 -40.2000 l
-287.426 -32.3339 l
S
2 J
0 j
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix

%%Trailer
%%EOF
